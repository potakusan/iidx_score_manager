{"version":3,"sources":["view/components/snackBar/index.tsx","view/components/header/appBar.tsx","view/pages/index.tsx","components/common/timeFormatter.tsx","components/settings/index.tsx","components/songs/filter.tsx","components/bpi/index.tsx","components/indexedDB/index.tsx","components/csv/import.tsx","view/pages/data.tsx","view/components/songs/bpiChart.tsx","view/components/songs/songDetails.tsx","view/components/songs/songDiffs.tsx","view/components/songs/common/tabPanel.tsx","view/components/songs/detailsScreen.tsx","view/components/songs/common/index.tsx","view/components/songs/played/tablePlayed.tsx","view/components/songs/played/songsList.tsx","view/pages/songs.tsx","view/pages/favorites.tsx","view/components/songs/notplayed/tableNotPlayed.tsx","view/components/songs/notplayed/notPlayList.tsx","view/pages/notPlayed.tsx","view/pages/stats.tsx","components/context/global.tsx","view/pages/settings.tsx","view/components/compare/table.tsx","view/pages/compare.tsx","i18n/ja.js","i18n/en.js","route/index.tsx","components/initialize/index.tsx","themes/dark.tsx","serviceWorker.js","index.tsx","App.tsx"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","styles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackBarWrapper","props","classes","className","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","Button","onClick","color","size","ShowSnackBar","open","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","handleClose","HideOnScroll","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","GlobalHeader","toggleNav","setState","isOpen","state","toggleErrorSnack","errorSnack","this","Fragment","AppBar","Toolbar","IconButton","edge","aria-label","global","cannotMove","Typography","Drawer","List","style","width","to","ListItem","button","ListItemIcon","ListItemText","Divider","React","Component","Index","Container","fixed","component","align","gutterBottom","paragraph","Grid","container","justify","item","href","timeFormatter","type","date","Date","m","moment","format","_isSingle","localStorage","getItem","_currentStore","_lang","_currentVersion","lampCSVArray","convertClearState","original","indexOf","_prefix","diff","_prefixFromNum","difficulty","prefix","difficultyDiscriminator","getSongSuffixForIIDXInfo","name","convertLeggendariaStates","newName","newDifficulty","replace","bpiCalcuator","alreadyHaveData","songsDB","isSingle","propData","s","k","z","pgf","j","avg","wr","_allTwelvesLength","_allTwelvesBPI","data","exScore","exec","songTitle","getOneItemIsSingle","getOneItemIsDouble","Error","bpi","difficultyLevel","NaN","reason","res","_s","_k","_s_","_z_","Math","pow","log","round","max","i","N","E","ceil","sum","playedSongs","length","log2","abs","val","storageWrapper","scores","songs","stores","calculator","newSongs","version","scoreHistory","table","reduced","t","setPropData","Dexie","scoresDB","storedAt","where","toArray","currentData","clear","title","equals","filter","map","currentBPI","delete","isImported","modify","Number","Pgreat","great","missCount","clearState","lastPlayed","lastScore","updatedAt","e","console","put","score","newScoreData","add","Object","assign","self","toCollection","apply","scoreHistoryDB","currentStore","forceUpdateTime","BPI","then","sort","a","b","willUpdate","_storedAt","song","reduce","result","current","push","all","keys","reverse","willCollection","notEqual","matched","getAll","and","isFavorited","diffs","notes","bpm","textage","dpLevel","isCreated","newState","importCSV","raw","rawData","resultHistory","mode","Promise","resolve","reject","splittedByBreak","split","lengthSum","eachObjNum","p","onChangeText","value","isSnackbarOpen","stateText","errors","isSaving","currentState","progress","execute","bind","setMove","executor","calc","bpiCalculator","getResult","getResultHistory","h","len","calcData","body","setItem","putItem","ContentProps","rel","TextField","onChange","label","margin","multiline","rowsMax","position","disabled","CircularProgress","top","left","marginTop","marginLeft","BPIChart","chartData","graphLastUpdated","height","key","strokeDasharray","dataKey","domain","ticks","isAnimationActive","fill","y","stroke","isFront","SongDetails","Paper","Table","TableHead","TableRow","TableCell","minWidth","maxWidth","TableBody","floor","isNaN","SongDiffs","handleChange","event","isLoading","updateScoreData","dataset","getWithinVersion","getAcrossVersion","FormControl","InputLabel","shrink","Select","displayEmpty","MenuItem","justifyContent","scoreTable","DiffsTable","columns","column","row","hover","role","tabIndex","background","TabPanel","index","DetailedSongInformation","unlisten","makeGraph","newScore","lastExScore","dataInserter","setData","bpiBasis","mybest","exScoreFromBPI","calcFromBPI","String","handleScoreInput","errorSnackMessage","newBPI","getTime","handleTabChange","_e","newValue","currentTab","toggleMenu","anchorEl","currentTarget","jumpWeb","formatMessage","intl","toggleFavorited","favorited","db","toggleFavorite","toggleSuccessSnack","successSnack","calcRank","rank","saveAndClose","willDelete","scoreHist","updateScore","handleOpen","showRank","isBody","percentage","isError","showCharts","history","listen","_newLocation","go","detectStarIconColor","Dialog","fullScreen","overflowX","flexGrow","xs","flexDirection","noValidate","autoComplete","Tooltip","aria-haspopup","keepMounted","Boolean","Tabs","indicatorColor","textColor","Tab","withRouter","injectIntl","diffColor","SongsTable","updateFlag","_willDeleteItems","currentSongData","allSongsData","currentScoreData","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","changeSort","isDesc","slice","bp","behindScore","TablePagination","rowsPerPageOptions","count","labelRowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","SongsList","handleLevelChange","handleExec","checked","handleDiffChange","scoreData","songFilter","options","handleInputChange","cloneState","filterByName","r","range","f","full","week","evaluateRange","some","toLowerCase","newNum","sortedData","localeCompare","numeric","Infinity","aMax","bMax","handleModeChange","handleRangeCange","JSON","parse","stringify","level","allSongs","allSongsRawData","prevProps","equal","htmlFor","Input","placeholder","endAdornment","InputAdornment","FormLabel","FormGroup","FormControlLabel","control","Checkbox","Songs","getAllFavoritedItems","d","willDeleteItems","_event","NotPlayList","songData","whenUpdated","willDeleteItem","NotPlayed","Stats","totalBPI","perDate","getAllTwelvesLength","allTwelvesLength","getAllTwelvesBPI","allTwelvesBPI","groups","allDiffs","eachDaySum","c","md","lg","padding","right","bottom","tick","dx","GlobalContainer","lang","store","setLang","setStore","newLang","newStore","Settings","updateDef","end","disableUpdateBtn","sdb","reducer","fetch","json","currentVersion","promiseProducer","updateItem","scDB","setNewSongsDBRawData","recalculateBPI","startIcon","Compare","gap","handleCompareFromChange","compareFrom","dataHandler","handleCompareToChange","compareTo","filtered","getSpecificVersionAll","fData","tScore","tData","compareData","ja","Router","locale","messages","en","path","exact","render","_props","Favorite","Initialize","storage","wait","msec","setTimeout","show","now","csv","createMuiTheme","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","secondary","overrides","MuiButton","root","textTransform","location","hostname","match","ReactDOM","document","ThemeProvider","defaultTheme","CssBaseline","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"usBAYMA,GAAc,CAClBC,QAASC,IACTC,QAASC,KACTC,MAAOC,IACPC,KAAMC,KAGFC,GAASC,cAAW,SAACC,GAAD,MAAmB,CAC3CV,QAAS,CACPW,gBAAiBC,IAAM,MAEzBR,MAAO,CACLO,gBAAiBD,EAAMG,QAAQT,MAAMU,MAEvCR,KAAM,CACJK,gBAAiBD,EAAMG,QAAQE,QAAQC,MAEzCd,QAAS,CACPS,gBAAiBM,IAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAaZ,EAAMa,QAAQ,IAE7BC,QAAS,CACPC,QAAS,OACTC,WAAY,cAchB,SAASC,GAAgBC,GACvB,IAAMC,EAAUrB,KACRsB,EAAmDF,EAAnDE,UAAWN,EAAwCI,EAAxCJ,QAASO,EAA+BH,EAA/BG,QAASC,EAAsBJ,EAAtBI,QAAYC,EAFZ,YAEsBL,EAFtB,6CAG/BM,EAAOnC,GAAYiC,GAEzB,OACE,kBAACG,GAAA,EAAD,eACEL,UAAWM,YAAKP,EAAQG,GAAUF,GAClCO,mBAAiB,kBACjBb,QACE,0BAAMc,GAAG,kBAAkBR,UAAWD,EAAQL,SAC5C,kBAACU,EAAD,CAAMJ,UAAWM,YAAKP,EAAQX,KAAMW,EAAQT,eAC3CI,GAGLe,OAAQ,CACN,kBAACC,EAAA,EAAD,CAAQC,QAASV,EAASW,MAAM,UAAUC,KAAK,SAA/C,QAIEV,IAKK,SAASW,GAAahB,GACnC,OAAIA,EAAMiB,KAIR,6BACE,kBAACC,GAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdJ,KAAMjB,EAAMiB,KACZK,iBAAkBtB,EAAMsB,iBAAmBtB,EAAMsB,iBAAmB,IACpEnB,QAASH,EAAMuB,aAEf,kBAACxB,GAAD,CACEI,QAASH,EAAMuB,YACfnB,QAASJ,EAAMI,QACfR,QAASI,EAAMJ,YAhBb,KCrDZ,SAAS4B,GAAaxB,GAA0B,IACtCyB,EAAqBzB,EAArByB,SAAUC,EAAW1B,EAAX0B,OACZC,EAAUC,YAAiB,CAAEC,OAAQH,EAASA,SAAWI,IAE/D,OACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOC,IAAKP,GACzCF,G,IA4GQU,G,YAhGb,WAAYnC,GAAwC,IAAD,8BACjD,4CAAMA,KAORoC,UAAY,kBAAK,EAAKC,SAAS,CAACC,QAAQ,EAAKC,MAAMD,UARA,EASnDE,iBAAmB,kBAAK,EAAKH,SAAS,CAACI,YAAY,EAAKF,MAAME,cAP5D,EAAKF,MAAQ,CACXD,QAAQ,EACRG,YAAW,GAJoC,E,sEAW1C,IAAD,OACCH,EAAUI,KAAKH,MAAfD,OAEP,OACE,kBAAC,IAAMK,SAAP,KACE,kBAACnB,GAAiBkB,KAAK1C,MACrB,kBAAC4C,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQjC,MAAM,UAAUkC,aAAW,OAAOnC,QAAS,WAClE,OAAI,EAAKb,MAAMiD,OAAOV,MAAMW,WAGnB,EAAKV,mBAFL,EAAKJ,cAKd,kBAAC,IAAD,OAEF,kBAACe,EAAA,EAAD,CAAY/C,QAAQ,MAClB,kBAAC,IAAD,CAAkBM,GAAG,kBAK7B,kBAACmC,EAAA,EAAD,MACA,kBAACO,EAAA,EAAD,CAAQnC,KAAMqB,EAAQnC,QAASuC,KAAKN,WAClC,kBAACiB,EAAA,EAAD,CAAMC,MAAO,CAACC,MAAM,UAClB,kBAAC,IAAD,CAAMC,GAAG,IAAItD,UAAU,sBAAsBW,QAAS6B,KAAKN,WACzD,kBAACqB,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAczE,QAAS,kBAAC,IAAD,CAAkBuB,GAAG,uBAGhD,kBAAC,IAAD,CAAM8C,GAAG,QAAQtD,UAAU,sBAAsBW,QAAS6B,KAAKN,WAC7D,kBAACqB,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAczE,QAAS,kBAAC,IAAD,CAAkBuB,GAAG,uBAGhD,kBAAC,IAAD,CAAM8C,GAAG,YAAYtD,UAAU,sBAAsBW,QAAS6B,KAAKN,WACjE,kBAACqB,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAczE,QAAS,kBAAC,IAAD,CAAkBuB,GAAG,gCAGhD,kBAAC,IAAD,CAAM8C,GAAG,SAAStD,UAAU,sBAAsBW,QAAS6B,KAAKN,WAC9D,kBAACqB,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAczE,QAAS,kBAAC,IAAD,CAAkBuB,GAAG,2BAGhD,kBAAC,IAAD,CAAM8C,GAAG,aAAatD,UAAU,sBAAsBW,QAAS6B,KAAKN,WAClE,kBAACqB,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAczE,QAAS,kBAAC,IAAD,CAAkBuB,GAAG,oCAGhD,kBAAC,IAAD,CAAM8C,GAAG,WAAWtD,UAAU,sBAAsBW,QAAS6B,KAAKN,WAChE,kBAACqB,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAczE,QAAS,kBAAC,IAAD,CAAkBuB,GAAG,0BAGhD,kBAAC,IAAD,CAAM8C,GAAG,SAAStD,UAAU,sBAAsBW,QAAS6B,KAAKN,WAC9D,kBAACqB,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAczE,QAAS,kBAAC,IAAD,CAAkBuB,GAAG,6BAGhD,kBAAC,IAAD,CAAM8C,GAAG,YAAYtD,UAAU,sBAAsBW,QAAS6B,KAAKN,WACjE,kBAACqB,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,KAAc,kBAAC,IAAD,OACd,kBAACC,EAAA,EAAD,CAAczE,QAAS,kBAAC,IAAD,CAAkBuB,GAAG,4BAIlD,kBAACmD,EAAA,EAAD,OAEF,kBAAC7C,GAAD,CAAcpB,QAAS,+GAAsBQ,QAAQ,UACjDmB,YAAamB,KAAKF,iBAAkBvB,KAAMyB,KAAKH,MAAME,WAAYnB,iBAAkB,W,GA3FpEwC,IAAMC,W,8BCrCZC,G,iLAGjB,OACE,uBAAK9D,UAAU,cACb,gBAAC+D,GAAA,EAAD,CAAWC,OAAK,GACd,gBAACf,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKgE,MAAM,SAAStD,MAAM,cAAcuD,cAAY,GACrF,gBAAC,IAAD,CAAkB3D,GAAG,eAEvB,gBAACyC,EAAA,EAAD,CAAY/C,QAAQ,KAAKgE,MAAM,SAAStD,MAAM,gBAAgBwD,WAAS,GACrE,gBAAC,IAAD,CAAkB5D,GAAG,oBAEvB,gBAACyC,EAAA,EAAD,CAAYiB,MAAM,SAAStD,MAAM,gBAAgBwD,WAAS,GAA1D,0GAGA,2BACE,gBAACC,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,EAAG8E,QAAQ,UAClC,gBAACF,GAAA,EAAD,CAAMG,MAAI,GACR,gBAAC,IAAD,CAAMlB,GAAG,SACP,gBAAC5C,EAAA,EAAD,CAAQR,QAAQ,YAAYU,MAAM,WAChC,gBAAC,IAAD,CAAkBJ,GAAG,4BAM/B,2BACE,gBAAC6D,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,EAAG8E,QAAQ,UAClC,gBAACF,GAAA,EAAD,CAAMG,MAAI,GACR,gBAACvB,EAAA,EAAD,CAAYiB,MAAM,SAAStD,MAAM,gBAAgBwD,WAAS,EAAClE,QAAQ,WACjE,gBAAC,IAAD,CAAkBM,GAAG,kBAEvB,gBAACyC,EAAA,EAAD,CAAYiB,MAAM,SAAStD,MAAM,gBAAgBwD,WAAS,EAAClE,QAAQ,WACjE,gBAAC,IAAD,CAAkBM,GAAG,kBAEvB,gBAACyC,EAAA,EAAD,CAAYiB,MAAM,SAAStD,MAAM,gBAAgBwD,WAAS,EAAClE,QAAQ,WAAnE,6BAC4B,2BAD5B,gHAE+G,qBAAGuE,KAAK,oCAAR,iBAF/G,c,GAnCmBb,a,kECSpBc,GAfO,WAAuC,IAAtCC,EAAqC,uDAA9B,EAAEC,EAA4B,uDAArB,IAAIC,KACnCC,EAAIC,KAAOH,GACjB,OAAQD,GACN,KAAK,EACL,OAAOG,EAAEE,OAAO,oBAChB,KAAK,EACL,OAAOF,EAAEE,OAAO,YAChB,KAAK,EACL,OAAOF,EAAEE,OAAO,UAChB,KAAK,EACL,OAAOF,EAAEE,OAAO,uBAElB,MAAO,ICdIC,GAAY,WACrB,OAAQC,aAAaC,QAAQ,YAAc,EAAI,GAGtCC,GAAgB,WAC3B,OAAOF,aAAaC,QAAQ,iBAAmB,MAGpCE,GAAQ,WACnB,OAAOH,aAAaC,QAAQ,SAAW,MAG5BG,GAAkB,WAC7B,OAAOJ,aAAaC,QAAQ,mBAAqB,aCVtCI,GAAwB,CACnC,SAAS,eAAe,aAAa,QAAQ,aAAa,gBAAgB,mBAG/DC,GAAoB,SAACC,EAAuB1D,GACvD,OAAiB,IAAdA,EAEsB,kBAAb0D,EAA8B,EACjCF,GAAaG,QAAQD,GAEL,kBAAbA,EAA8B,EACjCF,GAAaE,IAIXE,GAAU,SAACC,GAAD,MAAgC,UAATA,EAAmB,MAAiB,gBAATA,EAAyB,WAAQ,IAE7FC,GAAiB,SAACC,GAC7B,IAAIC,EAAgB,GAOpB,MANkB,MAAfD,GAAqC,MAAfA,IACvBC,EAAS,OAEO,OAAfD,GAAsC,OAAfA,IACxBC,EAAS,YAEJA,GAGIC,GAA0B,SAACF,GACtC,IAAIF,EAAc,UAOlB,MANkB,MAAfE,GAAqC,MAAfA,IACvBF,EAAO,SAES,OAAfE,GAAsC,OAAfA,IACxBF,EAAO,eAEFA,GAGIK,GAA2B,SAACC,EAAYJ,GACnD,GAAkB,MAAfA,GAAqC,MAAfA,EACvB,MAAO,MAET,GAAkB,MAAfA,GAAqC,MAAfA,EACvB,MAAO,MAET,GAAkB,OAAfA,GAAsC,OAAfA,EACxB,OAAOI,GACL,QACE,MAAO,YACT,IAAK,iBACL,IAAK,iCACL,IAAK,gBACL,IAAK,UACL,IAAK,UACL,IAAK,YACL,IAAK,2BACH,MAAO,uBAGb,MAAO,IAIIC,GAA2B,SAACD,EAAYJ,GACnD,IA6CIM,EAAUF,EAAKG,EAAgBP,EACnC,MAAkB,YAAfA,EACM,CACLI,KAAKE,EACLN,WAAWO,IAjDmB,CAChC,iBACA,eACA,iBACA,sBACA,+BACA,iBACA,2BACA,mBACA,gBACA,kBACA,eACA,yBACA,uBACA,uBACA,oCACA,8BACA,qEACA,0BACA,qBACA,8BACA,gBACA,uBACA,eACA,+DACA,iFACA,kCACA,kDACA,iCACA,2BACA,2BACA,6BACA,4CACA,eACA,sBACA,8BACA,mBACA,sBACA,qEACA,qHACA,0BACA,4BACA,uBACA,sCASkBX,QAAQQ,IAAS,IACnCE,EAAUF,EAAKI,QAAQ,oBAAe,IAAIA,QAAQ,SAAI,IACtDD,EAAgB,eAEX,CACLH,KAAKE,EACLN,WAAWO,KCvHME,G,WAKnB,aAA6C,IAAD,OAAhCC,EAAgC,iFAJ5CC,aAI4C,OAH5CC,cAG4C,OAF5CC,SAA2B,KAEiB,KAapC7B,EAAW,EAbyB,KAcpC8B,EAAW,EAdyB,KAepCC,EAAW,EAfyB,KAgBpCC,EAAW,EAhByB,KAiBpCC,IAAM,SAACC,GAAD,OAAoB,GAAMA,EAAI,EAAKlC,EAAI,KAAU,EAAIkC,EAAI,EAAKlC,IAjBhC,KA+DpCmC,IAAa,EA/DuB,KAgEpCC,GAAY,EAhEwB,KAuF5CC,kBAA2B,EAvFiB,KAwF5CC,eAA0B,GAvFxB5E,KAAKkE,SAAW,EAChBlE,KAAKiE,QAAWD,EAAkC,KAAhB,IAAIC,G,wDAG5BY,EAAcC,GAKxB,OAJA9E,KAAKoE,EAAIU,EACT9E,KAAKqE,EAAIQ,EAAI,IACb7E,KAAKsE,EAAIO,EAAI,GACb7E,KAAKsC,EAAoB,EAAhBuC,EAAI,MACN7E,KAAK+E,S,sEASHC,EAAiB1B,EAAkBwB,G,8EAER,IAAlB9E,KAAKkE,S,gCACflE,KAAKiE,QAAQgB,mBAAmBD,EAAU1B,G,0DAC1CtD,KAAKiE,QAAQiB,mBAAmBF,EAAU1B,G,8BAFhDtD,KAAKmE,S,KAGDnE,KAAKmE,UAAanE,KAAKmE,SAAS,G,uBAC5B,IAAIgB,MAAM,8F,eAElBnF,KAAKoE,EAAIU,EACT9E,KAAKqE,EAAIrE,KAAKmE,SAAS,GAAd,IACTnE,KAAKsE,EAAItE,KAAKmE,SAAS,GAAd,GACTnE,KAAKsC,EAAgC,EAA5BtC,KAAKmE,SAAS,GAAd,M,kBACF,CAACrI,OAAM,EAAMsJ,IAAIpF,KAAK+E,OAAOM,gBAAgBrF,KAAKmE,SAAS,GAAd,kB,2DAG7C,CAACrI,OAAM,EAAKsJ,IAAIE,IAAIC,OAAO,KAAErI,SAAF,O,kJAKpC,IAAIsI,EAAaF,IACVjB,EAASrE,KAATqE,EAAEC,EAAOtE,KAAPsE,EAAEF,EAAKpE,KAALoE,EACX,GAAIA,EAAIpE,KAAKsC,EACX,MAAM,IAAI6C,MAAM,gEAElB,GAAIf,EAAI,EACN,MAAM,IAAIe,MAAM,oGAElB,IAAMM,EAAKzF,KAAKuE,IAAIH,GACdsB,EAAK1F,KAAKuE,IAAIF,GAGdsB,EAAMF,EAAKC,EACXE,EAHK5F,KAAKuE,IAAID,GAGHoB,EAOjB,OAJEF,EADCpB,GAAKC,EACQwB,KAAKC,IAAID,KAAKE,IAAIJ,GAAK,KAAOE,KAAKC,IAAID,KAAKE,IAAIH,GAAK,KAA7D,IAESC,KAAKC,KAAKD,KAAKE,IAAIJ,GAAK,KAAOE,KAAKC,IAAID,KAAKE,IAAIH,GAAK,MAA9D,MAEK,IAAM,GAAKC,KAAKG,MAAY,IAANR,GAAa,M,8BAO3CS,EAAWxB,EAAWC,GAC5B1E,KAAKsC,EAAI2D,EACTjG,KAAKyE,IAAMA,EACXzE,KAAK0E,GAAKA,I,kCAGAU,GACV,IAAMd,EAAItE,KAAKuE,IAAIvE,KAAK0E,IAClBL,EAAIrE,KAAKuE,IAAIvE,KAAKyE,KAElByB,EAAIL,KAAKC,IAAID,KAAKC,IAAID,KAAKE,IAAIzB,EAAID,GAAG,KAAQe,EAAM,IAAK,EAAI,KAE7De,EAAIN,KAAKC,IAAID,KAAKO,EAAEF,GAAK7B,EAE/B,OAAOrE,KAAKsC,IAAQ6D,EAAI,IAAQA,K,2BAG7Bf,GACH,OAAOS,KAAKQ,KAAKR,KAAKC,IAAI,MAAO,IAAMV,GAAQ,Q,iCAU/C,IAAIkB,EAAM,EAAEC,EAAcvG,KAAK4E,eAAe4B,OAC9C,GAAmB,IAAhBD,EAAmB,OAAQ,GAE9B,IADA,IAAMlC,EAAIwB,KAAKY,KAAKzG,KAAK2E,mBAChBuB,EAAE,EAAGA,EAAIlG,KAAK2E,oBAAqBuB,EAC1C,GAAGA,EAAIK,EAAY,CACjB,IAAMnB,EAAMpF,KAAK4E,eAAesB,GAE9BI,GADClB,EAAM,EACAS,KAAKC,IAAKV,EAAKf,GAAMrE,KAAK2E,mBAEzBkB,KAAKC,IAAKD,KAAKa,IAAItB,GAAMf,GAAMrE,KAAK2E,kBAIlD,OAAOkB,KAAKG,MAA6B,IAAvBH,KAAKC,IAAIQ,EAAK,EAAIjC,IAAY,M,qCAjB7BsC,GAAc3G,KAAK2E,kBAAoBgC,I,kCAC1CA,GAAgB3G,KAAK4E,eAAiB+B,M,KC/FpDC,GAAc,YAQlB,aAAc,IAAD,8BACX,4CAAM,gBARRzH,OAAiB,SAOJ,EALb0H,YAKa,IAJbC,WAIa,IAHbC,YAGa,IAFbC,WAA0B,IAAIjD,IAAa,GAE9B,EAaHkD,SAAmC,GAX3C,EAAKC,QAAQ,GAAGH,OAAO,CACrBF,OAAS,oMACTC,MAAQ,sHACRC,OAAS,kBACTI,aAAe,wKAEjB,EAAKN,OAAS,EAAKO,MAAM,UACzB,EAAKN,MAAQ,EAAKM,MAAM,SACxB,EAAKL,OAAS,EAAKK,MAAM,UAVd,EARK,kFAuBGC,GAEnB,OADArH,KAAKiH,SAAWI,EACTrH,OAzBS,4BA4BFsH,EAASlD,GACvB,OAAOpE,KAAKgH,WAAWO,YAAYvH,KAAKiH,SAASK,GAAGlD,OA7BpC,GAAiBoD,MAkCxBC,GAAQ,YAKnB,WAAYvD,EAAiBwD,GAAkB,IAAD,8BAC5C,+CALFb,YAI8C,IAH9Ca,SAAkB,GAG4B,EAF9CxD,SAAkB,EAIhB,EAAK2C,OAAS,EAAKO,MAAM,UACtBlD,IAAU,EAAKA,SAAWA,GAC1BwD,IAAU,EAAKA,SAAWA,GAJe,EAL3B,yEAYPxD,GAEV,OADAlE,KAAKkE,SAAWA,EACTlE,OAdU,kCAiBP0H,GAEV,OADA1H,KAAK0H,SAAWA,EACT1H,OAnBU,kKAuBSA,KAAK6G,OAAOc,MAAM,CAC1CD,SAAS9E,KACTsB,SAASzB,OACRmF,UA1Bc,cAuBXC,EAvBW,yBA2BVA,GA3BU,uRA+BS7H,KAAK6G,OAAOc,MAAM,CAC1CD,SAAS1H,KAAK0H,SACdxD,SAASlE,KAAKkE,WACb0D,UAlCc,cA+BXC,EA/BW,yBAmCVA,GAnCU,qQAuCJ7H,KAAK6G,OAAOiB,QAvCR,4KA0CXC,EAAazE,EAAkBoE,EAAgBxD,GACrD,OAAOlE,KAAK6G,OAAOc,MAAM,wCAAwCK,OAAO,CAACD,EAAMzE,EAAWoE,EAASxD,IAAW0D,YA3C7F,kFA+CI1D,EAAgBwD,GA/CpB,6FA+CoCtE,EA/CpC,+BA+CkD,KA/ClD,SAgDYpD,KAAK6G,OAAOc,MAAM,CAC7CD,SAASA,EAASxD,SAASA,IAC1B0D,UAlDc,cAmDjB/C,GAHIA,EAhDa,QAmDLoD,QAAO,SAAAjG,GAAI,OAAEA,EAAKqD,kBAAoBjC,KAnDjC,kBAoDVyB,EAAKqD,KAAI,SAAClG,GAAD,OAAkBA,EAAKmG,eApDtB,qLAuDFT,GAvDE,kFAwDJ1H,KAAK6G,OAAOc,MAAM,CAACD,SAASA,IAAWU,SAxDnC,uTA4DJpI,KAAK6G,OAAOc,MAAM,CAACU,WAAW,SAASD,SA5DnC,4KA+DXpG,GACN,IACE,OAAOhC,KAAK6G,OAAOc,MAAM,wCAAwCK,OAC/D,CAAChG,EAAI,MAAUA,EAAI,WAAehC,KAAK0H,SAAS1H,KAAKkE,WACrDoE,OAAO,CACPP,MAAM/F,EAAI,MACVkF,QAAQlF,EAAI,QACZsB,WAAWtB,EAAI,WACfqD,gBAAgBrD,EAAI,gBACpBmG,WAAWnG,EAAI,WACf8C,QAAQyD,OAAOvG,EAAI,SACnBwG,OAAOD,OAAOvG,EAAI,QAClByG,MAAMF,OAAOvG,EAAI,OACjB0G,UAAUH,OAAOvG,EAAI,WACrB2G,WAAW3G,EAAI,WACf4G,WAAW5G,EAAI,WACf6G,UAAU7G,EAAI,UACd0F,SAAS1F,EAAI,SACbkC,SAASlC,EAAI,SACbqG,YAAW,EACXS,UAAY9G,EAAI,YAEnB,MAAM+G,GACLC,QAAQjD,IAAIgD,MAtFG,8BA0FX/G,GACN,IACE,OAAOhC,KAAK6G,OAAOoC,IAAI,CACrBlB,MAAM/F,EAAI,MACVkF,QAAQlF,EAAI,QACZsB,WAAWtB,EAAI,WACfqD,gBAAgBrD,EAAI,gBACpBmG,WAAWnG,EAAI,WACf8C,QAAQyD,OAAOvG,EAAI,SACnBwG,OAAOD,OAAOvG,EAAI,QAClByG,MAAMF,OAAOvG,EAAI,OACjB0G,UAAUH,OAAOvG,EAAI,WACrB2G,WAAW3G,EAAI,WACf4G,WAAW5G,EAAI,WACf6G,UAAU7G,EAAI,UACd0F,SAAS1F,EAAI,SACbkC,SAASlC,EAAI,SACbqG,YAAW,EACXS,UAAY9G,EAAI,YAEnB,MAAM+G,GACLC,QAAQjD,IAAIgD,MA/GG,6EAmHDG,EAAqBrE,GAnHpB,oFAqHXqE,EArHW,0CAqHG,GArHH,UAsHQ,MAApBA,EAAMJ,UAtHM,wBAwHTK,EAAyBD,GAChBf,WAAatD,EAAKsD,WAC/BgB,EAAarE,QAAUD,EAAKC,QAC5BqE,EAAaL,UAAY5G,GAAc,GA3H1B,UA4HPlC,KAAK6G,OAAOuC,IAAID,GA5HT,iDA+HPnJ,KAAK6G,OAAOc,MAAM,wCAAwCK,OAAO,CAACkB,EAAMnB,MAAMmB,EAAM5F,WAAW4F,EAAMxB,SAASwB,EAAMhF,WAAWoE,OACrIe,OAAOC,OAAOzE,EAAK,CACjBiE,UAAY5G,GAAc,GAC1B2G,UAAWK,EAAMpE,WAlIN,kCAsIR,GAtIQ,yCAwIfkE,QAAQjD,IAAR,MAxIe,mBAyIR,GAzIQ,+LA6IFgC,EAAaL,GA7IX,kFA8IJ1H,KAAK6G,OAAOc,MAAM,CAACI,MAAMA,EAAML,SAASA,IAAWU,SA9I/C,2TAmJTmB,EAAOvJ,KAnJE,SAoJFA,KAAK6G,OAAO2C,eAAelB,QAAO,SAAS3B,GACtDA,EAAIwB,WAAaoB,EAAKE,MAAM9C,EAAIoB,MAAMpB,EAAI7B,YArJ7B,wEAwJfkE,QAAQjD,IAAI,8BAxJG,oHAAiBa,IA+JzB8C,GAAc,YAKzB,aAAc,IAAD,8BACX,+CALFvC,kBAIa,IAHbjD,SAAkB,EAGL,EAFbyF,aAAsB,KAIpB,EAAKxC,aAAe,EAAKC,MAAM,gBAC/B,EAAKlD,SAAWzB,KAChB,EAAKkH,aAAe/G,KAJT,EALY,iEAYrBsG,EAAqBrE,GAAiF,IAAzC+E,EAAwC,wDACvG,IACE,QAAIV,IACJlJ,KAAKmH,aAAaiC,IAAI,CACpBrB,MAAMmB,EAAMnB,MACZjD,QAAQD,EAAKC,QACbxB,WAAW4F,EAAM5F,WACjB+B,gBAAgB6D,EAAM7D,gBACtBqC,SAASwB,EAAMxB,SACfmC,IAAIhF,EAAKsD,WACTW,UAAUc,EAAkBV,EAAMJ,UAAY5G,GAAc,GAC5DgC,SAASgF,EAAMhF,YAEV,GACR,MAAM6E,GAEL,OADAC,QAAQjD,IAAIgD,IACL,KA5Bc,uEAgCb/G,GAhCa,iGAkCLhC,KAAKmH,aAAaQ,MAAM,wCAAwCK,OAC9E,CAAChG,EAAI,MAAUA,EAAI,SAAaA,EAAI,WAAeA,EAAI,WACvD4F,UAAUkC,MAAK,SAACxC,GAAD,OAAKA,EAAEyC,MAAK,SAACC,EAAEC,GAAH,OAAO1H,KAAO0H,EAAEnB,WAAW1F,KAAKb,KAAOyH,EAAElB,kBApCjD,cAkCfxB,EAlCe,yBAqCd,CACL4C,WAAwB,IAAb5C,EAAEd,QAAsB+B,OAAOvG,EAAK8C,SAAWyD,OAAOjB,EAAEA,EAAEd,OAAS,GAAG1B,SACjF+D,UAAuB,IAAbvB,EAAEd,QAAgB,EAAIc,EAAEA,EAAEd,OAAO,GAAG1B,UAvC3B,yDA0Cd,CACLoF,YAAW,EACXrB,UAAU,IA5CS,wLAiDZpG,EAAiB0H,GAjDL,2FAiDsB/G,EAjDtB,+BAiDoC,KAjDpC,kBAmDRpD,KAAKmH,aAAaQ,MAC7B,CAACD,SAAS1H,KAAK2J,aAAazF,SAASlE,KAAKkE,SAASmB,gBAAgBjC,IACnEwE,UArDmB,+EAuDrBoB,QAAQjD,IAAR,MAvDqB,kBAwDd,IAxDc,yLA4DbtD,EAAiB0H,GA5DJ,2FA8DRnK,KAAKmH,aAAaQ,MAC7B,CAACD,SAAS1H,KAAK2J,aAAazF,SAASlE,KAAKkE,WAC1CkE,SAhEmB,+EAkErBY,QAAQjD,IAAR,MAlEqB,kBAmEd,GAnEc,oMAuEFqE,GAvEE,8EAyEjBA,EAzEiB,yCAyEJ,IAzEI,uBA0ERpK,KAAKmH,aAAaQ,MAC7B,CAACD,SAAS1H,KAAK2J,aAAazF,SAASlE,KAAKkE,SAAS6D,MAAMqC,EAAKrC,MAAMzE,WAAWE,GAAwB4G,EAAK9G,cAC5GsE,UAAUkC,MAAK,SAAAxC,GAAC,OAAEA,EAAEyC,MAAK,SAACC,EAAEC,GAC5B,OAAO1H,KAAO0H,EAAEnB,WAAW1F,KAAKb,KAAOyH,EAAElB,kBA7EtB,+EAgFrBE,QAAQjD,IAAR,MAhFqB,kBAiFd,IAjFc,kMAqFFqE,GArFE,sFAuFjBA,EAvFiB,yCAuFJ,IAvFI,uBAwFHpK,KAAKmH,aAAaQ,MAClC,CAACzD,SAASlE,KAAKkE,SAAS6D,MAAMqC,EAAKrC,MAAMzE,WAAWE,GAAwB4G,EAAK9G,cACjFsE,UAAUkC,MAAK,SAAAxC,GAAC,OAAEA,EAAE+C,QAAO,SAACC,EAAQC,GAKpC,OAJID,EAAOC,EAAQ7C,YACjB4C,EAAOC,EAAQ7C,UAAY,IAE7B4C,EAAOC,EAAQ7C,UAAU8C,KAAKD,GACvBD,IACN,OAhGkB,cAwFfG,EAxFe,OAiGjBjF,EAAY,GAChB6D,OAAOqB,KAAKD,GAAKvC,KAAI,SAAClG,GACpB,IAAMsF,EAAImD,EAAIzI,GAAM+H,MAAK,SAACC,EAAMC,GAC9B,OAAOA,EAAEnF,QAAUkF,EAAElF,WAEvBU,EAAIgF,KAAKlD,EAAE,OAtGQ,kBAwGd9B,EAAImF,WAxGU,yCA0GrB3B,QAAQjD,IAAR,MA1GqB,kBA2Gd,IA3Gc,sHAAiBa,IAiH/B3C,GAAO,YAGlB,aAAc,IAAD,8BACX,+CAHF6C,WAEa,EAEX,EAAKA,MAAQ,EAAKM,MAAM,SAFb,EAHK,4MAQLlD,EARK,+BAQa,EAAE0G,EARf,gCASV/F,EAAoB,IAAbX,EACXlE,KAAK8G,MAAMa,MAAM,WAAWK,OAAO,KACnChI,KAAK8G,MAAMa,MAAM,WAAWkD,SAAS,MAChCD,EAZS,qBAYQ/F,EAZR,uCAYqBA,EAAK+C,UAZ1B,mVAgBU,KAhBV,+BAe0B,GAf1B,gCAiBR5H,KAAK8G,MAAMa,MAAM,WAAWK,OAAO,KAAKJ,UAjBhC,0DAkBR5H,KAAK8G,MAAMa,MAAM,WAAWkD,SAAS,KAAKjD,UAlBlC,2BAoBhB,IAJM/C,EAhBU,KAmBZiG,EAAU,EACN5E,EAAI,EAAGA,EAAIrB,EAAK2B,SAAUN,EACE,OAA/BrB,EAAKqB,GAAL,iBACD4E,IAtBY,yBAyBTA,GAzBS,4RA4BS5G,EA5BT,+BA4B2B,EA5B3B,SA6BGlE,KAAK+K,OAAO7G,GAAS,GA7BxB,cA6BVW,EA7BU,yBA8BTA,EAAKmG,KAAI,SAAChJ,GAAD,OAAsC,IAArBA,EAAKiJ,eAAsBrD,WA9B5C,qQAkCH5H,KAAK8G,MAAMgB,QAlCR,4KAqCVC,GACN,OAAO/H,KAAK8G,MAAMa,MAAM,CAACI,MAAMA,IAAQH,YAtCvB,oFAyCOG,EAAazE,GAzCpB,+EA0CV4H,EAAQ,WACZ,OAAO5H,GACL,IAAK,QAAQ,MAAO,IACpB,IAAK,UAAU,MAAO,IACtB,IAAK,cAAc,MAAO,KAC1B,QACA,OAAOA,IAhDK,SAmDHtD,KAAK8G,MAAMa,MAAM,sBAAsBK,OAAO,CAACD,EAAMmD,MAAUtD,UAnD5D,6NAsDDF,GAtDC,kFAuDH1H,KAAK8G,MAAMa,MAAM,CAACD,SAASA,IAAWU,SAvDnC,wNA0DJpG,GA1DI,kFA2DHhC,KAAK8G,MAAMmC,IAAI,CAC1BlB,MAAM/F,EAAI,MACVsB,WAAWtB,EAAI,WACf0C,GAAG6D,OAAOvG,EAAI,IACdyC,IAAI8D,OAAOvG,EAAI,KACfmJ,MAAM5C,OAAOvG,EAAI,OACjBoJ,IAAIpJ,EAAI,IACRqJ,QAAQrJ,EAAI,QACZqD,gBAAgBrD,EAAI,gBACpBsJ,QAAQtJ,EAAI,QACZiJ,YAAYjJ,EAAI,cAAmB,EACnCuJ,UAAWvJ,EAAI,YAAiB,EAChC8G,UAAW9G,EAAI,WAAiBE,GAAc,KAvEhC,2NA2EDF,GA3EC,kFA4EHhC,KAAK8G,MAAMa,MAAM,CAC5B,MAAQ3F,EAAI,MAAU,WAAaA,EAAI,aACtCsG,OAAO,CACR5D,GAAG6D,OAAOvG,EAAI,IACdyC,IAAI8D,OAAOvG,EAAI,KACf8G,UAAW5G,GAAc,KAjFX,+NAqFG6F,EAAazE,EAAkBkI,GArFlC,kFAsFHxL,KAAK8G,MAAMa,MAAM,CAACI,MAAMA,EAAMzE,WAAWA,IAAagF,OAAO,CACxE2C,YAAYO,IAvFE,+NA2FDzD,GA3FC,kFA4FH/H,KAAK8G,MAAMa,MAAM,CAACI,MAAMA,IAAQK,SA5F7B,oJAAiBxB,IAiGtBA,M,UCxZM6E,G,WASnB,WAAYC,EAAWxH,EAAiByF,GAAsB,yBAP9DgC,QAAiB,GAO4C,KAN7DrB,OAAqB,GAMwC,KAL7DsB,cAAsB,GAKuC,KAH7D1H,SAAkB,EAG2C,KAF7DyF,aAAsB,GAGpB3J,KAAK2L,QAAUD,EACZxH,IAASlE,KAAKkE,SAAWA,GACzByF,IAAa3J,KAAK2J,aAAeA,G,wDAIpC,OAAO3J,KAAKsK,S,yCAIZ,OAAOtK,KAAK4L,gB,gCAIZ,IAAMrC,EAAOvJ,KACT6L,EAAO,EACX,OAAO,IAAIC,SAAQ,SAASC,EAASC,GACnC,IAIE,IAHA,IAAMC,EAA2B1C,EAAKoC,QAAQO,MAAM,WAC9CC,EAAmBF,EAAgBzF,OACrC8D,EAAS,GAAGsB,EAAgB,GACxB1F,EAAI,EAAGA,EAAIiG,IAAajG,EAAE,CAChC,IAAIkG,EAAsB,GACtB9E,EAAW,GACT+E,EAAIJ,EAAgB/F,GAAGgG,MAAM,KAiCnC,GAhCO,IAAJhG,GAAkB,8BAATmG,EAAE,KAEZR,EAAO,GAEG,IAATA,GAEEtD,OAAO8D,EAAE,KAAO,IAAM9D,OAAO8D,EAAE,KAAO,IACvC/E,EAAI,QACJ8E,EAAa,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAGnC7D,OAAO8D,EAAE,KAAO,IAAM9D,OAAO8D,EAAE,KAAO,IACvC/E,EAAI,UACJ8E,EAAa,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAGnC7D,OAAO8D,EAAE,KAAO,IAAM9D,OAAO8D,EAAE,KAAO,IACvC/E,EAAI,cACJ8E,EAAa,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,OAInC7D,OAAO8D,EAAE,KAAO,IAAM9D,OAAO8D,EAAE,KAAO,IACvC/E,EAAI,QACJ8E,EAAa,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAGnC7D,OAAO8D,EAAE,KAAO,IAAM9D,OAAO8D,EAAE,KAAO,IACvC/E,EAAI,UACJ8E,EAAa,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAGpCC,EAAED,EAAW,IAAjB,CApCgC,MAuCG,IAATP,EAAalI,GAAyB0I,EAAED,EAAW,IAAI9E,GAAK,CAAC5D,KAAK2I,EAAED,EAAW,IAAI9I,WAAWgE,GAAjH5D,EAvCyB,EAuCzBA,KAAKJ,EAvCoB,EAuCpBA,WACNqF,EAA2B3F,GAAkBqJ,EAAED,EAAW,IAAI,GACpE,GAAyB,kBAAfzD,EAAyB,MAAM,IAAIxD,MAE7CmF,EAAOE,KAAK,CACVzC,MAAMrE,EACNwD,QAAQmF,EAAED,EAAW,IACrB9I,WAAWA,EACX6E,WAAW,EACX9C,gBAAgB,IAChBP,QAAQyD,OAAO8D,EAAED,EAAW,KAC5B5D,OAAOD,OAAO8D,EAAED,EAAW,KAC3B3D,MAAMF,OAAO8D,EAAED,EAAW,KAC1B1D,UAAUH,OAAO8D,EAAED,EAAW,KAC9BzD,WAAWA,EACXC,WAAWyD,EAAED,EAAW,IACxBvD,WAAW,EACXnB,SAAS6B,EAAKI,aACdzF,SAASqF,EAAKrF,SACdmE,YAAW,EACXS,UAAUuD,EAAED,EAAW,MAEzBR,EAAcpB,KAAK,CACjBzC,MAAMrE,EACNoB,QAAQyD,OAAO8D,EAAED,EAAW,KAC5B9I,WAAWA,EACX+B,gBAAgB,IAChBqC,SAAS6B,EAAKI,aACdzF,SAASqF,EAAKrF,SACd2F,IAAI,EACJf,UAAUuD,EAAED,EAAW,OAK3B,OAFA7C,EAAKe,OAASA,EACdf,EAAKqC,cAAgBA,EACdG,EAAQzB,EAAO9D,QACvB,MAAMuC,GAEL,OADAC,QAAQjD,IAAIgD,GACLiD,EAAOjD,W,eCjGDzH,G,YAEnB,WAAYhE,GAAoB,IAAD,8BAC7B,4CAAMA,KAgERgP,aAAe,SAACvD,GAAD,OAA2C,EAAKpJ,SAAS,CAAC+L,IAAI3C,EAAE5J,OAAOoN,SAjEvD,EAkE/B1N,YAAc,kBAAK,EAAKc,SAAS,CAAC6M,gBAAe,KAhE/C,EAAK3M,MAAQ,CACX6L,IAAK,GACLc,gBAAe,EACfC,UAAU,eACVC,OAAO,GACPC,UAAS,EACTC,aAAa,GACbC,SAAS,GAEX,EAAKC,QAAU,EAAKA,QAAQC,KAAb,iBAXc,E,gOAgB3B/M,KAAK1C,MAAMiD,OAAOyM,SAAQ,GAC1BhN,KAAKL,SAAS,CAACgN,UAAS,IACpBD,EAAS,GACPO,EAAW,IAAIxB,GAAUzL,KAAKH,MAAM6L,IAAIjJ,KAAYG,MACpDsK,EAAO,IAAIC,G,SACEF,EAASH,U,wCAEpB,IAAI3H,MAAM,iG,eAGZmF,EAAS2C,EAASG,YAAYxB,EAAgBqB,EAASI,mBACvDjJ,EAAI,IAAIqD,GAAShF,KAAYG,MAAkB0K,EAAI,IAAI5D,G,UAC3CtF,EAAE2G,SAASjB,MAAK,SAAAxC,GAAC,OAAEA,EAAE+C,QAAO,SAACC,EAAYC,GAEzD,OADAD,EAAOC,EAAQxC,OAASwC,EACjBD,IACN,O,QAHGG,E,OAKA8C,EAAMjD,EAAO9D,OACXN,EAAI,E,aAAEA,EAAIqH,G,kCACOL,EAAKA,KAAK5C,EAAOpE,GAAP,MAAmBoE,EAAOpE,GAAP,WAAwBoE,EAAOpE,GAAP,S,aAAtEsH,E,QACM1R,QAAS0R,EAASjI,O,wBAC5BmH,EAAOlC,KAAKF,EAAOpE,GAAP,MAAqB,MAAQsH,EAASjI,Q,qCAGjDkF,EAAIH,EAAOpE,GAAP,QAAuBuE,EAAIH,EAAOpE,GAAP,OAAJ,SAAsCoE,EAAOpE,GAAP,S,wDAK9DuH,EAAOpE,OAAOC,OAClBgB,EAAOpE,GACP,CACEb,gBAAgBmI,EAASnI,gBACzB8C,WAAaqF,EAASpI,IACtBiD,YAAY,EACZQ,UAAW4B,EAAIH,EAAOpE,GAAP,WAGnBuE,EAAIH,EAAOpE,GAAP,OAAsB9B,EAAEsJ,QAAQD,GAAQrJ,EAAEuJ,QAAQF,GACtDH,EAAElE,IAAIC,OAAOC,OAAOsC,EAAc1F,GAAG,CAACb,gBAAgBmI,EAASnI,kBAAkB,CAAC8C,WAAWqF,EAASpI,IAAIN,QAAQ8G,EAAc1F,GAAGpB,UAAS,G,UArBtHoB,E,+BAuBxBlG,KAAK1C,MAAMiD,OAAOyM,SAAQ,G,kBACnBhN,KAAKL,SAAS,CAACgN,UAAS,EAAMjB,IAAI,GAAGc,gBAAe,EAAKC,UAAU,eAAeC,OAAOA,K,yCAEhG1M,KAAK1C,MAAMiD,OAAOyM,SAAQ,G,kBACnBhN,KAAKL,SAAS,CAACgN,UAAS,EAAMH,gBAAe,EAAKC,UAAU,cAAcC,OAAO,CAAC,KAAExP,Y,+IAOtF,IAAD,EACiD8C,KAAKH,MAArD6L,EADD,EACCA,IAAIc,EADL,EACKA,eAAeC,EADpB,EACoBA,UAAUC,EAD9B,EAC8BA,OAAOC,EADrC,EACqCA,SAC3C,OACE,gBAACpL,GAAA,EAAD,CAAW/D,UAAU,eAAegE,OAAK,GACvC,gBAAChD,GAAA,EAAD,CACED,KAAMiO,EACN/O,QAASuC,KAAKnB,YACd+O,aAAc,CACZ,mBAAoB,cAEtB1Q,QAAS,wBAAMc,GAAG,cAAa,gBAAC,IAAD,CAAkBA,GAAIyO,OAEvD,gBAAChM,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,cAAcuD,cAAY,GACtE,gBAAC,IAAD,CAAkB3D,GAAG,cAEvB,gBAACyC,EAAA,EAAD,CAAY/C,QAAQ,QAAQiE,cAAY,GACtC,gBAAC,IAAD,CAAkB3D,GAAG,kBAAiB,2BACtC,gBAAC,IAAD,CAAkBA,GAAG,oBACrB,qBAAGiE,KAAK,iEAAiE9C,OAAO,SAAS0O,IAAI,uBAC3F,gBAAC,IAAD,CAAkB7P,GAAG,iBAEvB,gBAAC,IAAD,CAAkBA,GAAG,qBAEvB,gBAAC8P,GAAA,EAAD,CACEC,SAAU/N,KAAKsM,aACfC,MAAOb,EACP9K,MAAO,CAACC,MAAM,QACdmN,MAAM,aACNC,OAAO,QACPvQ,QAAQ,WACRwQ,WAAS,EACTC,QAAQ,MACV,uBAAKvN,MAAO,CAACwN,SAAS,aACpB,gBAAClQ,EAAA,EAAD,CACER,QAAQ,YACRU,MAAM,UACND,QAAS6B,KAAK8M,QACduB,SAAU1B,EACV/L,MAAO,CAACC,MAAM,OAAOoN,OAAO,UAC5B,gBAAC,IAAD,CAAkBjQ,GAAG,kBAEtB2O,GAAY,gBAAC2B,GAAA,EAAD,CAAkBjQ,KAAM,GAAIuC,MAAO,CAACxC,MAAM,OAAOgQ,SAAS,WAAWG,IAAI,MAAMC,KAAK,MAAMC,WAAW,GAAGC,YAAY,OAEnI,gBAACvN,EAAA,EAAD,CAASzD,QAAQ,SAASkD,MAAO,CAACqN,OAAO,YACxCvB,GAAUA,EAAOxE,KAAI,SAAAlG,GAAI,OAAE,4BAAOA,EAAK,+BACxC,gBAAC,IAAD,CAAkBhE,GAAG,qBACrB,gBAACmD,EAAA,EAAD,CAASzD,QAAQ,SAASkD,MAAO,CAACqN,OAAO,YACzC,gBAACxN,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,cAAcuD,cAAY,GACtE,gBAAC,IAAD,CAAkB3D,GAAG,eAEvB,gBAAC,IAAD,CAAkBA,GAAG,mBACrB,0BACE,0BAAI,gBAAC,IAAD,CAAkBA,GAAG,qBACzB,0BAAI,gBAAC,IAAD,CAAkBA,GAAG,qBACzB,0BAAI,gBAAC,IAAD,CAAkBA,GAAG,2B,GA5HAoD,a,gRCiCpBuN,G,iLAjCJ,IAAD,EAC0C3O,KAAK1C,MAA9CsR,EADD,EACCA,UAAUxE,EADX,EACWA,KAAKlB,EADhB,EACgBA,MAAM2F,EADtB,EACsBA,iBAC5B,IAAIzE,IAASlB,EACX,OAAQ,KAEV,IAAMjD,EAAMmE,EAAKe,MAAqB,EAAbf,EAAKe,MAAY,EAC1C,OACE,yBAAKvK,MAAO,CAACC,MAAM,MAAMiO,OAAO,OAAOb,OAAO,aAC5C,kBAAC,KAAD,CAAqBpN,MAAM,QACzB,kBAAC,KAAD,CAAUgE,KAAM+J,EAAWG,IAAKF,GAC9B,kBAAC,KAAD,CAAeG,gBAAgB,QAC/B,kBAAC,KAAD,CAAOC,QAAQ,SACf,kBAAC,KAAD,CAAOC,OAAQ,CAAC,EAAEjJ,GAAMkJ,MAAO,CAACtJ,KAAKQ,KAAKJ,GAAO,EAAE,IAAIJ,KAAKQ,KAAKJ,GAAO,EAAE,IAAIJ,KAAKQ,KAAKJ,GAAO,EAAE,IAAIA,GAAMpF,MAAO,KAElH,kBAAC,KAAD,MACA,kBAAC,KAAD,CAAKoO,QAAQ,WAAWG,mBAAmB,GAEvCR,EAAU1G,KAAI,SAAClG,GACb,IAAM5D,EAAsB,QAAd4D,EAAK0B,KAAiB,UAAY,UAChD,OAAO,kBAAC,KAAD,CAAMqL,IAAK/M,EAAK0B,KAAM2L,KAAMjR,QAIzC,kBAAC,KAAD,CAAekR,EAAGrJ,GAAO,EAAE,GAAI+H,MAAO,kBAAC,KAAD,CAAOI,SAAS,kBAAhB,OAA8CmB,OAAO,UAAUC,SAAS,IAC9G,kBAAC,KAAD,CAAeF,EAAGrJ,GAAO,EAAE,GAAI+H,MAAO,kBAAC,KAAD,CAAOI,SAAS,kBAAhB,MAA6CmB,OAAO,UAAUC,SAAO,IAC3G,kBAAC,KAAD,CAAeF,EAAGrJ,GAAO,EAAE,GAAI+H,MAAO,kBAAC,KAAD,CAAOI,SAAS,kBAAhB,KAA4CmB,OAAO,UAAUC,SAAO,W,GA3B/FpO,IAAMC,WCkGdoO,G,iLA3FJ,IAAD,EACezP,KAAK1C,MAAnB8M,EADD,EACCA,KAAKlB,EADN,EACMA,MACZ,IAAIkB,IAASlB,EACX,OAAQ,KAEV,IAAMjD,EAAmB,EAAbmE,EAAKe,MACjB,OACE,6BACE,kBAACuE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOrP,aAAW,gBAChB,kBAACsP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlP,MAAO,CAACmP,SAAS,QAAQC,SAAS,UAAU,kBAAC,IAAD,CAAkBhS,GAAG,+BAC5E,kBAAC8R,GAAA,EAAD,eAGJ,kBAACG,GAAA,EAAD,KACE,kBAACJ,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAW,kBAAC,IAAD,CAAkB9R,GAAG,sBAChC,kBAAC8R,GAAA,EAAD,KAAY1F,EAAKe,QAEnB,kBAAC0E,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAW,kBAAC,IAAD,CAAkB9R,GAAG,4BAChC,kBAAC8R,GAAA,EAAD,KAAY1F,EAAK1F,GAAjB,IAAsBmB,KAAKqK,MAAM9F,EAAK1F,GAAKuB,EAAM,KAAS,IAA1D,OAEF,kBAAC4J,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAW,kBAAC,IAAD,CAAkB9R,GAAG,wBAChC,kBAAC8R,GAAA,EAAD,KAAY1F,EAAK3F,IAAjB,IAAuBoB,KAAKqK,MAAM9F,EAAK3F,IAAMwB,EAAM,KAAU,IAA7D,QAECsC,OAAO4H,MAAMjH,EAAMpE,UACpB,kBAAC+K,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAW,kBAAC,IAAD,CAAkB9R,GAAG,oBAChC,kBAAC8R,GAAA,EAAD,KAAY5G,EAAMpE,QAAlB,IAA4Be,KAAKqK,MAAMhH,EAAMpE,QAAUmB,EAAM,KAAS,IAAtE,OAGJ,kBAAC4J,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,YACA,kBAACA,GAAA,EAAD,KAAY1F,EAAKgB,MAEjBlC,EAAMhC,SACN,kBAAC2I,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAW,kBAAC,IAAD,CAAkB9R,GAAG,wBAChC,kBAAC8R,GAAA,EAAD,KAAY5G,EAAMhC,cAMzBgC,EAAMR,WAAaQ,EAAMN,aAC5B,kBAAC8G,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOrP,aAAW,iBAChB,kBAACsP,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAWlP,MAAO,CAACmP,SAAS,QAAQC,SAAS,UAAU,kBAAC,IAAD,CAAkBhS,GAAG,gCAC5E,kBAAC8R,GAAA,EAAD,QAGJ,kBAACG,GAAA,EAAD,KACI/G,EAAMN,YACN,kBAACiH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAW,kBAAC,IAAD,CAAkB9R,GAAG,2BAChC,kBAAC8R,GAAA,EAAD,KAAY9M,GAAkBkG,EAAMP,WAAW,KAGjDO,EAAMR,WACN,kBAACmH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAW,kBAAC,IAAD,CAAkB9R,GAAG,0BAChC,kBAAC8R,GAAA,EAAD,KAAY5G,EAAMR,YAGpBQ,EAAMN,YACN,kBAACiH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAW,kBAAC,IAAD,CAAkB9R,GAAG,2BAChC,kBAAC8R,GAAA,EAAD,KAAY5G,EAAMN,aAGnBM,EAAMV,QAAUU,EAAMT,OACvB,kBAACoH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KAAW,kBAAC,IAAD,CAAkB9R,GAAG,6BAChC,kBAAC8R,GAAA,EAAD,WAAe5G,EAAMV,OAArB,MAAgCU,EAAMT,gB,GAjF9BrH,IAAMC,W,oBCoFjB+O,G,YAtEb,WAAY9S,GAAS,IAAD,8BAClB,4CAAMA,KAYR+S,aAAe,SAACC,GACmB,kBAAvBA,EAAMnR,OAAOoN,QACvB,EAAK5M,SAAS,CAAC4K,QAAQ+F,EAAMnR,OAAOoN,MAAMgE,WAAU,IACpD,EAAKC,gBAAgBF,EAAMnR,OAAOoN,SAdlC,EAAK1M,MAAQ,CACX0Q,WAAU,EACVhG,QAAQ,EACRkG,QAAQ,IALQ,E,iFAUlBzQ,KAAKwQ,oB,8KASehF,E,+BAAkB,EAC/BpB,EAAQpK,KAAK1C,MAAb8M,K,oDAEDhG,EAAI,IAAIsF,GACdV,QAAQjD,IAAIyF,GACI,IAAbA,E,6BACMxL,K,UACSoE,EAAEsM,iBAAiBtG,G,iCAAjCqG,Q,KACAF,WAAU,G,uBAFA5Q,S,qCAKLK,K,UACSoE,EAAEuM,iBAAiBvG,G,iCAAjCqG,Q,KACAF,WAAU,G,uBAFA5Q,S,uJAOP,IAAD,EAC8BK,KAAKH,MAAlC0K,EADD,EACCA,QAAQgG,EADT,EACSA,UAAUE,EADnB,EACmBA,QADnB,EAEezQ,KAAK1C,MAAnB8M,EAFD,EAECA,KAAKlB,EAFN,EAEMA,MACZ,OAAIkB,GAASlB,EAIX,6BACE,kBAAC3H,GAAA,EAAD,KACE,kBAACqP,GAAA,EAAD,CAAahQ,MAAO,CAACC,MAAM,SAC3B,kBAACgQ,GAAA,EAAD,CAAYC,QAAM,GACd,kBAAC,IAAD,CAAkB9S,GAAG,sBAEvB,kBAAC+S,GAAA,EAAD,CACExE,MAAOhC,EACPwD,SAAU/N,KAAKqQ,aACfW,cAAY,GACV,kBAACC,GAAA,EAAD,CAAU1E,MAAO,GAAG,kBAAC,IAAD,CAAkBvO,GAAG,iCACzC,kBAACiT,GAAA,EAAD,CAAU1E,MAAO,GAAG,kBAAC,IAAD,CAAkBvO,GAAG,6BAI7CuS,GAAa,yBAAK3P,MAAO,CAACzD,QAAQ,OAAO+T,eAAe,SAASzC,UAAU,SAAS,kBAACH,GAAA,EAAD,QAGnFiC,GAAa,kBAAC,GAAD,CAAYY,WAAYV,EAAStO,KAAMoI,MArBnD,S,GA3CUnJ,IAAMC,WA2ExB+P,G,iLAIF,IAAMC,EAAU,CACM,IAApBrR,KAAK1C,MAAM6E,KAAa,CAAEnE,GAAI,YAAagQ,MAAO,QAAU,CAAEhQ,GAAI,WAAYgQ,MAAO,WACrF,CAAEhQ,GAAI,UAAWgQ,MAAO,MACxB,CAAEhQ,GAAI,MAAOgQ,MAAO,QAGtB,OACE,kBAAC2B,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGwB,EAAQnJ,KAAI,SAACoJ,EAAOpL,GAAR,OACX,kBAAC4J,GAAA,EAAD,CACEf,IAAKuC,EAAOtT,GACZ4C,MAAW,IAAJsF,EAAQ,CAAC6J,SAAS,cAAW3Q,GAEnCkS,EAAOtD,YAKhB,kBAACiC,GAAA,EAAD,KACGjQ,KAAK1C,MAAM6T,WAAWjJ,KAAI,SAACqJ,EAAQrL,GAClC,OACE,kBAAC2J,GAAA,EAAD,CACE2B,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAG3C,IAAKwC,EAAIxJ,MAAQwJ,EAAIjO,WAAa4C,EAAGtF,MAASsF,EAAI,EAAG,CAAEyL,WAAa,WAAY,CAAEA,WAAa,UAClIN,EAAQnJ,KAAI,SAACoJ,EAAO9M,GACnB,OACE,kBAACsL,GAAA,EAAD,CAAWf,IAAKuC,EAAOtT,IACpBuT,EAAID,EAAOtT,kB,GAhCToD,IAAMC,W,SCtGVuQ,G,iLAGjB,OAAG5R,KAAK1C,MAAMiP,QAAUvM,KAAK1C,MAAMuU,MACzB,KAEH7R,KAAK1C,MAAMyB,a,GANgBqC,IAAMC,WCsDtCyQ,G,YAKJ,WAAYxU,GAA6C,IAAD,8BACtD,4CAAMA,KAJA4P,KAAoB,IAAInJ,GAGwB,EAFhDgO,SAAmC,KAEa,EA+BxDC,UAAY,SAACC,GACX,IAAIpN,EAAa,GAAGqN,EAAc,EADE,EAEf,EAAK5U,MAAnB8M,EAF6B,EAE7BA,KAAKlB,EAFwB,EAExBA,MACNiJ,EAAe,SAACrN,EAAekJ,GACnC,OAAOnJ,EAAK2F,KAAK,CACf,KAASwD,EACT,WAAalJ,KAGjB,IAAIsF,IAASlB,EAAQ,MAAO,GAC5B,EAAKgE,KAAKkF,QAAqB,EAAbhI,EAAKe,MAAWf,EAAK3F,IAAK2F,EAAK1F,IAGjD,IAFA,IAAM2N,EAAW,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KACzCC,EAASL,GAAsB/I,EAAMpE,QACnCoB,EAAI,EAAEA,EAAImM,EAAS7L,SAAUN,EAAE,CACrC,IAAMqM,EAAwB1M,KAAKqK,MAAM,EAAKhD,KAAKsF,YAAYH,EAASnM,KACrEgM,EAAcI,GAAUA,GAAUC,IACnCJ,EAAaG,EAAO,OACpBJ,EAAcI,GAEhBJ,EAAcK,EACdJ,EAAaI,EAAeE,OAAOJ,EAASnM,KAK9C,OAHGgM,EAAcI,GACfH,EAAaG,EAAO,OAEfzN,GAxD+C,EA2DxD6N,iBA3DwD,yCA2DrC,WAAM3J,GAAN,oBAAAiB,EAAA,yDACVI,EAAQ,EAAK9M,MAAb8M,MACJ,EAAKvK,MAAM8M,SAFG,yCAGR,EAAKhN,SAAS,CAACI,YAAW,EAAK4S,kBAAkB,oCAHzC,UAKbvI,EALa,yCAMR,EAAKzK,SAAS,CAACI,YAAW,EAAK4S,kBAAkB,wEANzC,cAQXV,EAAkB1J,OAAOQ,EAAE5J,OAAOoN,OARvB,SASM,EAAKW,KAAKA,KAAK9C,EAAKrC,MAAMqC,EAAK9G,WAAW2O,GAThD,YASXW,EATW,QAUP9W,MAVO,0CAWR,EAAK6D,SAAS,CAACI,YAAW,EAAK4S,kBAAkBC,EAAOrN,UAXhD,iCAaV,EAAK5F,SAAS,CACnBsS,SAASA,EACTW,OAAO/M,KAAKqK,MAAmB,IAAb0C,EAAOxN,KAAa,IACtCwJ,UAAU,EAAKoD,UAAUC,GAAUtH,UACnCkE,kBAAiB,IAAIxM,MAAOwQ,aAjBb,4CA3DqC,wDAgFxDC,gBAAkB,SAACC,EAA0BC,GAA3B,OAA8C,EAAKrT,SAAS,CAACsT,WAAWD,KAhFlC,EAkFxDE,WAAa,SAACnK,GAAD,OAA4C,EAAKpJ,SAAS,CAACwT,SAAUpK,EAAIA,EAAEqK,cAAgB,QAlFhD,EAoFxDC,QAAU,SAAClR,GACT,GAAI,EAAK7E,MAAM8M,KAAf,CACA,OAAOjI,GACL,KAAK,EACHnD,OAAOT,KAAK,2BAA6B,EAAKjB,MAAM8M,KAAKiB,SAC3D,MACA,KAAK,EACHrM,OAAOT,KAAK,gDAAkD,EAAKjB,MAAM8M,KAAKrC,MAAQ,SACxF,MACA,KAAK,EACH,GAAuC,OAApC,EAAKzK,MAAM8M,KAAK/E,gBAAyB,CAAC,IACpCiO,EAAiB,EAAKhW,MAAMiW,KAA5BD,cACP,EAAK3T,SAAS,CAACI,YAAW,EAAK4S,kBAAkBW,EAAc,CAACtV,GAAG,iCAEnEgB,OAAOT,KAAP,4CACuC,EAAKjB,MAAM8M,KAAKrC,OADvD,OAC+DtE,GAAyB,EAAKnG,MAAM8M,KAAKrC,MAAM,EAAKzK,MAAM8M,KAAK9G,cAGlI,MACA,KAAK,EACHtE,OAAOT,KAAK,2CAGhB,OAAO,EAAK2U,eA3G0C,EA8GxDM,gBA9GwD,wBA8GtC,iCAAAxJ,EAAA,kEAEPyJ,EAAa,EAAK5T,MAAlB4T,UACArJ,EAAQ,EAAK9M,MAAb8M,KACDsJ,EAAK,IAAIzP,GACXmG,EALU,sBAMN,IAAIjF,MANE,uBAQRuO,EAAGC,eAAevJ,EAAKrC,MAAMqC,EAAK9G,YAAYmQ,GARtC,cASd,EAAKG,qBATS,kBAUP,EAAKjU,SAAS,CACnB8T,WAAWA,KAXC,yCAcdzK,QAAQjD,IAAR,MAdc,6EA9GsC,EAiIxD6N,mBAAqB,kBAAI,EAAKjU,SAAS,CAACkU,cAAc,EAAKhU,MAAMgU,gBAjIT,EAkIxD/T,iBAAmB,kBAAI,EAAKH,SAAS,CAACI,YAAY,EAAKF,MAAME,cAlIL,EAoIxD+T,SAAW,kBAAK,EAAKxW,MAAM4L,MAAX,UAAsB,EAAKgE,KAAK6G,KAAMxL,OAAO4H,MAAM,EAAKtQ,MAAM+S,QAA8B,EAAKtV,MAAM4L,MAAMf,WAArC,EAAKtI,MAAM+S,SAA0C,KApIrF,EAsIxDoB,aAtIwD,wBAsIzC,6CAAAhK,EAAA,oEAEe,EAAKnK,MAAxB+S,EAFI,EAEJA,OAAOX,EAFH,EAEGA,SAFH,EAGqB,EAAK3U,MAA9B4L,EAHI,EAGJA,MAAMkB,EAHF,EAGEA,KAAK6J,EAHP,EAGOA,WACd7J,GAASlB,EAJF,wDAKX,EAAKvJ,SAAS,CAACgN,UAAS,IAClB9F,EAAS,IAAIY,GAAYyM,EAAY,IAAIxK,GANpC,SAOL7C,EAAOsN,YAAYjL,EAAM,CAACf,WAAWyK,EAAO9N,QAAQmN,IAP/C,wBAQLiC,EAAU9K,IAAIC,OAAOC,OAAOJ,EAAM,CAAC7D,gBAAgB+E,EAAK/E,kBAAkB,CAAC8C,WAAWyK,EAAO9N,QAAQmN,IARhG,QASX,EAAK3U,MAAM8W,YAAW,EAAK,KAAKH,EAAa,CAAClM,MAAMmB,EAAMnB,MAAMzE,WAAW4F,EAAM5F,YAAc,MATpF,2EAWJ,EAAK3D,SAAS,CAACI,YAAW,EAAK4S,kBAAkB,EAAD,MAX5C,0DAtIyC,EAqJxD0B,SAAW,SAACC,GAAyB,IAAD,EACb,EAAKhX,MAAnB8M,EAD2B,EAC3BA,KAAKlB,EADsB,EACtBA,MACL+I,EAAY,EAAKpS,MAAjBoS,SACP,IAAI7H,IAASlB,EAAO,MAAO,IAC3B,IAAMjD,EAA0B,EAAbmE,EAAKe,MAClB/G,EAAYmE,OAAO4H,MAAM8B,GAAuB/I,EAAMpE,QAAjBmN,EACrCsC,EAAqBnQ,EAAK6B,EAChC,OAAGsO,EAAa,EAAE,EACRD,EAAD,UAAoBzO,KAAKQ,KAAW,EAANJ,EAAQ,EAAI7B,IAAhC,KAEhBmQ,GAAc,EAAE,GAAKA,EAAa,EAAE,EAC7BD,EAAD,UAAoBzO,KAAKQ,KAAW,EAANJ,EAAQ,EAAI7B,IAAhC,KAEhBmQ,GAAc,EAAE,GAAKA,EAAa,EAAE,EAC7BD,EAAD,UAAoBzO,KAAKQ,KAAW,EAANJ,EAAQ,EAAI7B,IAAhC,KAEhBmQ,GAAc,EAAE,GAAKA,EAAa,EAAE,EAC7BD,EAAD,UAAoBzO,KAAKQ,KAAW,EAANJ,EAAQ,EAAI7B,IAAhC,KAEhBmQ,GAAc,EAAE,GAAKA,EAAa,EAAE,EAC7BD,EAAD,UAAoBzO,KAAKQ,KAAW,EAANJ,EAAQ,EAAI7B,IAAhC,KAEhBmQ,GAAc,EAAE,GAAKA,EAAa,EAAE,EAC7BD,EAAD,UAAqBzO,KAAKQ,KAAW,EAANJ,EAAQ,EAAI7B,IAAjC,MAEhBmQ,GAAc,EAAE,GAAKA,EAAa,EAAE,EAC7BD,EAAD,UAAsBzO,KAAKQ,KAAW,EAANJ,EAAQ,EAAI7B,IAAlC,OAEhBmQ,GAAc,EAAE,GAAKA,EAAa,GAAG,GAC9BD,EAAD,UAAsBzO,KAAKqK,MAAM9L,EAAU,EAAN6B,EAAQ,IAAnC,OAEhBsO,GAAc,GAAG,GACVD,EAAD,UAAsBzO,KAAKQ,KAAKJ,EAAM7B,IAA5B,OAEZ,IArLP,EAAKvE,MAAQ,CACX2U,SAAQ,EACRvC,SAAU3M,IACVsN,OAAOtN,IACPmP,YAAa,EACb7F,UAAU,EAAKoD,YAAYrH,UAC3B8I,YAAUnW,EAAM8M,MAAO9M,EAAM8M,KAAKa,YAClCgI,WAAW,EACXE,SAAS,KACTU,cAAa,EACb9T,YAAW,EACX4S,kBAAkB,GAClB9D,kBAAiB,IAAIxM,MAAOwQ,UAC5BlG,UAAS,GAEX,EAAKoF,SAAW,EAAKzU,MAAMoX,QAAQC,QAAO,SAACC,EAAc3W,GACxC,QAAXA,IACF,EAAKX,MAAMoX,QAAQG,GAAG,GACtB,EAAKvX,MAAM8W,YAAW,OApB4B,E,oFA0BnDpU,KAAK+R,UACN/R,KAAK+R,a,+BA+JA,IAAD,OACCuB,EAAiBtT,KAAK1C,MAAMiW,KAA5BD,cADD,EAEiCtT,KAAK1C,MAArCsC,EAFD,EAECA,OAAOwU,EAFR,EAEQA,WAAWhK,EAFnB,EAEmBA,KAAKlB,EAFxB,EAEwBA,MAFxB,EAG0HlJ,KAAKH,MAA9H8M,EAHD,EAGCA,SAASsF,EAHV,EAGUA,SAASW,EAHnB,EAGmBA,OAAO6B,EAH1B,EAG0BA,WAAW7F,EAHrC,EAGqCA,UAAUqE,EAH/C,EAG+CA,WAAWE,EAH1D,EAG0DA,SAASM,EAHnE,EAGmEA,UAAUI,EAH7E,EAG6EA,aAAa9T,EAH1F,EAG0FA,WAAW4S,EAHrG,EAGqGA,kBAC3G,IAAIvI,IAASlB,EACX,OAAQ,KAEV,IAAM4L,EAAsBrB,EAAY,UAAY,UACpD,OACE,kBAACsB,GAAA,EAAD,CAAQ/W,GAAG,iBAAiBgX,YAAU,EAACzW,KAAMqB,EAAQnC,QAAS2W,EAAYxT,MAAO,CAACqU,UAAU,SAASpU,MAAM,SACzG,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQjC,MAAM,UAAUD,QAAS,kBAAIiW,GAAW,IAAQ9T,aAAW,SAClF,kBAAC,KAAD,OAEF,kBAACG,EAAA,EAAD,CAAY/C,QAAQ,KAAKF,UAAU,cAAcoD,MAAO,CAACsU,SAAS,IAC/D9K,EAAKrC,MAAQ1E,GAAe+G,EAAK9G,eAEjCiF,OAAO4H,MAAMyC,KAAYrK,OAAO4H,MAAM8B,KACvC,yBAAKrR,MAAO,CAACwN,SAAS,aACpB,kBAAClQ,EAAA,EAAD,CAAQR,QAAQ,YAAYU,MAAM,YAAYD,QAAS6B,KAAKgU,aAAc3F,SAAU1B,GAClF,kBAAC,IAAD,CAAkB3O,GAAG,wBAEtB2O,GAAY,kBAAC2B,GAAA,EAAD,CAAkBjQ,KAAM,GAAIuC,MAAO,CAACxC,MAAM,OAAOgQ,SAAS,WAAWG,IAAI,MAAMC,KAAK,MAAMC,WAAW,GAAGC,YAAY,SAKzI,kBAACvO,EAAA,EAAD,MACA,kBAACuP,GAAA,EAAD,KACE,kBAAC7N,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,GACvB,kBAAC4E,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,EAAGvU,MAAO,CAACzD,QAAQ,OAAOiY,cAAc,SAAShY,WAAW,SAAS8T,eAAe,SAASjD,OAAO,WACjH,kBAACxN,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,iBAA9C,OAGA,kBAACqC,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,eAC1C8K,GAASX,OAAO4H,MAAMyC,KAAYrK,OAAO4H,MAAMjH,EAAMf,aAAgBe,EAAMf,YAC3EI,OAAO4H,MAAMyC,IAAWA,EACxBrK,OAAO4H,MAAMjH,EAAMf,aAAeI,OAAO4H,MAAMyC,IAAY,qCAGjE,kBAAC/Q,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,EAAGvU,MAAO,CAACzD,QAAQ,OAAOiY,cAAc,SAAShY,WAAW,SAAS8T,eAAe,SAASjD,OAAO,WACjH,kBAACxN,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,iBAC3C8K,GAAS,8BAAOlJ,KAAKqU,UAAS,KAEjC,kBAAC5T,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,eAC3C8K,GAAS,8BAAOlJ,KAAKqU,UAAS,MAGnC,kBAACxS,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,EAAGvU,MAAO,CAACzD,QAAQ,OAAOiY,cAAc,SAAShY,WAAW,SAAS8T,eAAe,SAASjD,OAAO,WACjH,kBAACxN,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,iBAA9C,QAGA,kBAACqC,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,iBACzCmK,OAAO4H,MAAMjH,EAAMf,cAAgBI,OAAO4H,MAAMyC,KAAY,8BAAO5S,KAAK8T,YACzEvL,OAAO4H,MAAMjH,EAAMf,aAAeI,OAAO4H,MAAMyC,IAAY,sCAInE,kBAACzR,EAAA,EAAD,MACA,kBAACU,GAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,0BAAME,YAAU,EAACC,aAAa,MAAM1U,MAAO,CAACqN,OAAO,eACjD,kBAACH,GAAA,EAAD,CACE3L,KAAK,SACLvB,MAAO,CAACC,MAAM,QACdmN,MAAO,kBAAC,IAAD,CAAkBhQ,GAAG,yBAC5BuO,MAAQhE,OAAO4H,MAAM8B,GAAuB/I,EAAQA,EAAMpE,QAAU,EAAnCmN,EACjClE,SAAU/N,KAAK0S,qBAIrB,kBAAC7Q,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,EAAGvU,MAAO,CAACzD,QAAQ,OAAOC,WAAW,SAAS8T,eAAe,aAC1E,yBAAKtQ,MAAO,CAACqN,OAAO,eAClB,kBAACsH,GAAA,EAAD,CAAYxN,MAAO,kBAAC,IAAD,CAAkB/J,GAAIyV,EAAY,0BAA4B,sBAAwBnT,aAAW,OAClH,kBAAC,IAAD,CAAUM,MAAO,CAAC/D,SAAS,OAAOuB,MAAM0W,EAAoB1G,SAAS,WAAWG,IAAI,OAClFpQ,QAAS6B,KAAKwT,oBAGpB,kBAAClV,GAAD,CACEpB,QACcoW,EAAZG,EAA0B,CAACzV,GAAG,0BAA2C,CAACA,GAAG,6BAC/EN,QAAQ,UAAUmB,YAAamB,KAAK4T,mBAAoBrV,KAAMsV,EAAcjV,iBAAkB,OAElG,kBAACiD,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,EAAGvU,MAAO,CAACzD,QAAQ,OAAOC,WAAW,SAAS8T,eAAe,aAC1E,kBAAC9Q,EAAA,EAAD,CAAYQ,MAAO,CAACqN,OAAO,cACzBuH,gBAAc,OACdrX,QAAS6B,KAAKkT,YACZ,kBAAC,KAAD,OAEJ,kBAAC,KAAD,CACEC,SAAUA,EACVsC,aAAW,EACXlX,KAAMmX,QAAQvC,GACd1V,QAAS,kBAAI,EAAKyV,eAEhB,kBAACjC,GAAA,EAAD,CAAU9S,QAAS,kBAAI,EAAKkV,QAAQ,KAApC,WACA,kBAACpC,GAAA,EAAD,CAAU9S,QAAS,kBAAI,EAAKkV,QAAQ,KAApC,WACA,kBAACpC,GAAA,EAAD,CAAU9S,QAAS,kBAAI,EAAKkV,QAAQ,KAApC,aACA,kBAACpC,GAAA,EAAD,CAAU9S,QAAS,kBAAI,EAAKkV,QAAQ,KAAI,kBAAC,IAAD,CAAkBrV,GAAG,sBAKvE,kBAAC2X,GAAA,EAAD,CACEpJ,MAAO0G,EACPvV,QAAQ,YACRkY,eAAe,UACfC,UAAU,UACV9H,SAAU/N,KAAK8S,iBACf,kBAACgD,GAAA,EAAD,CAAK9H,MAAO,kBAAC,IAAD,CAAkBhQ,GAAG,oBACjC,kBAAC8X,GAAA,EAAD,CAAK9H,MAAO,kBAAC,IAAD,CAAkBhQ,GAAG,sBACjC,kBAAC8X,GAAA,EAAD,CAAK9H,MAAO,kBAAC,IAAD,CAAkBhQ,GAAG,qBAEnC,kBAAC,GAAD,CAAUuO,MAAO0G,EAAYpB,MAAO,GACjC4C,GACC,kBAAC,GAAD,CAAUrK,KAAMA,EAAMlB,MAAOA,EAAO0F,UAAWA,EAAWC,iBAAkB7O,KAAKH,MAAMgP,oBAG3F,kBAAC,GAAD,CAAUtC,MAAO0G,EAAYpB,MAAO,GAClC,kBAAC,GAAD,CAAazH,KAAMA,EAAMlB,MAAOA,KAElC,kBAAC,GAAD,CAAUqD,MAAO0G,EAAYpB,MAAO,GAClC,kBAAC,GAAD,CAAWzH,KAAMA,EAAMlB,MAAOA,KAEhC,kBAAC5K,GAAD,CAAcpB,QAASyV,EAAmBjV,QAAQ,UAC9CmB,YAAamB,KAAKF,iBAAkBvB,KAAMwB,EAAYnB,iBAAkB,W,GA7T9CwC,IAAMC,WAmU7B0U,gBAAWC,aAAWlE,KCzXxBmE,GAAY,SAAC/P,EAASqL,GACjC,GAAS,IAANrL,EAAS,MAAO,cACnB,OAAQqL,EAAI5I,YACV,KAAK,EAAI,MAAO,UAChB,KAAK,EAAI,MAAO,UAChB,KAAK,EAAI,MAAO,UAChB,KAAK,EAAI,MAAO,UAChB,KAAK,EAAI,MAAO,UAChB,KAAK,EAAI,MAAO,UAChB,KAAK,EAAI,MAAO,UAChB,QAAS,MAAO,YCEd0I,GAAU,CACd,CAAErT,GAAI,kBAAmBgQ,MAAO,UAChC,CAAEhQ,GAAI,QAASgQ,MAAO,gBACtB,CAAEhQ,GAAI,aAAcgQ,MAAO,OAC3B,CACEhQ,GAAI,UACJgQ,MAAO,OAsBUkI,G,YAEnB,WAAY5Y,GAAmB,IAAD,8BAC5B,4CAAMA,KAUR8W,WAX8B,yCAWjB,WAAM+B,EAAmB5E,EAAS6E,GAAlC,UAAApM,EAAA,0DACRmM,EADQ,gCACU,EAAK7Y,MAAMkT,kBADrB,gCAEJ,EAAK7Q,SAAS,CACnBC,QAAQ,EAAKC,MAAMD,OACnByW,gBAAgB9E,EAAM,EAAKjU,MAAMgZ,aAAa/E,EAAIxJ,MAAQ5E,GAAQoO,EAAIjO,aAAe,KACrFiT,iBAAiBhF,GAAY,QALpB,2CAXiB,4DAoB9BiF,iBAAmB,SAACzD,EAA2D0D,GAA5D,OAAoF,EAAK9W,SAAS,CAAC+W,KAAKD,KApB7F,EAsB9BE,wBAA0B,SAACrG,GAAD,OAAoD,EAAK3Q,SAAS,CAAC+W,KAAK,EAAEE,aAAatG,EAAMnR,OAAOoN,SApB5H,EAAK1M,MAAQ,CACX6W,KAAO,EACPE,YAAc,GACdhX,QAAO,EACPyW,gBAAgB,KAChBE,iBAAiB,MAPS,E,sEAwBrB,IAAD,SAC6DvW,KAAKH,MAAjE6W,EADD,EACCA,KAAKE,EADN,EACMA,YAAYhX,EADlB,EACkBA,OAAOyW,EADzB,EACyBA,gBAAgBE,EADzC,EACyCA,iBADzC,EAEqCvW,KAAK1C,MAAzCuH,EAFD,EAECA,KAAKgS,EAFN,EAEMA,WAAW9M,EAFjB,EAEiBA,KAAK+M,EAFtB,EAEsBA,OAAOjL,EAF7B,EAE6BA,KACnC,OACE,kBAAC6D,GAAA,EAAD,CAAO9O,MAAO,CAACC,MAAM,OAAOoU,UAAU,SACpC,6BACE,kBAACtF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGwB,GAAQnJ,KAAI,SAACoJ,EAAOpL,GAAR,OACX,kBAAC4J,GAAA,EAAD,CACEf,IAAKuC,EAAOtT,GACZG,QAAS,kBAAI0Y,EAAW3Q,MAEtB2F,EAAO,GAAW,IAAN3F,IAAaoL,EAAOtD,MAChCnC,EAAO,GAAW,IAAN3F,GAAY,KACzBA,IAAM6D,GACL,8BACI+M,GAAU,yCACTA,GAAU,yCAGhB5Q,IAAM6D,GAAQ,8CAKvB,kBAACkG,GAAA,EAAD,KACGpL,EAAKkS,MAAML,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1O,KAAI,SAACqJ,EAAQrL,GAC7E,OACE,kBAAC2J,GAAA,EAAD,CACE1R,QAAS,kBAAI,EAAKiW,YAAW,EAAM7C,IACnCC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAG3C,IAAKwC,EAAIxJ,MAAOnH,MAASsF,EAAI,EAAG,CAAEyL,WAAa,WAAY,CAAEA,WAAa,UAC7GN,GAAQnJ,KAAI,SAACoJ,EAAO9M,GACnB,ID5EHwS,EC4ESzT,EAA4B,UAAnBgO,EAAIjO,WAAyB,MAA2B,gBAAnBiO,EAAIjO,WAA+B,WAAQ,GAC/F,OACE,kBAACwM,GAAA,EAAD,CAAWf,IAAKuC,EAAOtT,GAAKuF,EAAQ3C,MAAO,CAACvE,gBAAkB4Z,GAAUzR,EAAE+M,GAAKnD,SAAS,cACpFvC,EAAO,GAAmB,eAAdyF,EAAOtT,KAAwBuT,EAAID,EAAOtT,IAEzC,UAAdsT,EAAOtT,IAAkBuF,EACxBsI,EAAO,GAAKA,EAAO,GAAmB,YAAdyF,EAAOtT,IAC/B,mCD7FD,SAACuT,EAAQ+E,EAAgCzK,GAClE,IACE,IACM5F,EAAmE,EAA7DqQ,EAAa/E,EAAIxJ,MAAQ5E,GAAQoO,EAAIjO,aAArC,MACZ,OAAOuC,KAAKQ,KAAKJ,EAFH,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAEA4F,GAAQ0F,EAAIzM,SAC1C,MAAMiE,GACL,QCuFiCkO,CAAY1F,EAAI,EAAKjU,MAAMgZ,aAAazK,GAAjD,KAEAA,EAAO,GAAmB,eAAdyF,EAAOtT,KDrF5BgZ,ECqFuDzF,EAAI7I,UDpFzEH,OAAO4H,MAAM6G,GACP,IAEFvE,OAAOuE,ICkFkB,IAANxS,GAAoB,IAATqH,GAAc0F,EAAI1I,WAAa,GAAM,0BAAMrL,UAAU,oBAC/D+T,EAAIzM,QAAUyM,EAAI1I,UAAY,EAAI,IAAMN,OAAOgJ,EAAIzM,QAAUyM,EAAI1I,WAAa0I,EAAIzM,QAAUyM,EAAI1I,sBAYrH,kBAACqO,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjC1V,UAAU,MACV2V,MAAOpX,KAAK1C,MAAMuH,KAAK2B,OACvBoQ,YAAaA,EACbF,KAAMA,EACNW,iBAAiB,GACjBC,oBAAqB,CACnB,aAAc,iBAEhBC,oBAAqB,CACnB,aAAc,aAEhBC,aAAcxX,KAAKwW,iBACnBiB,oBAAqBzX,KAAK2W,0BAE3B/W,GACC,kBAAC,GAAD,CAAyBA,OAAQA,EAAQwK,KAAMiM,EAAiBnN,MAAOqN,EAAkBnC,WAAYpU,KAAKoU,kB,GApG5EhT,IAAMC,W,+BCMzBqW,G,YAEnB,WAAYpa,GAAS,IAAD,8BAClB,4CAAMA,KA0CRqa,kBAAoB,SAACjU,GAAD,OAAiB,SAACqF,GACpC,EAAK6O,WAAWlU,EAAKqF,EAAE5J,OAAO0Y,QAAQ,WA5CpB,EA+CpBC,iBAAmB,SAACpU,GAAD,OAAiB,SAACqF,GACnC,EAAK6O,WAAWlU,EAAKqF,EAAE5J,OAAO0Y,QAAQ,gBAhDpB,EAmDpBD,WAAa,SAAClU,EAAYmU,EAAgB1Y,GACxC,IAAIqM,EAAW,EAAK3L,MAMpB,OALGgY,EACDrM,EAAQ,QAAYrM,GAAQqL,KAAK9G,GAEjC8H,EAAQ,QAAYrM,GAAUqM,EAAQ,QAAYrM,GAAQ8I,QAAO,SAACX,GAAD,OAAaA,IAAM5D,KAE/E,EAAK/D,SAAS,CAACoY,UAAU,EAAKC,WAAWxM,GAAUyM,QAAQzM,EAAQ,WA1DxD,EA6DpB0M,kBAAoB,SAACnP,GACnB,IAAIyC,EAAW,EAAK2M,aAEpB,OADA3M,EAAS4M,aAAerP,EAAIA,EAAE5J,OAAOoN,MAAQ,GACtC,EAAK5M,SAAS,CAACoY,UAAU,EAAKC,WAAWxM,GAAU4M,aAAa5M,EAAS4M,gBAhE9D,EAmEpBJ,WAAa,WAA4C,IAA3CxM,EAA0C,uDAAd,EAAK3L,MACvCqL,EAAiB,CAAC,QAAQ,UAAU,eACpC5I,EAAIkJ,EAASK,KACbwM,EAAI7M,EAAS8M,MACbC,EAAI,EAAK1Y,MAAMyW,aACrB,OAAmD,IAAhDjN,OAAOqB,KAAK,EAAK7K,MAAMyW,cAAc9P,OAAqB,GACtD,EAAKlJ,MAAMkb,KAAKvQ,QAAO,SAACpD,GAC7B,IAAMoB,EAA6D,EAAvDsS,EAAE1T,EAAKkD,MAAQ5E,GAAQ0B,EAAI,aAA3B,MAiBZ,OAhBsB,WACpB,IAAMrC,EAAS,SAAC8E,GAAD,OAAiB/E,KAAO+E,GAAG9E,OAAO,aACjD,OAAa,IAAN6V,IACD,IAANA,EAAU7V,EAAOqC,EAAKiE,aAAetG,EAAO,IAAIH,MAChDE,KAAOsC,EAAKiE,WAAW2P,SAAWlW,KAAO,IAAIF,MAAQoW,QAarDC,KAVa,IAANpW,IACD,IAANA,EAAUuC,EAAKC,QAAUmB,EAAM,EAAI,EAC7B,IAAN3D,EAAUuC,EAAKC,QAAUmB,EAAM,EAAI,GAAK,EAAE,EAAIpB,EAAKC,QAAUmB,EACvD,IAAN3D,EAAUuC,EAAKC,QAAUmB,EAAM,EAAI,GAAK,EAAE,EAAIpB,EAAKC,QAAUmB,EACvD,IAAN3D,IACM,IAANA,EAAUuC,EAAK8D,YAAc,EACvB,IAANrG,EAAUuC,EAAK8D,YAAc,EACvB,IAANrG,GAAUuC,EAAK8D,YAAc,MAK7B6C,EAAQ,QAAR,MAA6BmN,MAAK,SAAC3W,GACjC,OAAOA,IAAS6C,EAAKQ,oBACvBmG,EAAQ,QAAR,WAAkCmN,MAAK,SAAC3W,GACtC,OAAOkJ,EAAM3C,OAAOvG,MAAW6C,EAAKvB,eACtCuB,EAAKkD,MAAM6Q,cAAc1V,QAAQsI,EAAQ,aAAiBoN,gBAAkB,MAlG9D,EAuGpB/B,WAAa,SAACgC,GAAsB,IAAD,EACX,EAAKhZ,MAApBkK,EAD0B,EAC1BA,KAAK+M,EADqB,EACrBA,OACZ,OAAG/M,IAAS8O,EACH,EAAKlZ,SAAS,CAACmX,QAAQA,IAEzB,EAAKnX,SAAS,CAACoK,KAAK8O,EAAO/B,QAAO,KA5GvB,EA+GpBgC,WAAa,WAAiB,IAAD,EACuB,EAAKjZ,MAAhDkY,EADoB,EACpBA,UAAUhO,EADU,EACVA,KAAK+M,EADK,EACLA,OAAOjL,EADF,EACEA,KAAKyK,EADP,EACOA,aAC5B9Q,EAAMuS,EAAUhO,MAAK,SAACC,EAAEC,GAC5B,OAAOF,GACL,KAAK,EACL,OAAOxB,OAAO0B,EAAE5E,iBAAmBkD,OAAOyB,EAAE3E,iBAC5C,KAAK,EACL,OAAO4E,EAAElC,MAAMgR,cAAc/O,EAAEjC,MAAO,KAAM,CAACiR,SAAQ,IACrD,QACA,KAAK,EACL,OAAGnN,EAAO,EACJ7B,EAAEtB,WAAcuB,EAAEvB,UAGdsB,EAAEtB,UAAUuB,EAAEvB,YAAcsB,EAAEtB,WAAWuQ,MAAWhP,EAAEvB,WAAWuQ,MAAa,GAF5E,EAILhP,EAAE9B,WAAa6B,EAAE7B,WACxB,KAAK,EACL,GAAG0D,EAAO,GAAKA,EAAO,EAAE,CACtB,IAAMqN,EAAgE,EAAzD5C,EAAatM,EAAEjC,MAAQ5E,GAAQ6G,EAAE1G,aAAjC,MACP6V,EAAgE,EAAzD7C,EAAarM,EAAElC,MAAQ5E,GAAQ8G,EAAE3G,aAAjC,MACb,OAAO2G,EAAEnF,QAAUqU,EAAOnP,EAAElF,QAAUoU,EAExC,OAAOjP,EAAEnF,QAAUkF,EAAElF,YAGzB,OAAOgS,EAAStR,EAAMA,EAAImF,WAzIR,EA4IpByO,iBAAmB,SAAC9I,GAClB,GAAkC,kBAAvBA,EAAMnR,OAAOoN,MAAxB,CACA,IAAIf,EAAW,EAAK2M,aAEpB,OADA3M,EAASK,KAAOyE,EAAMnR,OAAOoN,MACtB,EAAK5M,SAAS,CAACoY,UAAU,EAAKC,WAAWxM,GAAUK,KAAKyE,EAAMnR,OAAOoN,UAhJ1D,EAmJpB8M,iBAAmB,SAAC/I,GAClB,GAAkC,kBAAvBA,EAAMnR,OAAOoN,MAAxB,CACA,IAAIf,EAAW,EAAK2M,aAEpB,OADA3M,EAAS8M,MAAQhI,EAAMnR,OAAOoN,MACvB,EAAK5M,SAAS,CAACoY,UAAU,EAAKC,WAAWxM,GAAU8M,MAAMhI,EAAMnR,OAAOoN,UAvJ3D,EA6JpB4L,WAAa,kBAAMmB,KAAKC,MAAMD,KAAKE,UAAU,EAAK3Z,SA3JhD,EAAKA,MAAQ,CACX0Q,WAAU,EACV6H,aAAa,GACbL,UAAU,GACVzB,aAAa,GACbzK,KAAK,EACL9B,KAAK,EACL+M,QAAO,EACPmB,QAAQ,CACNwB,MAAM,CAAC,KAAK,MACZnW,WAAW,CAAC,IAAI,IAAI,MAEtBgV,MAAM,GAER,EAAK9H,gBAAkB,EAAKA,gBAAgBzD,KAArB,iBAhBL,E,iNAoBd2M,EAAwC,G,UACd,IAAIzV,IAAU8G,OAAOtI,M,OACnD,IADMkX,E,OACEzT,EAAG,EAAGA,EAAIyT,EAAgBnT,SAAUN,EACpC3C,EAAgBF,GAAesW,EAAgBzT,GAAhB,YACrCwT,EAASC,EAAgBzT,GAAhB,MAA8B3C,GAAUoW,EAAgBzT,GAEnElG,KAAKL,SAAS,CACZoY,UAAU/X,KAAK1C,MAAMkb,KACrBlC,aAAaoD,EACbnJ,WAAU,I,+IAIKqJ,GACjB,IAAIC,KAAMD,EAAUpB,KAAKxY,KAAK1C,MAAMkb,MAClC,OAAOxY,KAAKL,SAAS,CAACoY,UAAU/X,KAAKgY,iB,wCAKvC,OAAOhY,KAAK1C,MAAMkT,oB,+BAuHX,IAAD,SAC0DxQ,KAAKH,MAA9D0Q,EADD,EACCA,UAAU6H,EADX,EACWA,aAAaH,EADxB,EACwBA,QAAQlO,EADhC,EACgCA,KAAK+M,EADrC,EACqCA,OAAOjL,EAD5C,EAC4CA,KAAKyM,EADjD,EACiDA,MACvD,OAAG/H,EAEC,gBAAChP,GAAA,EAAD,CAAW/D,UAAU,kBACnB,gBAAC8Q,GAAA,EAAD,OAIJ,gBAAC/M,GAAA,EAAD,CAAW/D,UAAU,eAAegE,OAAK,EAACxD,GAAG,YAC3C,gBAACyC,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,cAAcuD,cAAY,EACtEf,MAAO,CAACzD,QAAQ,OAAO+T,eAAe,kBACtC,gBAAC,IAAD,CAAkBlT,GAAIgC,KAAK1C,MAAMyK,QACjC,gBAAC6I,GAAA,EAAD,KACE,gBAACG,GAAA,EAAD,CAAQxE,MAAO+L,EAAOtH,cAAY,EAACjD,SAAU/N,KAAKqZ,kBAChD,gBAACpI,GAAA,EAAD,CAAU1E,MAAO,GAAjB,sBACA,gBAAC0E,GAAA,EAAD,CAAU1E,MAAO,GAAjB,kCACA,gBAAC0E,GAAA,EAAD,CAAU1E,MAAO,GAAjB,qCAIN,gBAAC1K,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,EAAG2D,MAAO,CAACqN,OAAO,UACzC,gBAACpM,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAahQ,MAAO,CAACC,MAAM,SACzB,gBAACgQ,GAAA,EAAD,KAAY,gBAAC,IAAD,CAAkB7S,GAAG,gBACjC,gBAAC+S,GAAA,EAAD,CAAQxE,MAAOV,EAAMkC,SAAU/N,KAAKoZ,kBAClC,gBAACnI,GAAA,EAAD,CAAU1E,MAAO,GAAG,gBAAC,IAAD,CAAkBvO,GAAG,iBACzC,gBAACiT,GAAA,EAAD,CAAU1E,MAAO,GAAG,gBAAC,IAAD,CAAkBvO,GAAG,iBACzC,gBAACiT,GAAA,EAAD,CAAU1E,MAAO,GAAG,gBAAC,IAAD,CAAkBvO,GAAG,iBACzC,gBAACiT,GAAA,EAAD,CAAU1E,MAAO,GAAG,gBAAC,IAAD,CAAkBvO,GAAG,iBACzC,gBAACiT,GAAA,EAAD,CAAU1E,MAAO,GAAG,gBAAC,IAAD,CAAkBvO,GAAG,iBACzC,gBAACiT,GAAA,EAAD,CAAU1E,MAAO,GAAG,gBAAC,IAAD,CAAkBvO,GAAG,iBACzC,gBAACiT,GAAA,EAAD,CAAU1E,MAAO,GAAG,gBAAC,IAAD,CAAkBvO,GAAG,iBACzC,gBAACiT,GAAA,EAAD,CAAU1E,MAAO,GAAG,gBAAC,IAAD,CAAkBvO,GAAG,oBAI/C,gBAAC6D,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAanP,UAAU,WAAWb,MAAO,CAACC,MAAM,SAChD,gBAACgQ,GAAA,EAAD,CAAYiJ,QAAQ,+BAA8B,gBAAC,IAAD,CAAkB9b,GAAG,wBACrE,gBAAC+b,GAAA,EAAD,CACEnZ,MAAO,CAACC,MAAM,QACdmZ,YAAa,WACbzN,MAAO6L,EACPrK,SAAU/N,KAAKkY,kBACf+B,aACE7B,GACA,gBAAC8B,GAAA,EAAD,CAAgB9L,SAAS,OACvB,gBAAChO,EAAA,EAAD,CAAYjC,QAAS,kBAAI,EAAK+Z,kBAAkB,QAC9C,gBAAC,KAAD,aAQd,gBAACrW,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,EAAGe,GAAG,cAAc4C,MAAO,CAACqN,OAAO,UAC1D,gBAACpM,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAanP,UAAU,YACrB,gBAAC0Y,GAAA,EAAD,CAAW1Y,UAAU,UAAS,gBAAC,IAAD,CAAkBzD,GAAG,yBACnD,gBAACoc,GAAA,EAAD,CAAW7I,KAAG,GACZ,gBAAC8I,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQwB,MAAMd,MAAK,SAAArR,GAAC,MAAS,OAANA,KAAayG,SAAU/N,KAAK2X,kBAAkB,MAAOpL,MAAM,OAC9GyB,MAAM,aAER,gBAACqM,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQwB,MAAMd,MAAK,SAAArR,GAAC,MAAS,OAANA,KAAayG,SAAU/N,KAAK2X,kBAAkB,MAAOpL,MAAM,OAC9GyB,MAAM,gBAKd,gBAACnM,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAanP,UAAU,YACrB,gBAAC0Y,GAAA,EAAD,CAAW1Y,UAAU,UAAS,gBAAC,IAAD,CAAkBzD,GAAG,8BACnD,gBAACoc,GAAA,EAAD,CAAW7I,KAAG,GACZ,gBAAC8I,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQ3U,WAAWqV,MAAK,SAAArR,GAAC,MAAS,MAANA,KAAYyG,SAAU/N,KAAK8X,iBAAiB,KAAMvL,MAAM,UAChHyB,MAAM,MAER,gBAACqM,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQ3U,WAAWqV,MAAK,SAAArR,GAAC,MAAS,MAANA,KAAYyG,SAAU/N,KAAK8X,iBAAiB,KAAMvL,MAAM,YAChHyB,MAAM,MAER,gBAACqM,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQ3U,WAAWqV,MAAK,SAAArR,GAAC,MAAS,MAANA,KAAYyG,SAAU/N,KAAK8X,iBAAiB,KAAMvL,MAAM,gBAChHyB,MAAM,eAOhB,gBAAC,GAAD,CACEnJ,KAAM7E,KAAK8Y,aAAc/O,KAAMA,EAAM+M,OAAQA,EAAQjL,KAAMA,EAC3DgL,WAAY7W,KAAK6W,WAAYP,aAActW,KAAKH,MAAMyW,aACtD9F,gBAAiBxQ,KAAKwQ,uB,GAlQOpP,aCvClBoZ,G,YAEnB,WAAYld,GAAc,IAAD,8BACvB,4CAAMA,KACDuC,MAAO,CACV2Y,KAAK,IAEP,EAAKhI,gBAAkB,EAAKA,gBAAgBzD,KAArB,iBALA,E,8MASjB/M,KAAKwQ,kB,kRAIoB,IAAI/I,IAAWsD,S,OAAxCyN,E,OACNxY,KAAKL,SAAS,CAAC6Y,KAAKA,I,qIAIpB,OAAIxY,KAAKH,MAAM2Y,KAIb,2BACE,gBAAC,GAAD,CAAWzQ,MAAM,cAAcyQ,KAAMxY,KAAKH,MAAM2Y,KAAMhI,gBAAiBxQ,KAAKwQ,mBAJtE,S,GArBqBpP,aCCdoZ,G,YAEnB,WAAYld,GAAc,IAAD,8BACvB,4CAAMA,KACDuC,MAAO,CACV2Y,KAAK,IAEP,EAAKhI,gBAAkB,EAAKA,gBAAgBzD,KAArB,iBALA,E,8MASjB/M,KAAKwQ,kB,wRAILkD,EAAK,IAAIjM,GACTkC,EAAe,KACfzF,EAAW,E,UACc,IAAID,IAAUwW,qBAAqBvW,G,OAA5D4C,E,OACF0R,EAAmB,GACftS,EAAG,E,YAAEA,EAAIY,EAAMN,Q,wBACf4D,EAAOtD,EAAMZ,GACbwU,EAAIlX,GAAwB4G,EAAK9G,Y,UACrBoQ,EAAG/Q,QAAQyH,EAAKrC,MAAM2S,EAAE/Q,EAAazF,G,WAAjDsB,E,SACFtB,GAAgC,MAApBkG,EAAI,UAA0BlG,GAAgC,MAApBkG,EAAI,S,wDAG5C,IAAf5E,EAAIgB,OACLgS,EAAKhO,KAAK,CACRzC,MAAMqC,EAAKrC,MACXY,WAAW,EACXR,YAAY,GACZ7E,WAAWoX,EACXrV,gBAAgB+E,EAAK/E,gBACrBP,QAAQ,EACRZ,SAASA,EACTwD,SAASiC,EACTd,WAAW,EACXC,UAAU,MAGZ0P,EAAKhO,KAAKhF,EAAI,I,UArBcU,E,uBAwBhClG,KAAKL,SAAS,CAAC6Y,KAAKA,I,sIAIpB,OAAIxY,KAAKH,MAAM2Y,KAIb,2BACE,gBAAC,GAAD,CAAWzQ,MAAM,kBAAkByQ,KAAMxY,KAAKH,MAAM2Y,KAAMhI,gBAAiBxQ,KAAKwQ,mBAJ1E,S,GAjDqBpP,aCI7BiQ,GAAU,CACd,CAAErT,GAAI,kBAAmBgQ,MAAO,UAChC,CAAEhQ,GAAI,QAASgQ,MAAO,iBAmBHkI,G,YAEnB,WAAY5Y,GAAmB,IAAD,8BAC5B,4CAAMA,KAUR8W,WAX8B,wBAWjB,+CAAApK,EAAA,yDAAMmM,EAAN,gCAAiC5E,EAAjC,uBAA0CoJ,EAA1C,wBACRxE,EADQ,gCACU,EAAK7Y,MAAMkT,iBAAgB,EAAKmK,GAD1C,cAELrT,EAAIiK,EAAM,CACdjO,WAAWE,GAAwB+N,EAAIjO,YACvCyE,MAAMwJ,EAAIxJ,MACVI,WAAW7C,IACXR,QAAQ,EACRO,gBAAgBkM,EAAIlM,gBACpBqC,SAAS9E,KACTsB,SAASzB,KACTkG,WAAW,EACXE,WAAW,EACXC,UAAU,KACR,KAbO,kBAcJ,EAAKnJ,SAAS,CACnBC,QAAQ,EAAKC,MAAMD,OACnByW,gBAAgB9E,GAAY,KAC5BgF,iBAAiBjP,KAjBR,2CAXiB,EAgC9BkP,iBAAmB,SAACoE,EAA+DnE,GAAhE,OAAwF,EAAK9W,SAAS,CAAC+W,KAAKD,KAhCjG,EAkC9BE,wBAA0B,SAACrG,GAAD,OAAoD,EAAK3Q,SAAS,CAAC+W,KAAK,EAAEE,aAAatG,EAAMnR,OAAOoN,SAhC5H,EAAK1M,MAAQ,CACX6W,KAAO,EACPE,YAAc,GACdhX,QAAO,EACPyW,gBAAgB,KAChBE,iBAAiB,MAPS,E,sEAoCrB,IAAD,SAC6DvW,KAAKH,MAAjE6W,EADD,EACCA,KAAKE,EADN,EACMA,YAAYhX,EADlB,EACkBA,OAAOyW,EADzB,EACyBA,gBAAgBE,EADzC,EACyCA,iBADzC,EAEgCvW,KAAK1C,MAApCuH,EAFD,EAECA,KAAKgS,EAFN,EAEMA,WAAW9M,EAFjB,EAEiBA,KAAK+M,EAFtB,EAEsBA,OAC5B,OACE,kBAACpH,GAAA,EAAD,CAAO9O,MAAO,CAACC,MAAM,OAAOoU,UAAU,SACpC,6BACE,kBAACtF,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGwB,GAAQnJ,KAAI,SAACoJ,EAAOpL,GAAR,OACX,kBAAC4J,GAAA,EAAD,CACEf,IAAKuC,EAAOtT,GACZG,QAAS,kBAAI0Y,EAAW3Q,KAEvBoL,EAAOtD,MACP9H,IAAM6D,GACL,8BACI+M,GAAU,yCACTA,GAAU,yCAGhB5Q,IAAM6D,GAAQ,8CAKvB,kBAACkG,GAAA,EAAD,KACGpL,EAAKkS,MAAML,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1O,KAAI,SAACqJ,EAAQrL,GAC7E,OACE,kBAAC2J,GAAA,EAAD,CACE1R,QAAS,kBAAI,EAAKiW,YAAW,EAAM7C,IACnCC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAG3C,IAAKwC,EAAIxJ,MAAQwJ,EAAIjO,WAAY1C,MAASsF,EAAI,EAAG,CAAEyL,WAAa,WAAY,CAAEA,WAAa,UAC9HN,GAAQnJ,KAAI,SAACoJ,EAAO9M,GACnB,IAAMkW,EAAIlX,GAAwB+N,EAAIjO,YAChCC,EAAe,UAANmX,EAAgB,MAAc,gBAANA,EAAsB,WAAQ,GACrE,OACE,kBAAC5K,GAAA,EAAD,CAAWf,IAAKuC,EAAOtT,GAAKuF,GACzBgO,EAAID,EAAOtT,IACG,UAAdsT,EAAOtT,IAAkBuF,aAU5C,kBAAC2T,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjC1V,UAAU,MACV2V,MAAOpX,KAAK1C,MAAMuH,KAAK2B,OACvBoQ,YAAaA,EACbF,KAAMA,EACNW,iBAAiB,GACjBC,oBAAqB,CACnB,aAAc,iBAEhBC,oBAAqB,CACnB,aAAc,aAEhBC,aAAcxX,KAAKwW,iBACnBiB,oBAAqBzX,KAAK2W,0BAE3B/W,GACC,kBAAC,GAAD,CAAyBA,OAAQA,EAAQwK,KAAMiM,EAAiBnN,MAAOqN,EAAkBnC,WAAYpU,KAAKoU,WAAYH,YAAY,S,GAvGpG7S,IAAMC,WCEzBwZ,G,YAEnB,WAAYvd,GAAS,IAAD,8BAClB,4CAAMA,KA+BRqa,kBAAoB,SAACjU,GAAD,OAAiB,SAACqF,GACpC,EAAK6O,WAAWlU,EAAKqF,EAAE5J,OAAO0Y,QAAQ,WAjCpB,EAoCpBC,iBAAmB,SAACpU,GAAD,OAAiB,SAACqF,GACnC,EAAK6O,WAAWlU,EAAKqF,EAAE5J,OAAO0Y,QAAQ,gBArCpB,EAwCpBD,WAAa,SAAClU,EAAYmU,EAAgB1Y,GACxC,IAAIqM,EAAW,EAAK3L,MAMpB,OALGgY,EACDrM,EAAQ,QAAYrM,GAAQqL,KAAK9G,GAEjC8H,EAAQ,QAAYrM,GAAUqM,EAAQ,QAAYrM,GAAQ8I,QAAO,SAACX,GAAD,OAAaA,IAAM5D,KAE/E,EAAK/D,SAAS,CAACmb,SAAS,EAAK9C,WAAWxM,GAAUyM,QAAQzM,EAAQ,WA/CvD,EAkDpB0M,kBAAoB,SAACnP,GACnB,IAAIyC,EAAW,EAAK2M,aAGpB,OAFA3M,EAAS4M,aAAerP,EAAIA,EAAE5J,OAAOoN,MAAQ,GAEtC,EAAK5M,SAAS,CAACmb,SAAS,EAAK9C,WAAWxM,GAAU4M,aAAa5M,EAAS4M,gBAtD7D,EAyDpBJ,WAAa,WAA4C,IAA3CxM,EAA0C,uDAAd,EAAK3L,MACvCqL,EAAiB,CAAC,QAAQ,UAAU,eAC1C,OAAO,EAAK5N,MAAMkb,KAAKvQ,QAAO,SAACpD,GAC7B,OACE2G,EAAQ,QAAR,MAA6BmN,MAAK,SAAC3W,GACjC,OAAOA,IAAS6C,EAAKQ,oBACvBmG,EAAQ,QAAR,WAAkCmN,MAAK,SAAC3W,GACtC,OAAOkJ,EAAM3C,OAAOvG,MAAWwB,GAAwBqB,EAAKvB,gBAC9DuB,EAAKkD,MAAM6Q,cAAc1V,QAAQsI,EAAQ,aAAiBoN,gBAAkB,MAjE9D,EAsEpB/B,WAAa,SAACgC,GAAsB,IAAD,EACX,EAAKhZ,MAApBkK,EAD0B,EAC1BA,KAAK+M,EADqB,EACrBA,OACZ,OAAG/M,IAAS8O,EACH,EAAKlZ,SAAS,CAACmX,QAAQA,IAEzB,EAAKnX,SAAS,CAACoK,KAAK8O,EAAO/B,QAAO,KA3EvB,EA8EpBgC,WAAa,WAAgB,IAAD,EACK,EAAKjZ,MAA7Bib,EADmB,EACnBA,SAAS/Q,EADU,EACVA,KAAK+M,EADK,EACLA,OACftR,EAAMsV,EAAS/Q,MAAK,SAACC,EAAEC,GAC3B,OAAOF,GACL,KAAK,EACL,OAAOxB,OAAO0B,EAAE5E,iBAAmBkD,OAAOyB,EAAE3E,iBAC5C,KAAK,EACL,QACA,OAAO4E,EAAElC,MAAMgR,cAAc/O,EAAEjC,MAAO,KAAM,CAACiR,SAAQ,QAGzD,OAAOlC,EAAStR,EAAMA,EAAImF,WAzFR,EA+FpBwN,WAAa,kBAAMmB,KAAKC,MAAMD,KAAKE,UAAU,EAAK3Z,SA7FhD,EAAKA,MAAQ,CACXuY,aAAa,GACb0C,SAAS,GACT/Q,KAAK,EACL+M,QAAO,EACPmB,QAAQ,CACNwB,MAAM,CAAC,KAAK,MACZnW,WAAW,CAAC,IAAI,IAAI,OAGxB,EAAKkN,gBAAkB,EAAKA,gBAAgBzD,KAArB,iBAZL,E,iFAgBlB/M,KAAKL,SAAS,CAACmb,SAAS9a,KAAKgY,iB,yCAGZ4B,GACjB,IAAIC,KAAMD,EAAUpB,KAAKxY,KAAK1C,MAAMkb,MAClC,OAAOxY,KAAKL,SAAS,CAACmb,SAAS9a,KAAKgY,iB,wCAIoE,IAA5F+C,EAA2F,wDAA/DC,EAA+D,uCACzG,OAAID,GAAgBC,EAGbhb,KAAK1C,MAAMkT,gBAAgBuK,EAAYC,GAFrChb,KAAK1C,MAAMkT,iBAAgB,K,+BAsE7B,IAAD,SACqCxQ,KAAKH,MAAzCuY,EADD,EACCA,aAAaH,EADd,EACcA,QAAQlO,EADtB,EACsBA,KAAK+M,EAD3B,EAC2BA,OACjC,OACE,gBAACvV,GAAA,EAAD,CAAW/D,UAAU,eAAegE,OAAK,EAACxD,GAAG,YAC3C,gBAACyC,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,cAAcuD,cAAY,EACtEf,MAAO,CAACzD,QAAQ,OAAO+T,eAAe,kBACtC,gBAAC,IAAD,CAAkBlT,GAAIgC,KAAK1C,MAAMyK,SAEnC,gBAAClG,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,EAAG2D,MAAO,CAACqN,OAAO,UACzC,gBAACpM,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,IACb,gBAACvE,GAAA,EAAD,CAAanP,UAAU,WAAWb,MAAO,CAACC,MAAM,SAChD,gBAACgQ,GAAA,EAAD,CAAYiJ,QAAQ,+BAA8B,gBAAC,IAAD,CAAkB9b,GAAG,wBACrE,gBAAC+b,GAAA,EAAD,CACEnZ,MAAO,CAACC,MAAM,QACdmZ,YAAa,WACbzN,MAAO6L,EACPrK,SAAU/N,KAAKkY,kBACf+B,aACE7B,GACA,gBAAC8B,GAAA,EAAD,CAAgB9L,SAAS,OACvB,gBAAChO,EAAA,EAAD,CAAYjC,QAAS,kBAAI,EAAK+Z,kBAAkB,QAC9C,gBAAC,KAAD,aAQd,gBAACrW,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,EAAGe,GAAG,cAAc4C,MAAO,CAACqN,OAAO,UAC1D,gBAACpM,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAanP,UAAU,YACrB,gBAAC0Y,GAAA,EAAD,CAAW1Y,UAAU,UAAS,gBAAC,IAAD,CAAkBzD,GAAG,yBACnD,gBAACoc,GAAA,EAAD,CAAW7I,KAAG,GACZ,gBAAC8I,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQwB,MAAMd,MAAK,SAAArR,GAAC,MAAS,OAANA,KAAayG,SAAU/N,KAAK2X,kBAAkB,MAAOpL,MAAM,OAC9GyB,MAAM,aAER,gBAACqM,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQwB,MAAMd,MAAK,SAAArR,GAAC,MAAS,OAANA,KAAayG,SAAU/N,KAAK2X,kBAAkB,MAAOpL,MAAM,OAC9GyB,MAAM,gBAKd,gBAACnM,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAanP,UAAU,YACrB,gBAAC0Y,GAAA,EAAD,CAAW1Y,UAAU,UAAS,gBAAC,IAAD,CAAkBzD,GAAG,8BACnD,gBAACoc,GAAA,EAAD,CAAW7I,KAAG,GACZ,gBAAC8I,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQ3U,WAAWqV,MAAK,SAAArR,GAAC,MAAS,MAANA,KAAYyG,SAAU/N,KAAK8X,iBAAiB,KAAMvL,MAAM,UAChHyB,MAAM,MAER,gBAACqM,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQ3U,WAAWqV,MAAK,SAAArR,GAAC,MAAS,MAANA,KAAYyG,SAAU/N,KAAK8X,iBAAiB,KAAMvL,MAAM,YAChHyB,MAAM,MAER,gBAACqM,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQ3U,WAAWqV,MAAK,SAAArR,GAAC,MAAS,MAANA,KAAYyG,SAAU/N,KAAK8X,iBAAiB,KAAMvL,MAAM,gBAChHyB,MAAM,eAOhB,gBAAC,GAAD,CACEnJ,KAAM7E,KAAK8Y,aAAc/O,KAAMA,EAAM+M,OAAQA,EAC7CD,WAAY7W,KAAK6W,WACjBrG,gBAAiBxQ,KAAKwQ,uB,GAxKSpP,aCxBpB6Z,G,YAEnB,WAAY3d,GAAc,IAAD,8BACvB,4CAAMA,KACDuC,MAAO,CACV2Y,KAAK,IAEP,EAAKhI,gBAAkB,EAAKA,gBAAgBzD,KAArB,iBALA,E,8MASjB/M,KAAKwQ,kB,kSAGSuK,E,gCAA4BC,E,wBAC7CD,IAAeC,E,uBAEhBpO,GADIA,EAAe5M,KAAKH,MAAM2Y,MACFvQ,QAAO,SAACjG,GAAD,OAAiBA,EAAK+F,QAAUiT,EAAejT,OAASiT,EAAe1X,c,kBACnGtD,KAAKL,SAAS,CAAC6Y,KAAK5L,K,cAEvBjD,EAAe/G,KACfsB,EAAWzB,K,WACc,IAAIwB,IAAU8G,OAAO7G,G,QAA9C4C,E,OACA4M,EAAK,IAAIjM,GACX+Q,EAAkB,GACdtS,EAAG,E,aAAEA,EAAIY,EAAMN,Q,wBACjB4D,EAAOtD,EAAMZ,G,UACCwN,EAAG/Q,QAAQyH,EAAKrC,MAAMvE,GAAwB4G,EAAK9G,YAAYqG,EAAazF,G,QAC5E,I,OAAXsC,QAAcgS,EAAKhO,KAAKJ,G,UAHDlE,E,wBAKhClG,KAAKL,SAAS,CAAC6Y,KAAKA,I,sIAIpB,OAA8B,IAA3BxY,KAAKH,MAAM2Y,KAAKhS,OAEf,gBAACjF,GAAA,EAAD,CAAW/D,UAAU,kBACnB,gBAAC8Q,GAAA,EAAD,OAIJ,2BACE,gBAAC,GAAD,CAAavG,MAAM,kBAAkByQ,KAAMxY,KAAKH,MAAM2Y,KAAMhI,gBAAiBxQ,KAAKwQ,uB,GA1CnDpP,aCMjC8Z,G,YAEJ,WAAY5d,GAAkB,IAAD,8BAC3B,4CAAMA,KACDuC,MAAO,CACV0Q,WAAU,EACV4K,SAAS,EACTC,QAAQ,IAEV,EAAK5K,gBAAkB,EAAKA,gBAAgBzD,KAArB,iBAPI,E,8MAWrB/M,KAAKwQ,kB,kRAILkD,EAAK,IAAIjM,GACTrC,EAAM,IAAIrB,GACV4F,EAAe/G,KACfsB,EAAWzB,K,UACY,IAAIwB,IAAUoX,oBAAoBnX,G,cAA/DkB,EAAIkW,iB,gBACsB5H,EAAG6H,iBAAiBrX,EAASyF,EAAa,M,cAApEvE,EAAIoW,c,kBAGoB,IAAI9R,IAAiBqB,OAAO7G,EAASyF,EAAa,M,aAAc,SAAC8R,EAAQzZ,GAC/F,IAAMI,EAAOG,KAAOP,EAAK8G,WAAWtG,OAAO,cAK3C,OAJKiZ,EAAOrZ,KACVqZ,EAAOrZ,GAAQ,IAEjBqZ,EAAOrZ,GAAMoI,KAAKxI,GACXyZ,G,KACN,GAPGC,E,OAA2ErR,O,WAQ7EsR,EAAoD,GACxDtS,OAAOqB,KAAKgR,GAAUxT,KAAI,SAAClG,EAAKkE,GAC9B,GAAGA,EAAI,GACL,OAAO,EAET,IAAMzB,EAAmBiX,EAAS1Z,GAAMqI,QAAO,SAACL,EAAM4R,GAAS,MAAO,CAAC/R,IAAIG,EAAEH,IAAM+R,EAAE/R,QAMrF,OALA8R,EAAWnR,KAAK,CACd9G,KAAO1B,EACPsE,IAAMoV,EAAS1Z,GAAMwE,OACrB/B,IAAMoB,KAAKG,MAAMvB,EAAIoF,IAAM6R,EAAS1Z,GAAMwE,OAAS,KAAO,MAErD,KAETxG,KAAKL,SAAS,CACZ4Q,WAAU,EACV4K,SAAS/V,EAAI+V,WACbC,QAAQO,EAAW5R,MAAK,SAACC,EAAEC,GAAH,OAAQ1H,KAAOyH,EAAEtG,MAAMN,KAAK6G,EAAEvG,W,sIAIjD,IAAD,EAC+B1D,KAAKH,MAAnCsb,EADD,EACCA,SAAS5K,EADV,EACUA,UAAU6K,EADpB,EACoBA,QACnB9H,EAAiBtT,KAAK1C,MAAMiW,KAA5BD,cACP,OAAG/C,EAEC,gBAAChP,GAAA,EAAD,CAAW/D,UAAU,kBACnB,gBAAC8Q,GAAA,EAAD,OAKJ,gBAAC/M,GAAA,EAAD,CAAW/D,UAAU,eAAegE,OAAK,GACvC,gBAACf,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,cAAcuD,cAAY,GACtE,gBAAC,IAAD,CAAkB3D,GAAG,iBAEvB,gBAAC6D,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,GACvB,gBAAC4E,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GAAI0G,GAAI,EAAGC,GAAI,GAC5B,gBAACpM,GAAA,EAAD,CAAO9O,MAAO,CAACmb,QAAQ,QAASve,UAAU,sBACxC,gBAACiD,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,UAAUuD,cAAY,GAClE,gBAAC,IAAD,CAAkB3D,GAAG,oBAEvB,gBAACyC,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,WAC3C+c,KAIP,gBAACtZ,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GAAI0G,GAAI,EAAGC,GAAI,GAC5B,gBAACpM,GAAA,EAAD,CAAO9O,MAAO,CAACmb,QAAQ,OAAOjN,OAAO,MACnC,gBAACrO,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,UAAUuD,cAAY,GAClE,gBAAC,IAAD,CAAkB3D,GAAG,mBAEtBod,EAAQ5U,OAAS,GAChB,uBAAK5F,MAAO,CAACC,MAAM,MAAMiO,OAAO,OAAOb,OAAO,aAC5C,gBAAC,KAAD,CAAqBpN,MAAM,QACzB,gBAAC,KAAD,CACEgE,KAAMuW,EACNnN,OAAQ,CACNM,IAAK,EAAGyN,MAAO,GAAIxN,MAAO,GAAIyN,OAAQ,KAExC,gBAAC,KAAD,CAAejN,gBAAgB,QAC/B,gBAAC,KAAD,CAAOC,QAAQ,SACf,gBAAC,KAAD,CAAOiN,KAAM,CAACC,IAAI,KAClB,gBAAC,KAAD,MACA,gBAAC,KAAD,CAAKlN,QAAQ,MAAMvL,KAAM4P,EAAc,CAACtV,GAAG,qBAAsBqR,KAAK,YACtE,gBAAC,KAAD,CAAMJ,QAAQ,MAAMvL,KAAM4P,EAAc,CAACtV,GAAG,uBAKhC,IAAnBod,EAAQ5U,QAAgB,mD,GAtGnBpF,aA+GL4U,gBAAWkF,I,SCzHLkB,G,YAEnB,aAAc,IAAD,8BACX,+CAKFvc,MAAQ,CACNwc,KAAOxZ,KACPyZ,MAAQ1Z,KACRpC,YAAY,GAPZ,EAAK+b,QAAU,EAAKA,QAAQxP,KAAb,iBACf,EAAKyP,SAAW,EAAKA,SAASzP,KAAd,iBAHL,E,qEAYL0P,GACN/Z,aAAagL,QAAQ,OAAO+O,GAC5Bzc,KAAKL,SAAS,CAAE0c,KAAMI,M,+BAGfC,GACPha,aAAagL,QAAQ,eAAegP,GACpC1c,KAAKL,SAAS,CAAE2c,MAAOI,M,8BAGjBlR,GACNxL,KAAKL,SAAS,CAAEa,WAAYgL,Q,GAzBajK,M,qBCuBvCob,G,YAEJ,WAAYrf,GAAS,IAAD,8BAClB,4CAAMA,KAYRsf,UAboB,wBAaR,yCAAA5S,EAAA,6DACJ6S,EAAM,WAAK,EAAKvf,MAAMiD,OAAOyM,SAAQ,IADjC,SAGR,EAAK1P,MAAMiD,OAAOyM,SAAQ,GAC1B,EAAKrN,SAAS,CAACmd,kBAAiB,EAAK5f,QAAQ,KACvC6f,EAAM,IAAI9Y,GACV+Y,EAAU,SAAC1V,GAAD,OAAgBA,EAAE+C,QAAO,SAACC,EAAgCC,GAAsD,OAAhCD,EAAOC,EAAQxC,OAASwC,EAAeD,IAAU,KANzI,SAOeyS,EAAIhS,OAAOtI,MAAaqH,MAAK,SAAAxC,GAAC,OAAE0V,EAAQ1V,MAPvD,cAOFoS,EAPE,iBASUuD,MAAM,4CAA4CnT,MAAK,SAAAxC,GAAC,OAAEA,EAAE4V,UATtE,YASF1X,EATE,QAUD0B,UAAY,EAAKrH,MAAMsd,eAVtB,wBAWNN,IAXM,kBAYC,EAAKld,SAAS,CAACmd,kBAAiB,EAAM5f,QAAQ,oFAZ/C,eAcFkgB,EAAkB,WACtB,OAAO5X,EAAIiI,KAAKvF,KAAI,SAACZ,GACnB,OAAO,IAAIwE,SAAQ,SAAAC,GACjB/C,QAAQjD,IAAIuB,EAAC,OACVoS,EAASpS,EAAC,OAEXyV,EAAIM,WAAW/V,GAAGwC,MAAK,kBAAIiC,OAG3BgR,EAAIrP,QAAQpG,GAAGwC,MAAK,kBAAIiC,cAvBxB,UA4BFD,QAAQrB,IAAI2S,KA5BV,eA6BFE,EAAO,IAAI7V,IACZ8V,qBAAqBP,EAAQxX,EAAIiI,OA9B9B,UA+BF6P,EAAKE,iBA/BH,QAgCR9a,aAAagL,QAAQ,iBAAiBlI,EAAI0B,SAC1C,EAAKvH,SAAS,CAACwd,eAAe3X,EAAI0B,QAAQ4V,kBAAiB,EAAM5f,QAAQ,6BAjCjE,kDAmCR8L,QAAQjD,IAAR,MAnCQ,eAqCV8W,IArCU,6EAXV,EAAKhd,MAAO,CACV0Q,WAAU,EACVuM,kBAAiB,EACjBK,eAAera,KACf5F,QAAQ,IANQ,E,uTAsDX,IAAD,SACuC8C,KAAKH,MAA3C0Q,EADD,EACCA,UAAUuM,EADX,EACWA,iBAAiB5f,EAD5B,EAC4BA,QAClC,OAAGqT,EAEC,gBAAChP,GAAA,EAAD,CAAW/D,UAAU,kBACnB,gBAAC8Q,GAAA,EAAD,OAKJ,gBAAC,KAAD,CAAWxN,GAAI,CAACsb,MACb,gBAAEvc,EAAF,EAAEA,MAAM0c,EAAR,EAAQA,QAAQC,EAAhB,EAAgBA,SAAhB,OACC,gBAACjb,GAAA,EAAD,CAAW/D,UAAU,eAAegE,OAAK,GACvC,gBAACf,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,cAAcuD,cAAY,GACtE,gBAAC,IAAD,CAAkB3D,GAAG,oBAEvB,gBAAC0R,GAAA,EAAD,CAAO9O,MAAO,CAACmb,QAAQ,SACrB,gBAACnL,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KAAY,gBAAC,IAAD,CAAkB7S,GAAG,uBACjC,gBAAC+S,GAAA,EAAD,CAAQxE,MAAO1M,EAAMwc,KAAMtO,SAAU,SAAChF,GACP,kBAAnBA,EAAE5J,OAAOoN,OACjBgQ,EAAQxT,EAAE5J,OAAOoN,SAGnB,gBAAC0E,GAAA,EAAD,CAAU1E,MAAM,MAAhB,sBACA,gBAAC0E,GAAA,EAAD,CAAU1E,MAAM,MAAhB,aAGJ,gBAAC9L,EAAA,EAAD,CAAY/C,QAAQ,UAAUP,QAAQ,SACpC,gBAAC,IAAD,CAAkBa,GAAG,uBAEvB,gBAACmD,EAAA,EAAD,CAASP,MAAO,CAACqN,OAAO,YACxB,gBAAC2C,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KAAY,gBAAC,IAAD,CAAkB7S,GAAG,wBACjC,gBAAC+S,GAAA,EAAD,CAAQxE,MAAO1M,EAAMyc,MAAOvO,SAAU,SAAChF,GACR,kBAAnBA,EAAE5J,OAAOoN,OACjBiQ,EAASzT,EAAE5J,OAAOoN,SAGpB,gBAAC0E,GAAA,EAAD,CAAU1E,MAAM,MAAhB,cACA,gBAAC0E,GAAA,EAAD,CAAU1E,MAAM,MAAhB,qBAGJ,gBAAC9L,EAAA,EAAD,CAAY/C,QAAQ,UAAUP,QAAQ,SACpC,gBAAC,IAAD,CAAkBa,GAAG,uBAEvB,gBAACyC,EAAA,EAAD,CAAY/C,QAAQ,UAAUP,QAAQ,SACpC,gBAAC,IAAD,CAAkBa,GAAG,4BAEvB,gBAACmD,EAAA,EAAD,CAASP,MAAO,CAACqN,OAAO,YACtB,gBAAC2C,GAAA,EAAD,KACE,gBAACnQ,EAAA,EAAD,CAAY/C,QAAQ,UAAUP,QAAQ,QAAQK,UAAU,iEACtD,gBAAC,IAAD,CAAkBQ,GAAG,qBAEvB,uBAAK4C,MAAO,CAACwN,SAAS,aACpB,gBAAClQ,EAAA,EAAD,CACER,QAAQ,YACRU,MAAM,YACND,QAAS,EAAKye,UACdvO,SAAUyO,EACVW,UAAW,gBAAC,KAAD,OACX,gBAAC,IAAD,CAAkBzf,GAAG,kCAEtB8e,GAAoB,gBAACxO,GAAA,EAAD,CAAkBjQ,KAAM,GAAIuC,MAAO,CAACxC,MAAM,OAAOgQ,SAAS,WAAWG,IAAI,MAAMC,KAAK,MAAMC,WAAW,GAAGC,YAAY,QAG7I,gBAACjO,EAAA,EAAD,CAAY/C,QAAQ,UAAUP,QAAQ,SACnCD,GAEH,gBAACuD,EAAA,EAAD,CAAY/C,QAAQ,UAAUP,QAAQ,SACpC,gBAAC,IAAD,CAAkBa,GAAG,4BAA4B,EAAK6B,MAAMsd,gBAE9D,gBAAC1c,EAAA,EAAD,CAAY/C,QAAQ,UAAUP,QAAQ,SACpC,gBAAC,IAAD,CAAkBa,GAAG,qC,GAjIhBoD,aA2IR4U,gBAAW2G,IC3ILe,G,YAEnB,WAAYpgB,GAAS,IAAD,8BAClB,4CAAMA,KAQR8W,WAToB,yCASP,WAAM+B,EAAmB5E,GAAzB,UAAAvH,EAAA,+EACJ,EAAKrK,SAAS,CACnBC,QAAQ,EAAKC,MAAMD,OACnByW,gBAAgB9E,EAAMA,EAAG,SAAe,KACxCgF,iBAAiBhF,EAAMA,EAAG,UAAgB,QAJjC,2CATO,0DAiBpB4G,WAAa,kBAAMmB,KAAKC,MAAMD,KAAKE,UAAU,EAAK3Z,SAjB9B,EAmBpB2W,iBAAmB,SAACzD,EAA2D0D,GAA5D,OAAoF,EAAKnZ,MAAMkZ,iBAAiBC,IAnB/G,EAqBpBE,wBAA0B,SAACrG,GAAD,OAAoD,EAAKhT,MAAMqZ,wBAAwBrG,EAAMnR,OAAOoN,QAnB5H,EAAK1M,MAAO,CACVD,QAAO,EACPyW,gBAAgB,KAChBE,iBAAiB,MALD,E,sEAuBX,IAAD,SAC4CvW,KAAKH,MAAhD0W,EADD,EACCA,iBAAiBF,EADlB,EACkBA,gBAAgBzW,EADlC,EACkCA,OADlC,EAE2DI,KAAK1C,MAA/Dkb,EAFD,EAECA,KAAKjI,EAFN,EAEMA,UAAUmG,EAFhB,EAEgBA,KAAKE,EAFrB,EAEqBA,YAAYC,EAFjC,EAEiCA,WAAW9M,EAF5C,EAE4CA,KAAK+M,EAFjD,EAEiDA,OAEjDzF,EAAU,CACd,CAAErT,GAAI,kBAAmBgQ,MAAO,UAChC,CAAEhQ,GAAI,QAASgQ,MAAO,gBACtB,CAAEhQ,GAAI,UAAWgQ,MAAO,UACxB,CACEhQ,GAAI,cACJgQ,MAAO,YAGX,OAAGuC,EAEC,gBAAChP,GAAA,EAAD,CAAW/D,UAAU,kBACnB,gBAAC8Q,GAAA,EAAD,OAKN,gBAACoB,GAAA,EAAD,CAAO9O,MAAO,CAACC,MAAM,OAAOoU,UAAU,SACpC,2BACE,gBAACtF,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACGwB,EAAQnJ,KAAI,SAACoJ,EAAOpL,GAAR,OACX,gBAAC4J,GAAA,EAAD,CACEf,IAAKuC,EAAOtT,GACZG,QAAS,kBAAI0Y,EAAW3Q,KAEvBoL,EAAOtD,MACP9H,IAAM6D,GACL,4BACI+M,GAAU,uCACTA,GAAU,uCAGhB5Q,IAAM6D,GAAQ,4CAKvB,gBAACkG,GAAA,EAAD,KACGuI,EAAKzB,MAAML,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1O,KAAI,SAACqJ,EAAQrL,GAC7E,OACE,gBAAC2J,GAAA,EAAD,CACE1R,QAAS,kBAAI,EAAKiW,YAAW,EAAM7C,IACnCC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAG3C,IAAKwC,EAAIxJ,MAAOnH,MAASsF,EAAI,EAAG,CAAEyL,WAAa,WAAY,CAAEA,WAAa,UAC7GN,EAAQnJ,KAAI,SAACoJ,EAAO9M,GACnB,IAAMjB,EAA4B,UAAnBgO,EAAIjO,WAAyB,MAA2B,gBAAnBiO,EAAIjO,WAA+B,WAAQ,GAC/F,OACE,gBAACwM,GAAA,EAAD,CAAWf,IAAKuC,EAAOtT,GAAKuF,EAAQ3C,MAAO,CAACvE,gBAAkB4Z,GAAUzR,EAAE+M,EAAIwG,WAAW3J,SAAS,aAC/FmD,EAAID,EAAOtT,IACJ,IAANwG,GAAY,wBAAMhH,UAAU,oBAC3B+T,EAAIoM,gBAYzB,gBAACzG,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,GAAI,KACjC1V,UAAU,MACV2V,MAAOoB,EAAKhS,OACZoQ,YAAaA,EACbF,KAAMA,EACNW,iBAAiB,GACjBC,oBAAqB,CACnB,aAAc,iBAEhBC,oBAAqB,CACnB,aAAc,aAEhBC,aAAcxX,KAAKwW,iBACnBiB,oBAAqBzX,KAAK2W,0BAE3B/W,GACC,gBAAC,GAAD,CAAyBA,OAAQA,EAAQwK,KAAMiM,EAAiBnN,MAAOqN,EAAkBnC,WAAYpU,KAAKoU,kB,GA7G7EhT,aCAhBsc,G,YAEnB,WAAYpgB,GAAc,IAAD,8BACvB,4CAAMA,KAuBRqa,kBAAoB,SAACjU,GAAD,OAAiB,SAACqF,GACpC,EAAK6O,WAAWlU,EAAKqF,EAAE5J,OAAO0Y,QAAQ,WAzBf,EA4BzBC,iBAAmB,SAACpU,GAAD,OAAiB,SAACqF,GACnC,EAAK6O,WAAWlU,EAAKqF,EAAE5J,OAAO0Y,QAAQ,gBA7Bf,EAgCzBD,WAAa,SAAClU,EAAYmU,EAAgB1Y,GACxC,IAAIqM,EAAa,EAAK3L,MAOtB,OANGgY,EACDrM,EAAQ,QAAYrM,GAAQqL,KAAK9G,GAEjC8H,EAAQ,QAAYrM,GAAUqM,EAAQ,QAAYrM,GAAQ8I,QAAO,SAACX,GAAD,OAAaA,IAAM5D,KAEtF,EAAK/D,SAAS,CAACsY,QAAQzM,EAAQ,UACxB,EAAKvD,UAxCW,EA2CzB4O,WAAa,SAACgC,GAAsB,IAAD,EACX,EAAKhZ,MAApBkK,EAD0B,EAC1BA,KAAK+M,EADqB,EACrBA,OACZ,GAAG/M,IAAS8O,EACV,OAAO,EAAKlZ,SAAS,CAACmX,QAAQA,IAEhC,EAAKnX,SAAS,CAACoK,KAAK8O,EAAO/B,QAAO,KAhDX,EAmDzB8G,wBAnDyB,yCAmDC,WAAOtN,GAAP,gBAAAtG,EAAA,yDACU,kBAAvBsG,EAAMnR,OAAOoN,MADA,wDAEpBf,EAAW,EAAK2M,cACX0F,YAAcvN,EAAMnR,OAAOoN,MACpC,EAAK5M,SAAS,CAACke,YAAYvN,EAAMnR,OAAOoN,MAAMgE,WAAU,IAJhC,kBAKjB,EAAKuN,YAAYtS,IALA,2CAnDD,wDA2DzBuS,sBA3DyB,yCA2DD,WAAOzN,GAAP,gBAAAtG,EAAA,yDACY,kBAAvBsG,EAAMnR,OAAOoN,MADF,wDAElBf,EAAW,EAAK2M,cACX6F,UAAY1N,EAAMnR,OAAOoN,MAClC,EAAK5M,SAAS,CAACqe,UAAU1N,EAAMnR,OAAOoN,MAAMgE,WAAU,IAJhC,kBAKf,EAAKuN,YAAYtS,IALF,2CA3DC,wDAmEzBvD,OAAS,WAAW,IAAD,EACM,EAAKpI,MAArBoY,EADU,EACVA,QAAQO,EADE,EACFA,KACTtN,EAAiB,CAAC,QAAQ,UAAU,eAC1C,OAAOsN,EAAKvQ,QAAO,SAACpD,GAAD,OACfoT,EAAO,MAAUU,MAAK,SAAC3W,GAAD,OAAeA,IAAS6C,EAAKQ,oBACnD4S,EAAO,WAAeU,MAAK,SAAC3W,GAAD,OAAekJ,EAAM3C,OAAOvG,MAAW6C,EAAKvB,kBAxEpD,EA2GzBwV,WAAa,WAAW,IAAD,EACC,EAAKjZ,MAApBiX,EADc,EACdA,OAAO/M,EADO,EACPA,KACR+O,EAAmB,EAAK7Q,SAAS8B,MAAK,SAACC,EAAEC,GAC7C,OAAOF,GACL,KAAK,EACL,OAAOxB,OAAO0B,EAAE5E,iBAAmBkD,OAAOyB,EAAE3E,iBAC5C,KAAK,EACL,OAAO4E,EAAElC,MAAMgR,cAAc/O,EAAEjC,MAAO,KAAM,CAACiR,SAAQ,IACrD,QACA,KAAK,EACH,OAAO/O,EAAEnF,QAAUkF,EAAElF,QACvB,KAAK,EACH,OAAOmF,EAAE0T,IAAM3T,EAAE2T,QAIvB,OADA3U,QAAQjD,IAAI+S,GACLhC,EAASgC,EAAWnO,UAAYmO,GA3HhB,EA8HzBX,WAAa,kBAAMmB,KAAKC,MAAMD,KAAKE,UAAU,EAAK3Z,SA9HzB,EAgIzB2W,iBAAmB,SAACC,GAAD,OAAyB,EAAK9W,SAAS,CAAC+W,KAAKD,KAhIvC,EAkIzBE,wBAA0B,SAACpK,GAAD,OAAuB,EAAK5M,SAAS,CAAC+W,KAAK,EAAEE,aAAarK,KAhIlF,EAAK1M,MAAO,CACV0Q,WAAU,EACViI,KAAK,GACLyF,SAAS,GACTlU,KAAK,EACL+M,QAAO,EACPmB,QAAQ,CACNwB,MAAM,CAAC,KAAK,MACZnW,WAAW,CAAC,IAAI,IAAI,MAEtB8U,aAAa,GACbyF,YAAY,KACZG,UAAU,KACVtH,KAAK,EACLE,YAAY,IAhBS,E,8LAqBvB5W,KAAK8d,c,sSAuDWtS,E,+BAAexL,KAAKH,MAChCyK,EAAe,GACbiO,EAAI/M,EAASqS,YACbvW,EAAIkE,EAASwS,UACb9Z,EAAWzB,KACXoE,EAAS,IAAIY,GAASvD,EAASqU,GAC/BwE,EAAM,IAAI9Y,G,SACI4C,EAAOqX,wB,OAArBC,E,OACEjY,EAAG,E,aAAGA,EAAIiY,EAAM3X,Q,wBAClB4X,EAAS,E,UACOvX,EAAOlE,QAAQwb,EAAMjY,GAAN,MAAkBiY,EAAMjY,GAAN,WAAuBoB,EAAEpD,G,eAAxEma,E,iBACiBtB,EAAI9X,mBAAmBkZ,EAAMjY,GAAN,MAAkBiY,EAAMjY,GAAN,Y,QAA1D4U,E,OAIJsD,EAHEC,GAA0B,IAAjBA,EAAM7X,OAGR6X,EAAM,GAAN,QAFA,EAIX/T,EAAOE,KAAK,CACVzC,MAAMoW,EAAMjY,GAAN,MACN4U,SAAUA,EAAS,GACnB/C,UAAWoG,EAAMjY,GACjB5C,WAAW6a,EAAMjY,GAAN,WACXb,gBAAgB8Y,EAAMjY,GAAN,gBAChBpB,QAAQqZ,EAAMjY,GAAN,QACRoY,YAAYF,EACZT,IAAIQ,EAAMjY,GAAN,QAAsBkY,I,UAjBIlY,E,iDAoB3BlG,KAAKL,SAAS,CAAC6Y,KAAKlO,EAAOiG,WAAU,K,sIA4BrC,IAAD,EAC8EvQ,KAAKH,MAA7Ege,GADN,EACCrF,KADD,EACMqF,aAAYG,EADlB,EACkBA,UAAUzN,EAD5B,EAC4BA,UAAUmG,EADtC,EACsCA,KAAKE,EAD3C,EAC2CA,YAAYqB,EADvD,EACuDA,QAAQlO,EAD/D,EAC+DA,KAAK+M,EADpE,EACoEA,OAC1E,OAAI9W,KAAKH,MAAM2Y,KAIb,gBAACjX,GAAA,EAAD,CAAW/D,UAAU,eAAegE,OAAK,GACvC,gBAACf,EAAA,EAAD,CAAYgB,UAAU,KAAK/D,QAAQ,KAAKU,MAAM,cAAcuD,cAAY,GACtE,gBAAC,IAAD,CAAkB3D,GAAG,mBAEvB,gBAAC6D,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,EAAG2D,MAAO,CAACqN,OAAO,UACzC,gBAACpM,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAahQ,MAAO,CAACC,MAAM,SACzB,gBAACgQ,GAAA,EAAD,KAAY,gBAAC,IAAD,CAAkB7S,GAAG,kBACjC,gBAAC+S,GAAA,EAAD,CAAQxE,MAAOsR,EAAa9P,SAAU/N,KAAK4d,yBACzC,gBAAC3M,GAAA,EAAD,CAAU1E,MAAO,MAAjB,cACA,gBAAC0E,GAAA,EAAD,CAAU1E,MAAO,MAAjB,sBAIN,gBAAC1K,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAahQ,MAAO,CAACC,MAAM,SACzB,gBAACgQ,GAAA,EAAD,KAAY,gBAAC,IAAD,CAAkB7S,GAAG,gBACjC,gBAAC+S,GAAA,EAAD,CAAQxE,MAAOyR,EAAWjQ,SAAU/N,KAAK+d,uBACvC,gBAAC9M,GAAA,EAAD,CAAU1E,MAAO,MAAjB,cACA,gBAAC0E,GAAA,EAAD,CAAU1E,MAAO,MAAjB,mBACA,gBAAC0E,GAAA,EAAD,CAAU1E,MAAO,MAAjB,gBACA,gBAAC0E,GAAA,EAAD,CAAU1E,MAAO,WAAjB,eAKR,gBAAC1K,GAAA,EAAD,CAAMC,WAAS,EAAC7E,QAAS,EAAGe,GAAG,cAAc4C,MAAO,CAACqN,OAAO,UAC1D,gBAACpM,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAanP,UAAU,YACrB,gBAAC0Y,GAAA,EAAD,CAAW1Y,UAAU,UAAS,gBAAC,IAAD,CAAkBzD,GAAG,yBACnD,gBAACoc,GAAA,EAAD,CAAW7I,KAAG,GACZ,gBAAC8I,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQwB,MAAMd,MAAK,SAAArR,GAAC,MAAS,OAANA,KAAayG,SAAU/N,KAAK2X,kBAAkB,MAAOpL,MAAM,OAC9GyB,MAAM,aAER,gBAACqM,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQwB,MAAMd,MAAK,SAAArR,GAAC,MAAS,OAANA,KAAayG,SAAU/N,KAAK2X,kBAAkB,MAAOpL,MAAM,OAC9GyB,MAAM,gBAKd,gBAACnM,GAAA,EAAD,CAAMG,MAAI,EAACmT,GAAI,GACb,gBAACvE,GAAA,EAAD,CAAanP,UAAU,YACrB,gBAAC0Y,GAAA,EAAD,CAAW1Y,UAAU,UAAS,gBAAC,IAAD,CAAkBzD,GAAG,8BACnD,gBAACoc,GAAA,EAAD,CAAW7I,KAAG,GACZ,gBAAC8I,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQ3U,WAAWqV,MAAK,SAAArR,GAAC,MAAS,MAANA,KAAYyG,SAAU/N,KAAK8X,iBAAiB,KAAMvL,MAAM,UAChHyB,MAAM,MAER,gBAACqM,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQ3U,WAAWqV,MAAK,SAAArR,GAAC,MAAS,MAANA,KAAYyG,SAAU/N,KAAK8X,iBAAiB,KAAMvL,MAAM,YAChHyB,MAAM,MAER,gBAACqM,GAAA,EAAD,CACEC,QAAS,gBAACC,GAAA,EAAD,CAAU1C,QAASI,EAAQ3U,WAAWqV,MAAK,SAAArR,GAAC,MAAS,MAANA,KAAYyG,SAAU/N,KAAK8X,iBAAiB,KAAMvL,MAAM,gBAChHyB,MAAM,eAMhB,gBAAC,GAAD,CAAcwK,KAAMxY,KAAK8Y,aAAcvI,UAAWA,EAAWmG,KAAMA,EAAME,YAAaA,EAAa7M,KAAMA,EAAM+M,OAAQA,EACvHD,WAAY7W,KAAK6W,WACjBF,wBAAyB3W,KAAK2W,wBAAyBH,iBAAkBxW,KAAKwW,oBAnExE,S,GAzIuBpV,aCiEtBmd,GAjGJ,CACT,YAAa,aACb,iBAAkB,qBAClB,iBAAkB,qBAClB,0BAA2B,6CAC3B,qBAAsB,2BACtB,8BAA+B,uCAC/B,uBAAwB,eACxB,oBAAqB,iCACrB,qBAAsB,eACtB,iBAAkB,2JAClB,qBAAuB,iCACvB,eAAiB,0LACjB,eAAiB,iQACjB,WAAa,yDACb,gBAAkB,uTAClB,kBAAoB,eACpB,cAAgB,qBAChB,kBAAoB,gSACpB,eAAgB,uCAChB,mBAAoB,2QACpB,eAAe,iFACf,cAAc,iFACd,YAAc,mDACd,iBAAmB,gNACnB,kBAAoB,uUACpB,kBAAoB,mMACpB,kBAAoB,iRACpB,kBAAoB,cACpB,cAAc,iCACd,sBAAsB,qBACtB,2BAA2B,qBAC3B,uBAAuB,2BACvB,qBAAqB,6CACrB,yBAAyB,uCACzB,aAAa,iCACb,cAAc,kBACd,cAAc,gBACd,cAAc,iBACd,cAAc,kBACd,cAAc,kBACd,cAAc,yBACd,cAAc,4BACd,cAAc,wBACd,eAAe,6OACf,qBAAqB,yDACrB,qBAAqB,eACrB,uBAAuB,yDACvB,oBAAoB,iCACpB,0BAA0B,6CAC1B,2BAA2B,uFAC3B,yBAAyB,2EACzB,gBAAgB,qBAChB,kBAAkB,eAClB,gBAAgB,eAChB,wBAAwB,iGACxB,eAAe,2BACf,4BAA4B,eAC5B,mBAAmB,2BACnB,yBAAyB,eACzB,qBAAqB,2BACrB,iBAAiB,qBACjB,qBAAqB,iCACrB,6BAA6B,iCAC7B,wBAAwB,qBACxB,uBAAuB,uCACvB,wBAAwB,iCACxB,0BAA0B,eAC1B,mBAAmB,uCACnB,8BAA8B,mDAC9B,wBAAwB,uCACxB,kBAAkB,iCAClB,kBAAkB,uCAClB,cAAc,iCACd,iBAAiB,kBACjB,gBAAgB,iDAChB,qBAAqB,uCACrB,mBAAmB,2BACnB,gBAAgB,kBAChB,qBAAqB,qBACrB,4BAA4B,uCAC5B,gBAAgB,iCAChB,eAAe,qBACf,aAAa,qBACb,iBAAiB,eACjB,oBAAoB,eACpB,qBAAqB,iCACrB,kBAAkB,mDAClB,oBAAoB,qGACpB,oBAAoB,6LACpB,yBAAyB,8PACzB,kBAAkB,eAClB,+BAA+B,mDAC/B,0BAA0B,gEAC1B,yBAAyB,gHCEZA,GAhGJ,CACT,YAAa,aACb,iBAAkB,OAClB,iBAAkB,OAClB,0BAA2B,iBAC3B,qBAAsB,QACtB,8BAA+B,iBAC/B,uBAAwB,aACxB,oBAAqB,UACrB,qBAAsB,WACtB,iBAAkB,4EAClB,qBAAuB,cACvB,eAAiB,kFACjB,eAAiB,6GACjB,WAAa,oBACb,gBAAkB,+IAClB,kBAAoB,eACpB,cAAgB,OAChB,kBAAoB,+DACpB,eAAgB,SAChB,mBAAoB,8EACpB,eAAe,yBACf,cAAc,2BACd,YAAc,0BACd,iBAAmB,4EACnB,kBAAoB,oFACpB,kBAAoB,iEACpB,kBAAoB,uFACpB,kBAAoB,cACpB,cAAc,QACd,sBAAsB,QACtB,2BAA2B,aAC3B,uBAAuB,YACvB,qBAAqB,uBACrB,yBAAyB,YACzB,aAAa,gBACb,cAAc,aACd,cAAc,QACd,cAAc,SACd,cAAc,UACd,cAAc,UACd,cAAc,iBACd,cAAc,oBACd,cAAc,gBACd,eAAe,sDACf,qBAAqB,yCACrB,qBAAqB,OACrB,uBAAuB,YACvB,oBAAoB,WACpB,0BAA0B,kBAC1B,2BAA2B,wBAC3B,yBAAyB,sBACzB,gBAAgB,QAChB,kBAAkB,UAClB,gBAAgB,QAChB,wBAAwB,2CACxB,eAAe,QACf,4BAA4B,OAC5B,mBAAmB,QACnB,yBAAyB,eACzB,qBAAqB,UACrB,iBAAiB,MACjB,qBAAqB,UACrB,6BAA6B,cAC7B,mBAAmB,WACnB,8BAA8B,0BAC9B,wBAAwB,kBACxB,wBAAwB,cACxB,uBAAuB,aACvB,wBAAwB,cACxB,0BAA0B,SAC1B,kBAAkB,YAClB,kBAAkB,iBAClB,cAAc,aACd,iBAAiB,YACjB,gBAAgB,wBAChB,qBAAqB,cACrB,mBAAmB,6BACnB,gBAAgB,cAChB,4BAA4B,+BAC5B,gBAAgB,UAChB,eAAe,cACf,aAAa,eACb,iBAAiB,WACjB,oBAAoB,WACpB,qBAAqB,UACrB,kBAAkB,kBAClB,oBAAoB,mHACpB,oBAAoB,qFACpB,yBAAyB,4KACzB,kBAAkB,SAClB,+BAA+B,yBAC/B,0BAA0B,0CAC1B,yBAAyB,wCCvENC,G,iLAGjB,OACE,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAW1d,GAAI,CAACsb,MACb,SAAA7b,GACC,OAAQ,gBAAC,KAAD,CACNke,OAAQle,EAAOV,MAAMwc,KACrBqC,SAAgC,OAAtBne,EAAOV,MAAMwc,KAAgBkC,GAAKI,IAE5C,gBAAC,IAAD,KACE,gBAAC,GAAD,CAAQpe,OAAQA,IAChB,gBAAC,KAAD,CAAOqe,KAAK,IAAIC,OAAK,EAACpd,UAAWH,KACjC,gBAAC,KAAD,CAAOsd,KAAK,QAAQC,OAAK,EAACC,OAAQ,SAAAC,GAAM,OAAE,gBAAC,GAAD,CAAMxe,OAAQA,OACxD,gBAAC,KAAD,CAAOqe,KAAK,SAASC,OAAK,EAACpd,UAAW+Y,KACtC,gBAAC,KAAD,CAAOoE,KAAK,YAAYC,OAAK,EAACpd,UAAWud,KACzC,gBAAC,KAAD,CAAOJ,KAAK,aAAaC,OAAK,EAACpd,UAAWwZ,KAC1C,gBAAC,KAAD,CAAO2D,KAAK,SAASC,OAAK,EAACpd,UAAWyZ,KACtC,gBAAC,KAAD,CAAO0D,KAAK,WAAWC,OAAK,EAACpd,UAAWic,KACxC,gBAAC,KAAD,CAAOkB,KAAK,YAAYC,OAAK,EAACC,OAAQ,SAAAC,GAAM,OAAE,gBAAC,GAAD,CAAUxe,OAAQA,iB,GApB5Ca,aCjBf6d,G,YAInB,WAAY3hB,GAAc,IAAD,8BACvB,4CAAMA,KAJR4hB,aAGyB,IAFzBjb,aAEyB,IASzBkb,KAAO,WAAsB,IAArBC,EAAoB,uDAAN,GACpB,OAAO,IAAItT,SAAQ,SAAAC,GACjBsT,WAAWtT,EAASqT,OATtB,EAAKF,QAAU,IAAItY,GACnB,EAAK3C,QAAU,IAAIA,GACnB,EAAKpE,MAAQ,CACXyf,MAAO,GALc,E,iOAiBiBtf,KAAKiE,QAAQ8G,S,mBACjCvE,OAAS,G,yCAClBxG,KAAKL,SAAS,CAAC2f,MAAK,K,cAEvBC,EAAMrd,GAAc,G,SACR+a,MAAM,4CAA4CnT,MAAK,SAAAxC,GAAC,OAAEA,EAAE4V,U,OAAxEsC,E,OACEtZ,EAAE,E,aAAEA,EAAIsZ,EAAI/R,KAAKjH,Q,kCACjBxG,KAAKiE,QAAQyJ,QAAQrE,OAAOC,OAAOkW,EAAG,KAAStZ,GAAG,CACtD+E,aAAY,EACZM,WAAU,EACVzC,UAAUyW,K,QAEZvf,KAAKmf,KAAK,G,UANsBjZ,E,+BAQlCxD,aAAagL,QAAQ,WAAW,QAChChL,aAAagL,QAAQ,iBAAiB8R,EAAItY,S,kBACnClH,KAAKL,SAAS,CAAC2f,MAAK,K,kCAE3BtW,QAAQjD,IAAR,M,+IAKF,OAAI/F,KAAKH,MAAMyf,KAIb,uBAAKthB,GAAG,iBACN,2BACE,gBAACsQ,GAAA,EAAD,OAEF,2BACE,8DARI,S,GA7C0BlN,a,8BC4DzBhF,GA/DMqjB,aAAe,CAClCljB,QAAS,CACP4F,KAAM,QACN1F,QAAS,CACPijB,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERC,UAAW,CACTd,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,YAIV,YAAe,CACb,KAAQ,CACN,KACA,KACA,KACA,KACA,MAEF,OAAU,CACR,GAAM,IACN,GAAM,IACN,GAAM,IACN,GAAM,KACN,GAAM,OAIVE,UAAW,CACTC,UAAW,CACTC,KAAM,CACJC,cAAe,YC/CHlL,QACW,cAA7B1W,OAAO6hB,SAASC,UAEe,UAA7B9hB,OAAO6hB,SAASC,UAEhB9hB,OAAO6hB,SAASC,SAASC,MACvB,2DCZNC,SAAgB,iBCED,WAGb,OADAC,SAASlZ,MAAQ,cAEf,gBAACmZ,GAAA,EAAD,CAAe9kB,MAAO+kB,IACpB,gBAACC,GAAA,EAAD,MACA,gBAAC,GAAD,MACA,gBAAC,GAAD,SDTU,MAASH,SAASI,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1X,MAAK,SAAA2X,GACjCA,EAAaC,kB","file":"static/js/main.2e655fcc.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles = makeStyles((theme: Theme) => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nexport interface Props {\r\n  className?: string;\r\n  message?: string;\r\n  onClose?: () => void;\r\n  variant: keyof typeof variantIcon;\r\n  autoHideDuration?:number\r\n  open?:boolean,\r\n  handleClose?:()=>void\r\n}\r\n\r\nfunction SnackBarWrapper(props: Props) {\r\n  const classes = styles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <Button onClick={onClose} color=\"inherit\" size=\"small\">\r\n          Ok\r\n        </Button>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function ShowSnackBar(props:Props) {\r\n  if(!props.open){\r\n    return (null);\r\n  }\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={props.open}\r\n        autoHideDuration={props.autoHideDuration ? props.autoHideDuration : 2000}\r\n        onClose={props.handleClose}\r\n      >\r\n        <SnackBarWrapper\r\n          onClose={props.handleClose}\r\n          variant={props.variant}\r\n          message={props.message}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\r\n\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ShowSnackBar from \"../snackBar\";\r\n\r\nfunction HideOnScroll(props:HideOnScrollProps) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\ninterface HideOnScrollProps {\r\n  children?: React.ReactElement,\r\n  window?: () => Window,\r\n};\r\n\r\nclass GlobalHeader extends React.Component<{global:any} & HideOnScrollProps,{isOpen:boolean,errorSnack:boolean}>{\r\n\r\n  constructor(props:{global:any} & HideOnScrollProps){\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      errorSnack:false\r\n    }\r\n  }\r\n\r\n  toggleNav = ()=> this.setState({isOpen:!this.state.isOpen});\r\n  toggleErrorSnack = ()=> this.setState({errorSnack:!this.state.errorSnack});\r\n\r\n  render(){\r\n    const {isOpen} = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <HideOnScroll {...this.props}>\r\n          <AppBar>\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={()=>{\r\n                if(!this.props.global.state.cannotMove){\r\n                  return this.toggleNav();\r\n                }else{\r\n                  return this.toggleErrorSnack();\r\n                }\r\n              }}>\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\">\r\n                <FormattedMessage id=\"Top.Title\"/>\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </HideOnScroll>\r\n        <Toolbar />\r\n        <Drawer open={isOpen} onClose={this.toggleNav}>\r\n          <List style={{width:\"230px\"}}>\r\n            <Link to=\"/\" className=\"forceTextColorBlack\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><HomeIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.Home\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/data\" className=\"forceTextColorBlack\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><StorageIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.Data\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/favorite\" className=\"forceTextColorBlack\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><StarIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.FavoriteSongs\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/songs\" className=\"forceTextColorBlack\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><LibraryMusicIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.SongList\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/notPlayed\" className=\"forceTextColorBlack\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><BorderColorIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.unregisteredSongs\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/compare\" className=\"forceTextColorBlack\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><FilterNoneIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.compare\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/stats\" className=\"forceTextColorBlack\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><TrendingUpIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.Statistics\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/settings\" className=\"forceTextColorBlack\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.Settings\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n          <Divider />\r\n        </Drawer>\r\n        <ShowSnackBar message={\"実行中の処理があるため続行できません\"} variant=\"warning\"\r\n            handleClose={this.toggleErrorSnack} open={this.state.errorSnack} autoHideDuration={3000}/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default GlobalHeader;\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Index extends React.Component<{},{}> {\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"heroLayout\">\r\n        <Container fixed>\r\n          <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            <FormattedMessage id=\"Top.Title\"/>\r\n          </Typography>\r\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n            <FormattedMessage id=\"Index.heroText\"/>\r\n          </Typography>\r\n          <Typography align=\"center\" color=\"textSecondary\" paragraph>\r\n            If you're not familiar with Japanese, please go firstly to settings and you can change language there.\r\n          </Typography>\r\n          <div>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Link to=\"/data\">\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    <FormattedMessage id=\"Index.importButton\"/>\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Typography align=\"center\" color=\"textSecondary\" paragraph variant=\"caption\">\r\n                  <FormattedMessage id=\"Index.notes1\"/>\r\n                </Typography>\r\n                <Typography align=\"center\" color=\"textSecondary\" paragraph variant=\"caption\">\r\n                  <FormattedMessage id=\"Index.notes2\"/>\r\n                </Typography>\r\n                <Typography align=\"center\" color=\"textSecondary\" paragraph variant=\"caption\">\r\n                  BPIManager beta ver0.0.0.1<br/>\r\n                  If you have encountered unintended behaviours or have opinions to make this tool much better, please contact <a href=\"https://twitter.com/notAesthet1c\">@notAesthet1c</a>.\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import moment from \"moment\";\r\n\r\nconst timeFormatter = (type = 0,date = new Date()):string =>{\r\n  const m = moment(date);\r\n  switch (type){\r\n    case 0:\r\n    return m.format(\"YYYY-MM-DD HH:mm\");\r\n    case 1:\r\n    return m.format(\"YYYYMMDD\");\r\n    case 2:\r\n    return m.format(\"HHmmss\");\r\n    case 3:\r\n    return m.format(\"YYYY-MM-DD HH:mm:ss\");\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport default timeFormatter;\r\n","export const _isSingle = ()=>{\r\n    return  localStorage.getItem(\"isSingle\") ? 1 : 0;\r\n}\r\n\r\nexport const _currentStore = ()=>{\r\n  return localStorage.getItem(\"currentStore\") || \"27\";\r\n}\r\n\r\nexport const _lang = ()=>{\r\n  return localStorage.getItem(\"lang\") || \"ja\";\r\n}\r\n\r\nexport const _currentVersion = ()=>{\r\n  return localStorage.getItem(\"lastDefFileVer\") || \"undefined\";\r\n}\r\n","export const lampArray:string[] = [\r\n  \"FAILED\",\"ASSIST\",\"EASY\",\"CLEAR\",\"HARD\",\"EX-HARD\",\"FULLCOMBO\",\"UNKNOWN\"\r\n];\r\nexport const lampCSVArray:string[] = [\r\n  \"FAILED\",\"ASSIST CLEAR\",\"EASY CLEAR\",\"CLEAR\",\"HARD CLEAR\",\"EX HARD CLEAR\",\"FULLCOMBO CLEAR\"\r\n];\r\n\r\nexport const convertClearState = (original:string|number,direction:number):string|number=>{\r\n  if(direction === 0){\r\n    // csv to num\r\n    if(typeof original !== \"string\"){return 0;}\r\n    return lampCSVArray.indexOf(original);\r\n  }else{\r\n    if(typeof original !== \"number\"){return 1;}\r\n    return lampCSVArray[original];\r\n  }\r\n}\r\n\r\nexport const _prefix = (diff:string):string=> diff === \"hyper\" ? \"(H)\" : diff === \"leggendaria\" ? \"(†)\" : \"\";\r\n\r\nexport const _prefixFromNum = (difficulty:string):string=>{\r\n  let prefix:string = \"\";\r\n  if(difficulty === \"3\" || difficulty === \"8\"){\r\n    prefix = \"(H)\";\r\n  }\r\n  if(difficulty === \"10\" || difficulty === \"11\"){\r\n    prefix = \"(†)\";\r\n  }\r\n  return prefix;\r\n}\r\n\r\nexport const difficultyDiscriminator = (difficulty:string):string=>{\r\n  let diff:string = \"another\";\r\n  if(difficulty === \"3\" || difficulty === \"8\"){\r\n    diff = \"hyper\";\r\n  }\r\n  if(difficulty === \"10\" || difficulty === \"11\"){\r\n    diff = \"leggendaria\";\r\n  }\r\n  return diff;\r\n}\r\n\r\nexport const getSongSuffixForIIDXInfo = (name:string,difficulty:string):string=>{\r\n  if(difficulty === \"3\" || difficulty === \"8\"){\r\n    return \"[H]\";\r\n  }\r\n  if(difficulty === \"4\" || difficulty === \"9\"){\r\n    return \"[A]\";\r\n  }\r\n  if(difficulty === \"10\" || difficulty === \"11\"){\r\n    switch(name){\r\n      default:\r\n        return \"†[A]\";\r\n      case \"Ancient Scapes\":\r\n      case \"Close the World feat.a☆ru\":\r\n      case \"Feel The Beat\":\r\n      case \"invoker\":\r\n      case \"Sigmund\":\r\n      case \"Verflucht\":\r\n      case \"疾風迅雷\":\r\n        return \"†LEGGENDARIA[A]\";\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n\r\nexport const convertLeggendariaStates = (name:string,difficulty:string):{name:string,difficulty:string}=>{\r\n  const leggendariaSongs:string[] = [\r\n    \"ABSOLUTE†\",\r\n    \"Clione†\",\r\n    \"RED ZONE†\",\r\n    \"spiral galaxy†\",\r\n    \"Little Little Princess†\",\r\n    \"CONTRACT†\",\r\n    \"waxing and wanding†\",\r\n    \"KAMAITACHI†\",\r\n    \"VANESSA†\",\r\n    \"Blue Rain†\",\r\n    \"ICARUS†\",\r\n    \"THE DEEP STRIKER†\",\r\n    \"Übertreffen†\",\r\n    \"Kung-fu Empire†\",\r\n    \"naughty girl@Queen's Palace†\",\r\n    \"THANK YOU FOR PLAYING†\",\r\n    \"凛として咲く花の如く†\",\r\n    \"SOLID STATE SQUAD†\",\r\n    \"Golden Palms†\",\r\n    \"QUANTUM TELEPORTATION†\",\r\n    \"Howling†\",\r\n    \"LUV CAN SAVE U†\",\r\n    \"朧†\",\r\n    \"仮想空間の旅人たち†\",\r\n    \"龍と少女とデコヒーレンス†\",\r\n    \"Ancient Scapes†LEGGENDARIA\",\r\n    \"Close the World feat.a☆ru†LEGGENDARIA\",\r\n    \"Feel The Beat†LEGGENDARIA\",\r\n    \"invoker†LEGGENDARIA\",\r\n    \"Sigmund†LEGGENDARIA\",\r\n    \"Verflucht†LEGGENDARIA\",\r\n    \"疾風迅雷†LEGGENDARIA\",\r\n    \"廿†\",\r\n    \"Beat Radiance†\",\r\n    \"CHRONO DIVER -NORNIR-†\",\r\n    \"Cosmic Cat†\",\r\n    \"EBORY & IVORY†\",\r\n    \"恋は白帯、サンシロー†\",\r\n    \"超青少年ノ為ノ超多幸ナ超古典的超舞曲†\",\r\n    \"Damage Per Second†\",\r\n    \"STARLIGHT DANCEHALL†\",\r\n    \"Amazing Mirage†\",\r\n    \"冬椿 ft. Kanae Asaba†\",\r\n  ]\r\n  let newName = name,newDifficulty = difficulty;\r\n  if(difficulty !== \"another\"){\r\n    return {\r\n      name:newName,\r\n      difficulty:newDifficulty\r\n    }\r\n  }\r\n  if(leggendariaSongs.indexOf(name) > -1){\r\n    newName = name.replace(\"†LEGGENDARIA\",\"\").replace(\"†\",\"\");\r\n    newDifficulty = \"leggendaria\";\r\n  }\r\n  return {\r\n    name:newName,\r\n    difficulty:newDifficulty\r\n  }\r\n}\r\n","import {songsDB} from \"../indexedDB\";\r\nimport { songData } from \"../../types/data\";\r\n\r\nexport interface B{\r\n  error:boolean,bpi:number,reason?:any,difficultyLevel?:string\r\n}\r\n\r\nexport default class bpiCalcuator{\r\n  songsDB:any;\r\n  isSingle: number;\r\n  propData:songData[]|null = null;\r\n\r\n  constructor(alreadyHaveData:boolean = false){\r\n    this.isSingle = 1;\r\n    this.songsDB = !alreadyHaveData ? new songsDB() : null;\r\n  }\r\n\r\n  setPropData(data:songData,exScore:number):number{\r\n    this.s = exScore;\r\n    this.k = data[\"avg\"];\r\n    this.z = data[\"wr\"];\r\n    this.m = data[\"notes\"] * 2;\r\n    return this.exec();\r\n  }\r\n\r\n  private m:number = 1;\r\n  private s:number = 0;\r\n  private k:number = 0;\r\n  private z:number = 0;\r\n  private pgf = (j:number):number=> 1 + ( j / this.m - 0.5 ) / ( 1 - j / this.m );\r\n\r\n  async calc(songTitle:string,difficulty:string,exScore:number):Promise<B>{\r\n    try{\r\n      this.propData = this.isSingle === 1 ?\r\n      await this.songsDB.getOneItemIsSingle(songTitle,difficulty) :\r\n      await this.songsDB.getOneItemIsDouble(songTitle,difficulty);\r\n      if(!this.propData || !this.propData[0]){\r\n        throw new Error(\"楽曲情報が見つかりませんでした\");\r\n      }\r\n      this.s = exScore;\r\n      this.k = this.propData[0][\"avg\"];\r\n      this.z = this.propData[0][\"wr\"];\r\n      this.m = this.propData[0][\"notes\"] * 2;\r\n      return {error:false,bpi:this.exec(),difficultyLevel:this.propData[0][\"difficultyLevel\"]};\r\n\r\n    }catch(e){\r\n      return {error:true,bpi:NaN,reason:e.message || e};\r\n    }\r\n  }\r\n\r\n  exec(){\r\n    let res:number = NaN;\r\n    const {k,z,s} = this;\r\n    if( s > this.m ){\r\n      throw new Error(\"理論値を超えています\");\r\n    }\r\n    if( s < 0){\r\n      throw new Error(\"スコアは自然数で入力してください\");\r\n    }\r\n    const _s = this.pgf(s);\r\n    const _k = this.pgf(k);\r\n    const _z = this.pgf(z);\r\n\r\n    const _s_ = _s / _k;\r\n    const _z_ = _z / _k;\r\n\r\n    if(s >= k){\r\n      res = 100 * ( Math.pow(Math.log(_s_),1.5) / Math.pow(Math.log(_z_),1.5) );\r\n    }else{\r\n      res = -100 * ( Math.pow(-Math.log(_s_),1.5) / Math.pow(Math.log(_z_),1.5) );\r\n    }\r\n    return res < -15 ? -15 : Math.round(res * 100) / 100;\r\n  }\r\n\r\n  //使いまわし可能データ\r\n  private avg:number = 0;\r\n  private wr:number = 0;\r\n\r\n  setData(max:number,avg:number,wr:number):void{\r\n    this.m = max;\r\n    this.avg = avg;\r\n    this.wr = wr;\r\n  }\r\n\r\n  calcFromBPI(bpi:number):number{\r\n    const z = this.pgf(this.wr);\r\n    const k = this.pgf(this.avg);\r\n\r\n    const i = Math.pow(Math.pow(Math.log(z / k),1.5)  * bpi / 100, 1 / 1.5);\r\n\r\n    const N = Math.pow(Math.E,i) * k;\r\n\r\n    return this.m * ( ( N - 0.5 ) / N );\r\n  }\r\n\r\n  rank(bpi:number):number{\r\n    return Math.ceil(Math.pow(2616, (100 - bpi ) / 100 ));\r\n  }\r\n\r\n  _allTwelvesLength:number = 0;\r\n  _allTwelvesBPI:number[] = [];\r\n\r\n  set allTwelvesLength(val: number){ this._allTwelvesLength = val }\r\n  set allTwelvesBPI(val: number[]){ this._allTwelvesBPI = val }\r\n\r\n  totalBPI():number{\r\n    let sum = 0,playedSongs = this._allTwelvesBPI.length;\r\n    if(playedSongs === 0){return -15;}\r\n    const k = Math.log2(this._allTwelvesLength);\r\n    for (let i=0; i < this._allTwelvesLength; ++i){\r\n      if(i < playedSongs){\r\n        const bpi = this._allTwelvesBPI[i]\r\n        if(bpi > 0){\r\n          sum += Math.pow( bpi, k ) / this._allTwelvesLength\r\n        }else{\r\n          sum += -Math.pow( Math.abs(bpi), k ) / this._allTwelvesLength\r\n        }\r\n      }\r\n    }\r\n    return Math.round(Math.pow(sum, 1 / k) * 100) / 100;\r\n  }\r\n}\r\n","import Dexie from \"dexie\";\r\nimport {scoreData,songData} from \"../../types/data\";\r\nimport timeFormatter from \"../common/timeFormatter\";\r\nimport {_currentStore,_isSingle} from \"../settings\";\r\nimport moment from \"moment\";\r\nimport {difficultyDiscriminator} from \"../songs/filter\";\r\nimport bpiCalcuator, { B } from \"../bpi\";\r\n\r\nconst storageWrapper = class extends Dexie{\r\n  target: string = \"scores\";\r\n  //あとで書いとく\r\n  scores:Dexie.Table<any, any>;\r\n  songs:Dexie.Table<any, any>;\r\n  stores: Dexie.Table<any, any>;\r\n  calculator:bpiCalcuator = new bpiCalcuator(true);\r\n\r\n  constructor(){\r\n    super(\"ScoreCoach\");\r\n    this.version(1).stores({\r\n      scores : \"[title+difficulty+storedAt+isSingle],title,*difficulty,*difficultyLevel,*version,currentBPI,exScore,Pgreat,great,missCount,clearState,lastPlayed,storedAt,isSingle,isImported,updatedAt,lastScore\",\r\n      songs : \"&++num,title,*difficulty,*difficultyLevel,wr,avg,notes,bpm,textage,dpLevel,isCreated,isFavorited,[title+difficulty]\",\r\n      stores : \"&name,updatedAt\",\r\n      scoreHistory : \"&++num,[title+storedAt+difficulty+isSingle],[title+storedAt+difficulty+isSingle+updatedAt],title,difficulty,difficultyLevel,storedAt,exScore,BPI,isSingle,updatedAt\"\r\n    });\r\n    this.scores = this.table(\"scores\");\r\n    this.songs = this.table(\"songs\");\r\n    this.stores = this.table(\"stores\");\r\n  }\r\n\r\n  protected newSongs:{[key:string]:songData} = {};\r\n\r\n  setNewSongsDBRawData(reduced:{[key:string]:songData}):this{\r\n    this.newSongs = reduced;\r\n    return this;\r\n  }\r\n\r\n  protected apply(t:string,s:number):number{\r\n    return this.calculator.setPropData(this.newSongs[t],s);\r\n  }\r\n\r\n}\r\n\r\nexport const scoresDB = class extends storageWrapper{\r\n  scores: Dexie.Table<any, any>;\r\n  storedAt:string = \"\";\r\n  isSingle:number = 1;\r\n\r\n  constructor(isSingle?:number,storedAt?:string){\r\n    super();\r\n    this.scores = this.table(\"scores\");\r\n    if(isSingle) this.isSingle = isSingle;\r\n    if(storedAt) this.storedAt = storedAt;\r\n  }\r\n\r\n  setIsSingle(isSingle:number):this{\r\n    this.isSingle = isSingle;\r\n    return this;\r\n  }\r\n\r\n  setStoredAt(storedAt:string):this{\r\n    this.storedAt = storedAt;\r\n    return this;\r\n  }\r\n\r\n  async getAll():Promise<scoreData[]>{\r\n    const currentData = await this.scores.where({\r\n      storedAt:_currentStore(),\r\n      isSingle:_isSingle(),\r\n    }).toArray();\r\n    return currentData;\r\n  }\r\n\r\n  async getSpecificVersionAll():Promise<scoreData[]>{\r\n    const currentData = await this.scores.where({\r\n      storedAt:this.storedAt,\r\n      isSingle:this.isSingle,\r\n    }).toArray();\r\n    return currentData;\r\n  }\r\n\r\n  async deleteAll():Promise<void>{\r\n    return await this.scores.clear();\r\n  }\r\n\r\n  getItem(title:string,difficulty:string,storedAt:string,isSingle:number):Promise<scoreData[]>{\r\n    return this.scores.where(\"[title+difficulty+storedAt+isSingle]\").equals([title,difficulty,storedAt,isSingle]).toArray();\r\n  }\r\n\r\n  //for statistics\r\n  async getAllTwelvesBPI(isSingle:number,storedAt:string,diff:string = \"12\"):Promise<number[]>{\r\n    let data:scoreData[] = await this.scores.where({\r\n      storedAt:storedAt,isSingle:isSingle,\r\n    }).toArray();\r\n    data = data.filter(item=>item.difficultyLevel === diff) ;\r\n    return data.map((item:scoreData)=>item.currentBPI);\r\n  }\r\n\r\n  async resetItems(storedAt:string):Promise<number>{\r\n    return await this.scores.where({storedAt:storedAt}).delete();\r\n  }\r\n\r\n  async resetImportedItems():Promise<number>{\r\n    return await this.scores.where({isImported:\"true\"}).delete();\r\n  }\r\n\r\n  setItem(item:any):any{\r\n    try{\r\n      return this.scores.where(\"[title+difficulty+storedAt+isSingle]\").equals(\r\n        [item[\"title\"],item[\"difficulty\"],this.storedAt,this.isSingle]\r\n      ).modify({\r\n        title:item[\"title\"],\r\n        version:item[\"version\"],\r\n        difficulty:item[\"difficulty\"],\r\n        difficultyLevel:item[\"difficultyLevel\"],\r\n        currentBPI:item[\"currentBPI\"],\r\n        exScore:Number(item[\"exScore\"]),\r\n        Pgreat:Number(item[\"Pgreat\"]),\r\n        great:Number(item[\"great\"]),\r\n        missCount:Number(item[\"missCount\"]),\r\n        clearState:item[\"clearState\"],\r\n        lastPlayed:item[\"lastPlayed\"],\r\n        lastScore:item[\"lastScore\"],\r\n        storedAt:item[\"storedAt\"],\r\n        isSingle:item[\"isSingle\"],\r\n        isImported:true,\r\n        updatedAt : item[\"updatedAt\"]\r\n      })\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  putItem(item:any):any{\r\n    try{\r\n      return this.scores.put({\r\n        title:item[\"title\"],\r\n        version:item[\"version\"],\r\n        difficulty:item[\"difficulty\"],\r\n        difficultyLevel:item[\"difficultyLevel\"],\r\n        currentBPI:item[\"currentBPI\"],\r\n        exScore:Number(item[\"exScore\"]),\r\n        Pgreat:Number(item[\"Pgreat\"]),\r\n        great:Number(item[\"great\"]),\r\n        missCount:Number(item[\"missCount\"]),\r\n        clearState:item[\"clearState\"],\r\n        lastPlayed:item[\"lastPlayed\"],\r\n        lastScore:item[\"lastScore\"],\r\n        storedAt:item[\"storedAt\"],\r\n        isSingle:item[\"isSingle\"],\r\n        isImported:true,\r\n        updatedAt : item[\"updatedAt\"]\r\n      })\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async updateScore(score:scoreData|null,data:{currentBPI:number,exScore:number}):Promise<boolean>{\r\n    try{\r\n      if(!score){return false;}\r\n      if(score.updatedAt === \"-\"){\r\n        //put\r\n        let newScoreData:scoreData = score;\r\n        newScoreData.currentBPI = data.currentBPI;\r\n        newScoreData.exScore = data.exScore;\r\n        newScoreData.updatedAt = timeFormatter(0);\r\n        await this.scores.add(newScoreData);\r\n      }else{\r\n        //update\r\n        await this.scores.where(\"[title+difficulty+storedAt+isSingle]\").equals([score.title,score.difficulty,score.storedAt,score.isSingle]).modify(\r\n        Object.assign(data,{\r\n          updatedAt : timeFormatter(0),\r\n          lastScore: score.exScore,\r\n        })\r\n        );\r\n      }\r\n      return true;\r\n    }catch(e){\r\n      console.log(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async removeItem(title:string,storedAt:string):Promise<number>{\r\n    return await this.scores.where({title:title,storedAt:storedAt}).delete();\r\n  }\r\n\r\n  async recalculateBPI(){\r\n    try{\r\n      const self = this;\r\n      return await this.scores.toCollection().modify(function(val: { currentBPI: number; title: string; exScore: number;}){\r\n        val.currentBPI = self.apply(val.title,val.exScore);\r\n      })\r\n    }catch(e){\r\n      console.log(\"failed recalculate - \" + e);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const scoreHistoryDB = class extends storageWrapper{\r\n  scoreHistory: Dexie.Table<any, any>;\r\n  isSingle:number = 1;\r\n  currentStore:string = \"27\";\r\n\r\n  constructor(){\r\n    super();\r\n    this.scoreHistory = this.table(\"scoreHistory\");\r\n    this.isSingle = _isSingle();\r\n    this.currentStore = _currentStore();\r\n  }\r\n\r\n  add(score:scoreData|null,data:{currentBPI:number,exScore:number},forceUpdateTime:boolean = false):boolean{\r\n    try{\r\n      if(!score){return false;}\r\n      this.scoreHistory.add({\r\n        title:score.title,\r\n        exScore:data.exScore,\r\n        difficulty:score.difficulty,\r\n        difficultyLevel:score.difficultyLevel,\r\n        storedAt:score.storedAt,\r\n        BPI:data.currentBPI,\r\n        updatedAt:forceUpdateTime ? score.updatedAt : timeFormatter(3),\r\n        isSingle:score.isSingle,\r\n      });\r\n      return true;\r\n    }catch(e){\r\n      console.log(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async check(item:scoreData):Promise<{willUpdate:boolean,lastScore:number}>{\r\n    try{\r\n      const t = await this.scoreHistory.where(\"[title+storedAt+difficulty+isSingle]\").equals(\r\n        [item[\"title\"],item[\"storedAt\"],item[\"difficulty\"],item[\"isSingle\"]]\r\n      ).toArray().then((t)=>t.sort((a,b)=>moment(b.updatedAt).diff(moment(a.updatedAt))));\r\n      return {\r\n        willUpdate:t.length === 0 ? true : Number(item.exScore) > Number(t[t.length - 1].exScore),\r\n        lastScore:t.length === 0 ? -1 : t[t.length-1].exScore\r\n      };\r\n    }catch(e){\r\n      return {\r\n        willUpdate:false,\r\n        lastScore:0,\r\n      };\r\n    }\r\n  }\r\n  //リファクタ済み\r\n  async getAll(_isSingle:number,_storedAt:string,diff:string = \"12\"):Promise<any[]>{\r\n    try{\r\n      return await this.scoreHistory.where(\r\n        {storedAt:this.currentStore,isSingle:this.isSingle,difficultyLevel:diff}\r\n      ).toArray();\r\n    }catch(e){\r\n      console.log(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async reset(_isSingle:number,_storedAt:string):Promise<any>{\r\n    try{\r\n      return await this.scoreHistory.where(\r\n        {storedAt:this.currentStore,isSingle:this.isSingle}\r\n      ).delete();\r\n    }catch(e){\r\n      console.log(e);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  async getWithinVersion(song:songData):Promise<any[]>{\r\n    try{\r\n      if(!song){return [];}\r\n      return await this.scoreHistory.where(\r\n        {storedAt:this.currentStore,isSingle:this.isSingle,title:song.title,difficulty:difficultyDiscriminator(song.difficulty)}\r\n      ).toArray().then(t=>t.sort((a,b)=>{\r\n        return moment(b.updatedAt).diff(moment(a.updatedAt))\r\n      }));\r\n    }catch(e){\r\n      console.log(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getAcrossVersion(song:songData):Promise<any[]>{\r\n    try{\r\n      if(!song){return [];}\r\n      const all = await this.scoreHistory.where(\r\n        {isSingle:this.isSingle,title:song.title,difficulty:difficultyDiscriminator(song.difficulty)}\r\n      ).toArray().then(t=>t.reduce((result, current) => {\r\n        if(!result[current.storedAt]){\r\n          result[current.storedAt] = [];\r\n        }\r\n        result[current.storedAt].push(current);\r\n        return result;\r\n      }, {}));\r\n      let res:any[] = [];\r\n      Object.keys(all).map((item:string)=>{\r\n        const t = all[item].sort((a:any,b:any)=>{\r\n          return b.exScore - a.exScore\r\n        });\r\n        res.push(t[0]);\r\n      });\r\n      return res.reverse();\r\n    }catch(e){\r\n      console.log(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const songsDB = class extends storageWrapper{\r\n  songs: Dexie.Table<any, any>;\r\n\r\n  constructor(){\r\n    super();\r\n    this.songs = this.table(\"songs\");\r\n  }\r\n\r\n  async getAll(isSingle:number = 1,willCollection:boolean = false):Promise<any>{\r\n    const data = isSingle === 1 ?\r\n      this.songs.where(\"dpLevel\").equals(\"0\") :\r\n      this.songs.where(\"dpLevel\").notEqual(\"0\");\r\n    return willCollection ? data : await data.toArray();\r\n  }\r\n\r\n  async getAllTwelvesLength(isSingle:number = 1):Promise<number>{\r\n    const data = isSingle === 1 ?\r\n      await this.songs.where(\"dpLevel\").equals(\"0\").toArray() :\r\n      await this.songs.where(\"dpLevel\").notEqual(\"0\").toArray();\r\n    let matched = 0;\r\n    for(let i = 0; i < data.length; ++i){\r\n      if(data[i][\"difficultyLevel\"] === \"12\"){\r\n        matched++;\r\n      }\r\n    }\r\n    return matched;\r\n  }\r\n\r\n  async getAllFavoritedItems(isSingle:number = 1):Promise<any[]>{\r\n    const data = await this.getAll(isSingle,true);\r\n    return data.and((item:songData)=>item.isFavorited === true).toArray();\r\n  }\r\n\r\n  async deleteAll():Promise<void>{\r\n    return await this.songs.clear();\r\n  }\r\n\r\n  getItem(title:string):Promise<string[]>{\r\n    return this.songs.where({title:title}).toArray();\r\n  }\r\n\r\n  async getOneItemIsSingle(title:string,difficulty:string):Promise<songData[]>{\r\n    const diffs = ():string=>{\r\n      switch(difficulty){\r\n        case \"hyper\":return \"3\";\r\n        case \"another\":return \"4\";\r\n        case \"leggendaria\":return \"10\";\r\n        default:\r\n        return difficulty;\r\n      }\r\n    };\r\n    return await this.songs.where(\"[title+difficulty]\").equals([title,diffs()]).toArray();\r\n  }\r\n\r\n  async resetItems(storedAt:string):Promise<number>{\r\n    return await this.songs.where({storedAt:storedAt}).delete();\r\n  }\r\n\r\n  async setItem(item:any):Promise<any>{\r\n    return await this.songs.put({\r\n      title:item[\"title\"],\r\n      difficulty:item[\"difficulty\"],\r\n      wr:Number(item[\"wr\"]),\r\n      avg:Number(item[\"avg\"]),\r\n      notes:Number(item[\"notes\"]),\r\n      bpm:item[\"bpm\"],\r\n      textage:item[\"textage\"],\r\n      difficultyLevel:item[\"difficultyLevel\"],\r\n      dpLevel:item[\"dpLevel\"],\r\n      isFavorited:item[\"isFavorited\"] || false,\r\n      isCreated: item[\"isCreated\"] || false,\r\n      updatedAt: item[\"updatedAt\"] || timeFormatter(0),\r\n    })\r\n  }\r\n\r\n  async updateItem(item:any):Promise<any>{\r\n    return await this.songs.where({\r\n      \"title\":item[\"title\"],\"difficulty\":item[\"difficulty\"]\r\n    }).modify({\r\n      wr:Number(item[\"wr\"]),\r\n      avg:Number(item[\"avg\"]),\r\n      updatedAt: timeFormatter(0),\r\n    })\r\n  }\r\n\r\n  async toggleFavorite(title:string,difficulty:string,newState:boolean):Promise<any>{\r\n    return await this.songs.where({title:title,difficulty:difficulty}).modify({\r\n      isFavorited:newState\r\n    });\r\n  }\r\n\r\n  async removeItem(title:string):Promise<number>{\r\n    return await this.songs.where({title:title}).delete();\r\n  }\r\n\r\n}\r\n\r\nexport default storageWrapper;\r\n","import {scoreData} from \"../../types/data\";\r\nimport { convertClearState,convertLeggendariaStates } from \"../songs/filter\";\r\n\r\nexport default class importCSV {\r\n\r\n  rawData:string = \"\";\r\n  result:scoreData[] = [];\r\n  resultHistory:any[] = [];\r\n\r\n  isSingle:number = 1;\r\n  currentStore:string = \"\";\r\n\r\n  constructor(raw:string,isSingle?:number,currentStore?:string){\r\n    this.rawData = raw;\r\n    if(isSingle)this.isSingle = isSingle;\r\n    if(currentStore)this.currentStore = currentStore;\r\n  }\r\n\r\n  getResult():scoreData[]{\r\n    return this.result;\r\n  }\r\n\r\n  getResultHistory():any[]{\r\n    return this.resultHistory;\r\n  }\r\n\r\n  execute():Promise<number>{\r\n    const self = this;\r\n    let mode = 0;\r\n    return new Promise(function(resolve, reject) {\r\n      try{\r\n        const splittedByBreak:string[] = self.rawData.split(/\\r\\n|\\n/);\r\n        const lengthSum:number = splittedByBreak.length;\r\n        let result = [],resultHistory = [];\r\n        for(let i = 0; i < lengthSum; ++i){\r\n          let eachObjNum:number[] = [];\r\n          let t:string = \"\";\r\n          const p = splittedByBreak[i].split(/,/);\r\n          if(i===0 && p[5] === \"NORMAL 難易度\"){\r\n            //Rootage以前のCSV判別\r\n            mode = 1;\r\n          }\r\n          if(mode === 0){\r\n            //HYPER\r\n            if(Number(p[19]) > 10 && Number(p[20]) > 0){\r\n              t = \"hyper\";\r\n              eachObjNum = [0,1,20,21,22,23,24,25,40];\r\n            }\r\n            //ANOTHER\r\n            if(Number(p[26]) > 10 && Number(p[27]) > 0){\r\n              t = \"another\";\r\n              eachObjNum = [0,1,27,28,29,30,31,32,40];\r\n            }\r\n            //LEGGENDARIA\r\n            if(Number(p[33]) > 10 && Number(p[34]) > 0){\r\n              t = \"leggendaria\";\r\n              eachObjNum = [0,1,34,35,36,37,38,39,40];\r\n            }\r\n          }else{\r\n            //HYPER\r\n            if(Number(p[12]) > 10 && Number(p[13]) > 0){\r\n              t = \"hyper\";\r\n              eachObjNum = [0,1,13,14,15,16,17,18,26];\r\n            }\r\n            //ANOTHER\r\n            if(Number(p[19]) > 10 && Number(p[20]) > 0){\r\n              t = \"another\";\r\n              eachObjNum = [0,1,20,21,22,23,24,25,26];\r\n            }\r\n          }\r\n          if(!p[eachObjNum[1]]){\r\n            continue;\r\n          }\r\n          const {name,difficulty} = mode === 1 ? convertLeggendariaStates(p[eachObjNum[1]],t) : {name:p[eachObjNum[1]],difficulty:t};\r\n          const clearState:string|number = convertClearState(p[eachObjNum[6]],0);\r\n          if(typeof clearState !== \"number\"){throw new Error();}\r\n\r\n          result.push({\r\n            title:name,\r\n            version:p[eachObjNum[0]],\r\n            difficulty:difficulty,\r\n            currentBPI:0,\r\n            difficultyLevel:\"-\",\r\n            exScore:Number(p[eachObjNum[2]]),\r\n            Pgreat:Number(p[eachObjNum[3]]),\r\n            great:Number(p[eachObjNum[4]]),\r\n            missCount:Number(p[eachObjNum[5]]),\r\n            clearState:clearState,\r\n            lastPlayed:p[eachObjNum[8]],\r\n            lastScore:-1,\r\n            storedAt:self.currentStore,\r\n            isSingle:self.isSingle,\r\n            isImported:true,\r\n            updatedAt:p[eachObjNum[8]]\r\n          });\r\n          resultHistory.push({\r\n            title:name,\r\n            exScore:Number(p[eachObjNum[2]]),\r\n            difficulty:difficulty,\r\n            difficultyLevel:\"-\",\r\n            storedAt:self.currentStore,\r\n            isSingle:self.isSingle,\r\n            BPI:0,\r\n            updatedAt:p[eachObjNum[8]],\r\n          });\r\n        }\r\n        self.result = result;\r\n        self.resultHistory = resultHistory;\r\n        return resolve(result.length);\r\n      }catch(e){\r\n        console.log(e);\r\n        return reject(e);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {scoresDB, scoreHistoryDB} from \"../../components/indexedDB\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport importCSV from \"../../components/csv/import\";\r\nimport bpiCalculator from \"../../components/bpi\";\r\nimport { _currentStore, _isSingle } from '../../components/settings';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default class Index extends React.Component<{global:any},{raw:string,isSnackbarOpen:boolean,stateText:string,errors:string[],isSaving:boolean,currentState:string,progress:number}> {\r\n\r\n  constructor(props:{global:any}){\r\n    super(props);\r\n    this.state = {\r\n      raw: \"\",\r\n      isSnackbarOpen:false,\r\n      stateText:\"Data.Success\",\r\n      errors:[],\r\n      isSaving:false,\r\n      currentState:\"\",\r\n      progress:0,\r\n    }\r\n    this.execute = this.execute.bind(this);\r\n  }\r\n\r\n  async execute(){\r\n    try{\r\n      this.props.global.setMove(true);\r\n      this.setState({isSaving:true});\r\n      let errors = [];\r\n      const executor = new importCSV(this.state.raw,_isSingle(),_currentStore());\r\n      const calc = new bpiCalculator();\r\n      const exec = await executor.execute();\r\n      if(!exec){\r\n        throw new Error(\"CSVデータの形式が正しくありません\");\r\n      }\r\n\r\n      const result = executor.getResult(),resultHistory = executor.getResultHistory();\r\n      const s = new scoresDB(_isSingle(),_currentStore()), h = new scoreHistoryDB();\r\n      const all = await s.getAll().then(t=>t.reduce((result:any, current:any) => {\r\n        result[current.title] = current;\r\n        return result;\r\n      }, {}));\r\n\r\n      const len = result.length;\r\n      for(let i = 0;i < len;++i){\r\n        const calcData = await calc.calc(result[i][\"title\"],result[i][\"difficulty\"],result[i][\"exScore\"])\r\n        if(calcData.error && calcData.reason){\r\n          errors.push(result[i][\"title\"] + \" - \" + calcData.reason);\r\n          continue;\r\n        }\r\n        if(all[result[i][\"title\"]] && all[result[i][\"title\"]][\"exScore\"] >= result[i][\"exScore\"]){\r\n          //this.setState({progress:i / len * 100,currentState:result[i][\"title\"] + \"をスキップしました\"});\r\n          continue;\r\n        }\r\n        //this.setState({progress:i / len * 100,currentState:result[i][\"title\"] + \"を保存しています\"});\r\n        const body = Object.assign(\r\n          result[i],\r\n          {\r\n            difficultyLevel:calcData.difficultyLevel,\r\n            currentBPI : calcData.bpi,\r\n            isImported: true,\r\n            lastScore: all[result[i][\"exScore\"]]\r\n          }\r\n        );\r\n        all[result[i][\"title\"]] ? s.setItem(body) : s.putItem(body);\r\n        h.add(Object.assign(resultHistory[i],{difficultyLevel:calcData.difficultyLevel}),{currentBPI:calcData.bpi,exScore:resultHistory[i].exScore},true);\r\n      }\r\n      this.props.global.setMove(false);\r\n      return this.setState({isSaving:false,raw:\"\",isSnackbarOpen:true,stateText:\"Data.Success\",errors:errors});\r\n    }catch(e){\r\n      this.props.global.setMove(false);\r\n      return this.setState({isSaving:false,isSnackbarOpen:true,stateText:\"Data.Failed\",errors:[e.message]});\r\n    }\r\n  }\r\n\r\n  onChangeText = (e: React.ChangeEvent<HTMLInputElement>)=> this.setState({raw:e.target.value});\r\n  handleClose = ()=> this.setState({isSnackbarOpen:false});\r\n\r\n  render(){\r\n    const {raw,isSnackbarOpen,stateText,errors,isSaving} = this.state;\r\n    return (\r\n      <Container className=\"commonLayout\" fixed>\r\n        <Snackbar\r\n          open={isSnackbarOpen}\r\n          onClose={this.handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\"><FormattedMessage id={stateText}/></span>}\r\n        />\r\n        <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\" gutterBottom>\r\n          <FormattedMessage id=\"Data.add\"/>\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          <FormattedMessage id=\"Data.infoBulk\"/><br/>\r\n          <FormattedMessage id=\"Data.howToBulk1\"/>\r\n          <a href=\"https://p.eagate.573.jp/game/2dx/27/djdata/score_download.html\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <FormattedMessage id=\"Data.CSVURL\"/>\r\n          </a>\r\n          <FormattedMessage id=\"Data.howToBulk2\"/>\r\n        </Typography>\r\n        <TextField\r\n          onChange={this.onChangeText}\r\n          value={raw}\r\n          style={{width:\"100%\"}}\r\n          label=\"Paste here\"\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          multiline\r\n          rowsMax=\"4\"/>\r\n        <div style={{position:\"relative\"}}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.execute}\r\n            disabled={isSaving}\r\n            style={{width:\"100%\",margin:\"5px 0\"}}>\r\n            <FormattedMessage id=\"Data.Execute\"/>\r\n          </Button>\r\n          {isSaving && <CircularProgress size={24} style={{color:\"#777\",position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}} />}\r\n        </div>\r\n        <Divider variant=\"middle\" style={{margin:\"10px 0\"}}/>\r\n        {errors && errors.map(item=><span>{item}<br/></span>)}\r\n        <FormattedMessage id=\"Data.notPremium1\"/>\r\n        <Divider variant=\"middle\" style={{margin:\"10px 0\"}}/>\r\n        <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\" gutterBottom>\r\n          <FormattedMessage id=\"Data.edit\"/>\r\n        </Typography>\r\n        <FormattedMessage id=\"Data.howToEdit\"/>\r\n        <ol>\r\n          <li><FormattedMessage id=\"Data.howToEdit1\"/></li>\r\n          <li><FormattedMessage id=\"Data.howToEdit2\"/></li>\r\n          <li><FormattedMessage id=\"Data.howToEdit3\"/></li>\r\n        </ol>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { scoreData, songData } from \"../../../types/data\";\r\nimport {BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine, ResponsiveContainer, Label} from \"recharts\";\r\n\r\ninterface P{\r\n  song:songData|null,\r\n  score:scoreData|null,\r\n  chartData:any[],\r\n  graphLastUpdated:number\r\n}\r\n\r\nclass BPIChart extends React.Component<P,{}> {\r\n\r\n  render(){\r\n    const {chartData,song,score,graphLastUpdated} = this.props;\r\n    if(!song || !score){\r\n      return (null);\r\n    }\r\n    const max = song.notes ? song.notes * 2 : 0;\r\n    return (\r\n      <div style={{width:\"95%\",height:\"100%\",margin:\"5px auto\"}}>\r\n        <ResponsiveContainer width=\"100%\">\r\n          <BarChart data={chartData} key={graphLastUpdated}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"name\" />\r\n            <YAxis domain={[0,max]} ticks={[Math.ceil(max * (6/9)),Math.ceil(max * (7/9)),Math.ceil(max * (8/9)),max]} width={40}>\r\n            </YAxis>\r\n            <Tooltip />\r\n            <Bar dataKey=\"EX SCORE\" isAnimationActive={false}>\r\n              {\r\n                chartData.map((item) => {\r\n                  const color = item.name === \"YOU\" ? \"#e75d00\" : \"#8884d8\";\r\n                  return <Cell key={item.name} fill={color} />;\r\n                })\r\n              }\r\n            </Bar>\r\n            <ReferenceLine y={max * (8/9)} label={<Label position=\"insideTopRight\">AAA</Label>} stroke=\"#004018\" isFront={true} />\r\n            <ReferenceLine y={max * (7/9)} label={<Label position=\"insideTopRight\">AA</Label>} stroke=\"#004018\" isFront />\r\n            <ReferenceLine y={max * (2/3)} label={<Label position=\"insideTopRight\">A</Label>} stroke=\"#004018\" isFront />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BPIChart;\r\n","import React from \"react\";\r\n\r\nimport { scoreData, songData } from \"../../../types/data\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { convertClearState } from \"../../../components/songs/filter\";\r\n\r\ninterface P{\r\n  song:songData|null,\r\n  score:scoreData|null,\r\n}\r\n\r\nclass SongDetails extends React.Component<P,{}> {\r\n\r\n  render(){\r\n    const {song,score} = this.props;\r\n    if(!song || !score){\r\n      return (null);\r\n    }\r\n    const max = song.notes * 2;\r\n    return (\r\n      <div>\r\n        <Paper>\r\n          <Table aria-label=\"Song Details\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{minWidth:\"130px\",maxWidth:\"130px\"}}><FormattedMessage id=\"SongDetail.SongDetailHead\"/></TableCell>\r\n                <TableCell>&nbsp;</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell><FormattedMessage id=\"SongDetail.Notes\"/></TableCell>\r\n                <TableCell>{song.notes}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><FormattedMessage id=\"SongDetail.WorldRecord\"/></TableCell>\r\n                <TableCell>{song.wr}({Math.floor(song.wr / max * 10000) / 100}%)</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><FormattedMessage id=\"SongDetail.Average\"/></TableCell>\r\n                <TableCell>{song.avg}({Math.floor(song.avg / max * 10000)  / 100}%)</TableCell>\r\n              </TableRow>\r\n              { !Number.isNaN(score.exScore) &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.You\"/></TableCell>\r\n                  <TableCell>{score.exScore}({Math.floor(score.exScore / max * 10000) / 100}%)</TableCell>\r\n                </TableRow>\r\n              }\r\n              <TableRow>\r\n                <TableCell>BPM</TableCell>\r\n                <TableCell>{song.bpm}</TableCell>\r\n              </TableRow>\r\n              { score.version &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.Version\"/></TableCell>\r\n                  <TableCell>{score.version}</TableCell>\r\n                </TableRow>\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        { (score.missCount || score.lastPlayed) &&\r\n        <Paper>\r\n          <Table aria-label=\"Score Details\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{minWidth:\"130px\",maxWidth:\"130px\"}}><FormattedMessage id=\"SongDetail.ScoreDetailHead\"/></TableCell>\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              { score.lastPlayed &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.ClearState\"/></TableCell>\r\n                  <TableCell>{convertClearState(score.clearState,1)}</TableCell>\r\n                </TableRow>\r\n              }\r\n              { score.missCount &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.MissCount\"/></TableCell>\r\n                  <TableCell>{score.missCount}</TableCell>\r\n                </TableRow>\r\n              }\r\n              { score.lastPlayed &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.LastPlayed\"/></TableCell>\r\n                  <TableCell>{score.lastPlayed}</TableCell>\r\n                </TableRow>\r\n              }\r\n              { (score.Pgreat && score.great) &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.ScoreDetails\"/></TableCell>\r\n                  <TableCell>PG:{score.Pgreat} G:{score.great}</TableCell>\r\n                </TableRow>\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SongDetails;\r\n","import React from \"react\";\r\n\r\nimport { scoreData, songData } from \"../../../types/data\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {scoreHistoryDB} from \"../../../components/indexedDB\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport moment from \"moment\";\r\n\r\ninterface P{\r\n  song:songData|null,\r\n  score:scoreData|null,\r\n}\r\n\r\ninterface S{\r\n  isLoading:boolean,\r\n  current:number,\r\n  dataset:any[],\r\n}\r\n\r\nclass SongDiffs extends React.Component<P,S> {\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state = {\r\n      isLoading:true,\r\n      current:0,\r\n      dataset:[],\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateScoreData();\r\n  }\r\n\r\n  handleChange = (event: React.ChangeEvent<{ value: unknown }>)=> {\r\n    if(typeof event.target.value !== \"number\"){return;}\r\n    this.setState({current:event.target.value,isLoading:true});\r\n    this.updateScoreData(event.target.value);\r\n  }\r\n\r\n  async updateScoreData(newState:number = 0){\r\n    const {song} = this.props;\r\n    if(!song){return};\r\n    const s = new scoreHistoryDB();\r\n    console.log(newState);\r\n    if(newState === 0){\r\n      return this.setState({\r\n        dataset:await s.getWithinVersion(song),\r\n        isLoading:false,\r\n      })\r\n    }else{\r\n      return this.setState({\r\n        dataset:await s.getAcrossVersion(song),\r\n        isLoading:false,\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {current,isLoading,dataset} = this.state;\r\n    const {song,score} = this.props;\r\n    if(!song || !score){\r\n      return (null);\r\n    }\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <FormControl style={{width:\"100%\"}}>\r\n          <InputLabel shrink>\r\n              <FormattedMessage id=\"SongDiffs.Target\"/>\r\n            </InputLabel>\r\n            <Select\r\n              value={current}\r\n              onChange={this.handleChange}\r\n              displayEmpty>\r\n                <MenuItem value={0}><FormattedMessage id=\"SongDiffs.WithinSameVersion\"/></MenuItem>\r\n                <MenuItem value={1}><FormattedMessage id=\"SongDiffs.EachVersion\"/></MenuItem>\r\n              </Select>\r\n          </FormControl>\r\n          {\r\n            isLoading && <div style={{display:\"flex\",justifyContent:\"center\",marginTop:\"30px\"}}><CircularProgress/></div>\r\n          }\r\n          {\r\n            !isLoading && <DiffsTable scoreTable={dataset} type={current}/>\r\n          }\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SongDiffs;\r\n\r\n\r\nclass DiffsTable extends React.Component<{scoreTable:any[],type:number},{}>{\r\n\r\n  render(){\r\n\r\n    const columns = [\r\n      this.props.type === 0 ? { id: \"updatedAt\", label: \"Date\"} : { id: \"storedAt\", label: \"Version\"},\r\n      { id: \"exScore\", label: \"EX\" },\r\n      { id: \"BPI\", label: \"BPI\" },\r\n    ];\r\n\r\n    return (\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column,i) => (\r\n              <TableCell\r\n                key={column.id}\r\n                style={i===0 ? {minWidth:\"150px\"} : undefined}\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {this.props.scoreTable.map((row:any,i:number) => {\r\n            return (\r\n              <TableRow\r\n                hover role=\"checkbox\" tabIndex={-1} key={row.title + row.difficulty + i} style ={ i % 2? { background : \"#f7f7f7\" }:{ background : \"white\" }}>\r\n                {columns.map((column,j) => {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      {row[column.id]}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class TabPanel extends React.Component<{value:number,index:number},{}>{\r\n\r\n  render(){\r\n    if(this.props.value !== this.props.index){\r\n      return (null);\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport { scoreData, songData } from \"../../../types/data\";\r\nimport { _prefixFromNum, getSongSuffixForIIDXInfo } from \"../../../components/songs/filter\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport bpiCalcuator, { B } from \"../../../components/bpi\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {songsDB,scoresDB,scoreHistoryDB} from \"../../../components/indexedDB\";\r\nimport ShowSnackBar from \"../snackBar\";\r\nimport {Tooltip as TooltipMUI, Button, CircularProgress} from '@material-ui/core';\r\nimport BPIChart from \"./bpiChart\";\r\nimport SongDetails from \"./songDetails\";\r\nimport SongDiffs from \"./songDiffs\";\r\nimport { withRouter,RouteComponentProps } from \"react-router-dom\";\r\nimport { UnregisterCallback } from \"history\";\r\nimport TabPanel from \"./common/tabPanel\";\r\n\r\ninterface P{\r\n  isOpen:boolean,\r\n  song:songData|null,\r\n  score:scoreData|null,\r\n  handleOpen:(flag:boolean,row?:any,willDeleteItems?:any)=>Promise<void>,\r\n  willDelete?:boolean\r\n}\r\n\r\ninterface S{\r\n  isError:boolean,\r\n  newScore:number,\r\n  newBPI:number,\r\n  showCharts:boolean,\r\n  chartData:any[],\r\n  currentTab:number,\r\n  anchorEl:null | HTMLElement,\r\n  favorited:boolean,\r\n  successSnack:boolean,\r\n  errorSnack:boolean,\r\n  errorSnackMessage:string,\r\n  graphLastUpdated:number,\r\n  isSaving:boolean,\r\n}\r\n\r\nclass DetailedSongInformation extends React.Component<P & {intl?:any} & RouteComponentProps,S> {\r\n\r\n  private calc:bpiCalcuator = new bpiCalcuator();\r\n  private unlisten:UnregisterCallback|null = null;\r\n\r\n  constructor(props:P & {intl?:any} & RouteComponentProps){\r\n    super(props);\r\n    this.state = {\r\n      isError:false,\r\n      newScore: NaN,\r\n      newBPI:NaN,\r\n      showCharts : true,\r\n      chartData:this.makeGraph().reverse(),\r\n      favorited:props.song ? props.song.isFavorited : false,\r\n      currentTab:0,\r\n      anchorEl:null,\r\n      successSnack:false,\r\n      errorSnack:false,\r\n      errorSnackMessage:\"\",\r\n      graphLastUpdated:new Date().getTime(),\r\n      isSaving:false,\r\n    }\r\n    this.unlisten = this.props.history.listen((_newLocation, action) => {\r\n      if (action === \"POP\") {\r\n        this.props.history.go(1);\r\n        this.props.handleOpen(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if(this.unlisten){\r\n      this.unlisten();\r\n    }\r\n  }\r\n\r\n  makeGraph = (newScore?:number):any[]=>{\r\n    let data:any[] = [],lastExScore = 0;\r\n    const {song,score} = this.props;\r\n    const dataInserter = (exScore:number,label:string):number=>{\r\n      return data.push({\r\n        \"name\" : label,\r\n        \"EX SCORE\" : exScore\r\n      });\r\n    }\r\n    if(!song || !score){ return []; }\r\n    this.calc.setData(song.notes * 2, song.avg, song.wr);\r\n    const bpiBasis = [0,10,20,30,40,50,60,70,80,90,100];\r\n    const mybest = newScore ? newScore : score.exScore;\r\n    for(let i = 0;i < bpiBasis.length; ++i){\r\n      const exScoreFromBPI:number = Math.floor(this.calc.calcFromBPI(bpiBasis[i]));\r\n      if(lastExScore < mybest && mybest <= exScoreFromBPI){\r\n        dataInserter(mybest,\"YOU\");\r\n        lastExScore = mybest;\r\n      }\r\n      lastExScore = exScoreFromBPI;\r\n      dataInserter(exScoreFromBPI,String(bpiBasis[i]));\r\n    }\r\n    if(lastExScore < mybest){\r\n      dataInserter(mybest,\"YOU\");\r\n    }\r\n    return data;\r\n  }\r\n\r\n  handleScoreInput = async(e:React.FocusEvent<HTMLInputElement>):Promise<void>=>{\r\n    const {song} = this.props;\r\n    if(this.state.isSaving){\r\n      return this.setState({errorSnack:true,errorSnackMessage:\"保存中です\"});\r\n    }\r\n    if(!song){\r\n      return this.setState({errorSnack:true,errorSnackMessage:\"楽曲データが不正です。\"});\r\n    }\r\n    const newScore:number = Number(e.target.value);\r\n    const newBPI:B = await this.calc.calc(song.title,song.difficulty,newScore);\r\n    if(newBPI.error){\r\n      return this.setState({errorSnack:true,errorSnackMessage:newBPI.reason});\r\n    }\r\n    return this.setState({\r\n      newScore:newScore,\r\n      newBPI:Math.floor(newBPI.bpi * 100) / 100,\r\n      chartData:this.makeGraph(newScore).reverse(),\r\n      graphLastUpdated:new Date().getTime()\r\n    })\r\n  }\r\n\r\n  handleTabChange = (_e:React.ChangeEvent<{}>, newValue:number)=> this.setState({currentTab:newValue});\r\n\r\n  toggleMenu = (e?: React.MouseEvent<HTMLButtonElement>)=> this.setState({anchorEl: e ? e.currentTarget : null });\r\n\r\n  jumpWeb = (type:number):void =>{\r\n    if(!this.props.song){return;}\r\n    switch(type){\r\n      case 0:\r\n        window.open(\"http://textage.cc/score/\" + this.props.song.textage);\r\n      break;\r\n      case 1:\r\n        window.open(\"https://www.youtube.com/results?search_query=\" + this.props.song.title + \"+IIDX\");\r\n      break;\r\n      case 2:\r\n        if(this.props.song.difficultyLevel !== \"12\"){\r\n          const {formatMessage} = this.props.intl;\r\n          this.setState({errorSnack:true,errorSnackMessage:formatMessage({id:\"Details.ErrorIIDXInfo\"})});\r\n        }else{\r\n          window.open(\r\n            `https://iidx.info/songinfo/?title=${this.props.song.title}${getSongSuffixForIIDXInfo(this.props.song.title,this.props.song.difficulty)}`\r\n          );\r\n        }\r\n      break;\r\n      case 3:\r\n        window.open(\"https://twitter.com/intent/tweet?&text=\");\r\n      break;\r\n    }\r\n    return this.toggleMenu();\r\n  }\r\n\r\n  toggleFavorited = async():Promise<void>=>{\r\n    try{\r\n      const {favorited} = this.state;\r\n      const {song} = this.props;\r\n      const db = new songsDB();\r\n      if(!song){\r\n        throw new Error();\r\n      }\r\n      await db.toggleFavorite(song.title,song.difficulty,!favorited);\r\n      this.toggleSuccessSnack();\r\n      return this.setState({\r\n        favorited:!favorited\r\n      });\r\n    }catch(e){\r\n      console.log(e);\r\n      return;\r\n    }\r\n  }\r\n\r\n  toggleSuccessSnack = ()=>this.setState({successSnack:!this.state.successSnack})\r\n  toggleErrorSnack = ()=>this.setState({errorSnack:!this.state.errorSnack})\r\n\r\n  calcRank = ()=> this.props.score ? `${this.calc.rank(!Number.isNaN(this.state.newBPI) ? this.state.newBPI : this.props.score.currentBPI)}` : \"-\";\r\n\r\n  saveAndClose = async()=>{\r\n    try{\r\n      const {newBPI,newScore} = this.state;\r\n      const {score,song,willDelete} = this.props;\r\n      if(!song || !score){return;}\r\n      this.setState({isSaving:true});\r\n      const scores = new scoresDB(), scoreHist = new scoreHistoryDB();\r\n      await scores.updateScore(score,{currentBPI:newBPI,exScore:newScore});\r\n      await scoreHist.add(Object.assign(score,{difficultyLevel:song.difficultyLevel}),{currentBPI:newBPI,exScore:newScore});\r\n      this.props.handleOpen(true,null,willDelete ? {title:score.title,difficulty:score.difficulty} : null);\r\n    }catch(e){\r\n      return this.setState({errorSnack:true,errorSnackMessage:e});\r\n    }\r\n  }\r\n\r\n  showRank = (isBody:boolean):string=>{\r\n    const {song,score} = this.props;\r\n    const {newScore} = this.state;\r\n    if(!song || !score){return \"-\";}\r\n    const max:number = song.notes * 2;\r\n    const s:number = !Number.isNaN(newScore) ? newScore : score.exScore;\r\n    const percentage:number =  s  / max;\r\n    if(percentage < 2/9){\r\n      return !isBody ? \"E-\" : `${Math.ceil(max * 2/9 - s)}`;\r\n    }\r\n    if(percentage >= 2/9 && percentage < 1/3){\r\n      return !isBody ? \"D-\" : `${Math.ceil(max * 1/3 - s)}`;\r\n    }\r\n    if(percentage >= 1/3 && percentage < 4/9){\r\n      return !isBody ? \"C-\" : `${Math.ceil(max * 4/9 - s)}`;\r\n    }\r\n    if(percentage >= 4/9 && percentage < 5/9){\r\n      return !isBody ? \"B-\" : `${Math.ceil(max * 5/9 - s)}`;\r\n    }\r\n    if(percentage >= 5/9 && percentage < 2/3){\r\n      return !isBody ? \"A-\" : `${Math.ceil(max * 2/3 - s)}`;\r\n    }\r\n    if(percentage >= 2/3 && percentage < 7/9){\r\n      return !isBody ? \"AA-\" : `${Math.ceil(max * 7/9 - s)}`;\r\n    }\r\n    if(percentage >= 7/9 && percentage < 8/9){\r\n      return !isBody ? \"AAA-\" : `${Math.ceil(max * 8/9 - s)}`;\r\n    }\r\n    if(percentage >= 8/9 && percentage < 17/18){\r\n      return !isBody ? \"AAA+\" : `${Math.floor(s - max * 8/9)}`;\r\n    }\r\n    if(percentage >= 17/18){\r\n      return !isBody ? \"MAX-\" : `${Math.ceil(max - s)}`;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  render(){\r\n    const {formatMessage} = this.props.intl;\r\n    const {isOpen,handleOpen,song,score} = this.props;\r\n    const {isSaving,newScore,newBPI,showCharts,chartData,currentTab,anchorEl,favorited,successSnack,errorSnack,errorSnackMessage} = this.state;\r\n    if(!song || !score){\r\n      return (null);\r\n    }\r\n    const detectStarIconColor = favorited ? \"#ffd700\" : \"#c3c3c3\";\r\n    return (\r\n      <Dialog id=\"detailedScreen\" fullScreen open={isOpen} onClose={handleOpen} style={{overflowX:\"hidden\",width:\"100%\"}}>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={()=>handleOpen(false)} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className=\"be-ellipsis\" style={{flexGrow:1}}>\r\n              {song.title + _prefixFromNum(song.difficulty)}\r\n            </Typography>\r\n            {(!Number.isNaN(newBPI) || !Number.isNaN(newScore)) &&\r\n              <div style={{position:\"relative\"}}>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.saveAndClose} disabled={isSaving}>\r\n                  <FormattedMessage id=\"Details.SaveButton\"/>\r\n                </Button>\r\n                {isSaving && <CircularProgress size={24} style={{color:\"#ccc\",position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}} />}\r\n              </div>\r\n            }\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Toolbar/>\r\n        <Paper>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4} style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",margin:\"10px 0\"}}>\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"textSecondary\">\r\n                BPI\r\n              </Typography>\r\n              <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\">\r\n                {(score && Number.isNaN(newBPI) && !Number.isNaN(score.currentBPI)) && score.currentBPI}\r\n                {!Number.isNaN(newBPI) && newBPI}\r\n                {(Number.isNaN(score.currentBPI) && Number.isNaN(newBPI)) && <span>-</span>}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4} style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",margin:\"10px 0\"}}>\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"textSecondary\">\r\n                {score && <span>{this.showRank(false)}</span>}\r\n              </Typography>\r\n              <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\">\r\n                {score && <span>{this.showRank(true)}</span>}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4} style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",margin:\"10px 0\"}}>\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"textSecondary\">\r\n                RANK\r\n              </Typography>\r\n              <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\">\r\n                {(!Number.isNaN(score.currentBPI) || !Number.isNaN(newBPI)) && <span>{this.calcRank()}</span>}\r\n                {(Number.isNaN(score.currentBPI) && Number.isNaN(newBPI)) && <span>-</span>}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider/>\r\n          <Grid container>\r\n            <Grid item xs={8}>\r\n              <form noValidate autoComplete=\"off\" style={{margin:\"10px 6px 0\"}}>\r\n                <TextField\r\n                  type=\"number\"\r\n                  style={{width:\"100%\"}}\r\n                  label={<FormattedMessage id=\"Details.typeNewScore\"/>}\r\n                  value={!Number.isNaN(newScore) ? newScore : score ? score.exScore : 0}\r\n                  onChange={this.handleScoreInput}\r\n                />\r\n              </form>\r\n            </Grid>\r\n            <Grid item xs={1} style={{display:\"flex\",alignItems:\"center\",justifyContent:\"flex-end\"}}>\r\n              <div style={{margin:\"10px 6px 0\"}}>\r\n                <TooltipMUI title={<FormattedMessage id={favorited ? \"Details.FavButtonRemove\" : \"Details.FavButton\"}/>} aria-label=\"add\">\r\n                  <StarIcon style={{fontSize:\"35px\",color:detectStarIconColor,position:\"relative\",top:\"3px\"}}\r\n                    onClick={this.toggleFavorited}/>\r\n                </TooltipMUI>\r\n              </div>\r\n              <ShowSnackBar\r\n                message={\r\n                  favorited ? formatMessage({id:\"Details.FavButtonAdded\"}) : formatMessage({id:\"Details.FavButtonRemoved\"})}\r\n                variant=\"success\" handleClose={this.toggleSuccessSnack} open={successSnack} autoHideDuration={1000}/>\r\n            </Grid>\r\n            <Grid item xs={1} style={{display:\"flex\",alignItems:\"center\",justifyContent:\"flex-end\"}}>\r\n              <IconButton style={{margin:\"10px 6px 0\"}}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.toggleMenu}>\r\n                  <MoreVertIcon />\r\n              </IconButton>\r\n              <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={()=>this.toggleMenu()}\r\n                >\r\n                  <MenuItem onClick={()=>this.jumpWeb(0)}>TexTage</MenuItem>\r\n                  <MenuItem onClick={()=>this.jumpWeb(1)}>YouTube</MenuItem>\r\n                  <MenuItem onClick={()=>this.jumpWeb(2)}>IIDX.info</MenuItem>\r\n                  <MenuItem onClick={()=>this.jumpWeb(3)}><FormattedMessage id=\"Common.Tweet\"/></MenuItem>\r\n                </Menu>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Tabs\r\n          value={currentTab}\r\n          variant=\"fullWidth\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={this.handleTabChange}>\r\n          <Tab label={<FormattedMessage id=\"Details.Graph\"/>} />\r\n          <Tab label={<FormattedMessage id=\"Details.Details\"/>} />\r\n          <Tab label={<FormattedMessage id=\"Details.Diffs\"/>} />\r\n        </Tabs>\r\n        <TabPanel value={currentTab} index={0}>\r\n          {showCharts &&\r\n            <BPIChart song={song} score={score} chartData={chartData} graphLastUpdated={this.state.graphLastUpdated}/>\r\n          }\r\n        </TabPanel>\r\n        <TabPanel value={currentTab} index={1}>\r\n          <SongDetails song={song} score={score}/>\r\n        </TabPanel>\r\n        <TabPanel value={currentTab} index={2}>\r\n          <SongDiffs song={song} score={score}/>\r\n        </TabPanel>\r\n        <ShowSnackBar message={errorSnackMessage} variant=\"warning\"\r\n            handleClose={this.toggleErrorSnack} open={errorSnack} autoHideDuration={3000}/>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(injectIntl(DetailedSongInformation));\r\n","import { _prefix } from \"../../../../components/songs/filter\";\r\n\r\nexport const diffColor = (i:number,row: any):string=>{\r\n  if(i !== 0){return \"transparent\";}\r\n  switch (row.clearState){\r\n    case 0 : return \"#e0dede\";\r\n    case 1 : return \"#ea63ff\";\r\n    case 2 : return \"#acffab\";\r\n    case 3 : return \"#ff707a\";\r\n    case 4 : return \"#ff4545\";\r\n    case 5 : return \"#fff373\";\r\n    case 6 : return \"#ff793b\";\r\n    default: return \"#ffffff\";\r\n  }\r\n}\r\n\r\nexport const behindScore = (row:any,allSongsData:{[key:string]:any},mode:number)=>{\r\n  try{\r\n    const ghost = [1,2/3,7/9,8/9,1];\r\n    const max = allSongsData[row.title + _prefix(row.difficulty)][\"notes\"] * 2;\r\n    return Math.ceil(max * ghost[mode] - row.exScore)\r\n  }catch(e){\r\n    return;\r\n  }\r\n}\r\n\r\nexport const bp = (bp:number):string=>{\r\n  if(Number.isNaN(bp)){\r\n    return \"-\";\r\n  }\r\n  return String(bp);\r\n}\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport {scoreData, songData} from \"../../../../types/data\";\r\nimport { _prefix } from \"../../../../components/songs/filter\";\r\nimport DetailedSongInformation from \"../detailsScreen\";\r\nimport { diffColor, behindScore, bp } from \"../common\";\r\n\r\nconst columns = [\r\n  { id: \"difficultyLevel\", label: \"☆\"},\r\n  { id: \"title\", label: \"曲名\" },\r\n  { id: \"currentBPI\", label: \"BPI\"},\r\n  {\r\n    id: \"exScore\",\r\n    label: \"EX\",\r\n  },\r\n];\r\n\r\ninterface P{\r\n  data:scoreData[],\r\n  sort:number,\r\n  isDesc:boolean,\r\n  changeSort:(newNum:number)=>void,\r\n  mode:number,\r\n  allSongsData:{[key:string]:any}\r\n  updateScoreData:()=>void,\r\n}\r\n\r\ninterface S{\r\n  page:number,\r\n  rowsPerPage:number,\r\n  isOpen:boolean,\r\n  currentSongData:songData | null,\r\n  currentScoreData:scoreData | null\r\n}\r\n\r\nexport default class SongsTable extends React.Component<Readonly<P>,S>{\r\n\r\n  constructor(props:Readonly<P>){\r\n    super(props);\r\n    this.state = {\r\n      page : 0,\r\n      rowsPerPage : 10,\r\n      isOpen:false,\r\n      currentSongData:null,\r\n      currentScoreData:null\r\n    }\r\n  }\r\n\r\n  handleOpen = async(updateFlag:boolean,row?:any,_willDeleteItems?:any):Promise<void>=> {\r\n    if(updateFlag){await this.props.updateScoreData();}\r\n    return this.setState({\r\n      isOpen:!this.state.isOpen,\r\n      currentSongData:row ? this.props.allSongsData[row.title + _prefix(row.difficulty)] : null,\r\n      currentScoreData:row ? row : null\r\n    });\r\n  }\r\n\r\n  handleChangePage = (_e:React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage:number):void => this.setState({page:newPage});\r\n\r\n  handleChangeRowsPerPage = (event:React.ChangeEvent<HTMLInputElement>):void => this.setState({page:0,rowsPerPage:+event.target.value});\r\n\r\n  render(){\r\n    const {page,rowsPerPage,isOpen,currentSongData,currentScoreData} = this.state;\r\n    const {data,changeSort,sort,isDesc,mode} = this.props;\r\n    return (\r\n      <Paper style={{width:\"100%\",overflowX:\"auto\"}}>\r\n        <div>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column,i) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    onClick={()=>changeSort(i)}\r\n                  >\r\n                    {(mode < 5 || i !== 2 ) && column.label}\r\n                    {(mode > 4 && i === 2) && \"BP\"}\r\n                    {i === sort &&\r\n                      <span>\r\n                        { isDesc && <span>▼</span> }\r\n                        { !isDesc && <span>▲</span> }\r\n                      </span>\r\n                    }\r\n                    {i !== sort && <span>△</span>}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:any,i:number) => {\r\n                return (\r\n                  <TableRow\r\n                    onClick={()=>this.handleOpen(false,row)}\r\n                    hover role=\"checkbox\" tabIndex={-1} key={row.title} style ={ i % 2? { background : \"#f7f7f7\" }:{ background : \"white\" }}>\r\n                    {columns.map((column,j) => {\r\n                      const prefix = row.difficulty === \"hyper\" ? \"(H)\" : row.difficulty === \"leggendaria\" ? \"(†)\" : \"\";\r\n                      return (\r\n                        <TableCell key={column.id + prefix} style={{backgroundColor : diffColor(j,row),position:\"relative\"}}>\r\n                          {(mode < 5 || column.id !== \"currentBPI\") && row[column.id]}\r\n\r\n                          {column.id === \"title\" && prefix}\r\n                          {(mode > 0 && mode < 5 && column.id === \"exScore\") &&\r\n                            <span>(-{behindScore(row,this.props.allSongsData,mode)})</span>\r\n                          }\r\n                          {(mode > 4 && column.id === \"currentBPI\") && bp(row.missCount)}\r\n                          {(j === 3 && mode === 0 && row.lastScore > -1) && <span className=\"plusOverlayScore\">\r\n                            {row.exScore - row.lastScore > 0 ? \"+\" + Number(row.exScore - row.lastScore) : row.exScore - row.lastScore}\r\n                            </span>\r\n                          }\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={this.props.data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          labelRowsPerPage=\"\"\r\n          backIconButtonProps={{\r\n            \"aria-label\": \"previous page\",\r\n          }}\r\n          nextIconButtonProps={{\r\n            \"aria-label\": \"next page\",\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n        {isOpen &&\r\n          <DetailedSongInformation isOpen={isOpen} song={currentSongData} score={currentScoreData} handleOpen={this.handleOpen}/>\r\n        }\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {songsDB} from \"../../../../components/indexedDB\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport SongsTable from \"./tablePlayed\";\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport {scoreData} from \"../../../../types/data\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { _prefix, _prefixFromNum } from '../../../../components/songs/filter';\r\n\r\nimport equal from 'fast-deep-equal'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { _isSingle } from '../../../../components/settings';\r\nimport moment from 'moment';\r\n\r\ninterface stateInt {\r\n  isLoading:boolean,\r\n  filterByName:string,\r\n  scoreData:scoreData[],\r\n  allSongsData:{[key:string]:any},\r\n  options:{[key:string]:string[]},\r\n  sort:number,\r\n  isDesc:boolean,\r\n  mode:number,\r\n  range:number,\r\n}\r\n\r\ninterface P{\r\n  title:string,\r\n  full:scoreData[],\r\n  updateScoreData:()=>Promise<void>,\r\n}\r\n\r\nexport default class SongsList extends React.Component<P,stateInt> {\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state = {\r\n      isLoading:true,\r\n      filterByName:\"\",\r\n      scoreData:[],\r\n      allSongsData:{},\r\n      mode:0,\r\n      sort:2,\r\n      isDesc:true,\r\n      options:{\r\n        level:[\"11\",\"12\"],\r\n        difficulty:[\"0\",\"1\",\"2\"],\r\n      },\r\n      range:0,\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    let allSongs:{[key:string]:string|number} = {};\r\n    const allSongsRawData = await new songsDB().getAll(_isSingle());\r\n    for(let i =0; i < allSongsRawData.length; ++i){\r\n      const prefix:string = _prefixFromNum(allSongsRawData[i][\"difficulty\"]);\r\n      allSongs[allSongsRawData[i][\"title\"] + prefix] = allSongsRawData[i];\r\n    }\r\n    this.setState({\r\n      scoreData:this.props.full,\r\n      allSongsData:allSongs,\r\n      isLoading:false,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps:P){\r\n    if(!equal(prevProps.full,this.props.full)){\r\n      return this.setState({scoreData:this.songFilter()});\r\n    }\r\n  }\r\n\r\n  updateScoreData():Promise<void>{\r\n    return this.props.updateScoreData();\r\n  }\r\n\r\n  handleLevelChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"level\");\r\n  }\r\n\r\n  handleDiffChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"difficulty\");\r\n  }\r\n\r\n  handleExec = (name:string,checked:boolean,target:string)=>{\r\n    let newState = this.state;\r\n    if(checked){\r\n      newState[\"options\"][target].push(name);\r\n    }else{\r\n      newState[\"options\"][target] = newState[\"options\"][target].filter((t:string)=> t !== name);\r\n    }\r\n    return this.setState({scoreData:this.songFilter(newState),options:newState[\"options\"]});\r\n  }\r\n\r\n  handleInputChange = (e:React.ChangeEvent<HTMLInputElement|HTMLTextAreaElement>|null)=>{\r\n    let newState = this.cloneState();\r\n    newState.filterByName = e ? e.target.value : \"\";\r\n    return this.setState({scoreData:this.songFilter(newState),filterByName:newState.filterByName});\r\n  }\r\n\r\n  songFilter = (newState:{[s:string]:any} = this.state) =>{\r\n    const diffs:string[] = [\"hyper\",\"another\",\"leggendaria\"];\r\n    const m = newState.mode;\r\n    const r = newState.range;\r\n    const f = this.state.allSongsData;\r\n    if(Object.keys(this.state.allSongsData).length === 0){return [];}\r\n    return this.props.full.filter((data)=>{\r\n      const max = f[data.title + _prefix(data[\"difficulty\"])][\"notes\"] * 2;\r\n      const evaluateRange = ():boolean=>{\r\n        const format = (t:string|Date)=>moment(t).format(\"YYYYMMDD\");\r\n        return r === 0 ? true :\r\n        r === 1 ? format(data.updatedAt) === format(new Date()) :\r\n        moment(data.updatedAt).week() === moment(new Date()).week()\r\n      }\r\n      const evaluateMode = ():boolean=>{\r\n        return m === 0 ? true :\r\n        m === 1 ? data.exScore / max < 2 / 3 :\r\n        m === 2 ? data.exScore / max < 7 / 9 && 2/3 < data.exScore / max :\r\n        m === 3 ? data.exScore / max < 8 / 9 && 7/9 < data.exScore / max :\r\n        m === 4 ? true :\r\n        m === 5 ? data.clearState <= 3 :\r\n        m === 6 ? data.clearState <= 4 :\r\n        m === 7 ? data.clearState <= 5 : true\r\n      }\r\n      return (\r\n        evaluateRange() &&\r\n        evaluateMode() &&\r\n        newState[\"options\"][\"level\"].some((item:string)=>{\r\n          return item === data.difficultyLevel }) &&\r\n        newState[\"options\"][\"difficulty\"].some((item:number)=>{\r\n          return diffs[Number(item)] === data.difficulty} ) &&\r\n        data.title.toLowerCase().indexOf(newState[\"filterByName\"].toLowerCase()) > -1\r\n      )\r\n    })\r\n  }\r\n\r\n  changeSort = (newNum:number):void=>{\r\n    const {sort,isDesc} = this.state;\r\n    if(sort === newNum){\r\n      return this.setState({isDesc:!isDesc});\r\n    }\r\n    return this.setState({sort:newNum,isDesc:true})\r\n  }\r\n\r\n  sortedData = ():scoreData[]=>{\r\n    const {scoreData,sort,isDesc,mode,allSongsData} = this.state;\r\n    const res = scoreData.sort((a,b)=> {\r\n      switch(sort){\r\n        case 0:\r\n        return Number(b.difficultyLevel) - Number(a.difficultyLevel);\r\n        case 1:\r\n        return b.title.localeCompare(a.title, \"ja\", {numeric:true});\r\n        default:\r\n        case 2:\r\n        if(mode > 4){\r\n          if(!a.missCount || !b.missCount){\r\n            return -1;\r\n          }\r\n          return  a.missCount-b.missCount || (a.missCount||Infinity)-(b.missCount||Infinity) || 0\r\n        }\r\n        return b.currentBPI - a.currentBPI;\r\n        case 3:\r\n        if(mode > 0 && mode < 5){\r\n          const aMax = allSongsData[a.title + _prefix(a.difficulty)][\"notes\"] * 2;\r\n          const bMax = allSongsData[b.title + _prefix(b.difficulty)][\"notes\"] * 2;\r\n          return b.exScore / bMax - a.exScore / aMax;\r\n        }\r\n        return b.exScore - a.exScore;\r\n      }\r\n    });\r\n    return isDesc ? res : res.reverse();\r\n  }\r\n\r\n  handleModeChange = (event:React.ChangeEvent<{name?:string|undefined; value:unknown;}>):void =>{\r\n    if (typeof event.target.value !== \"number\") { return; }\r\n    let newState = this.cloneState();\r\n    newState.mode = event.target.value;\r\n    return this.setState({scoreData:this.songFilter(newState),mode:event.target.value});\r\n  }\r\n\r\n  handleRangeCange = (event:React.ChangeEvent<{name?:string|undefined; value:unknown;}>):void =>{\r\n    if (typeof event.target.value !== \"number\") { return; }\r\n    let newState = this.cloneState();\r\n    newState.range = event.target.value;\r\n    return this.setState({scoreData:this.songFilter(newState),range:event.target.value});\r\n  }\r\n\r\n  // readonly修飾子が付いているデータに一時的な書き込みをするための措置\r\n  // (曲目フィルタのためにのみ使用し、stateには反映しない)\r\n  // アンチパターンなのでなんとかする\r\n  cloneState = () => JSON.parse(JSON.stringify(this.state))\r\n\r\n  render(){\r\n    const {isLoading,filterByName,options,sort,isDesc,mode,range} = this.state;\r\n    if(isLoading){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>);\r\n    }\r\n    return (\r\n      <Container className=\"commonLayout\" fixed id=\"songsVil\">\r\n        <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\" gutterBottom\r\n          style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n          <FormattedMessage id={this.props.title}/>\r\n          <FormControl>\r\n            <Select value={range} displayEmpty onChange={this.handleRangeCange}>\r\n              <MenuItem value={0}>全期間</MenuItem>\r\n              <MenuItem value={1}>本日更新分</MenuItem>\r\n              <MenuItem value={2}>今週更新分</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Typography>\r\n        <Grid container spacing={1} style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={6}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n              <InputLabel><FormattedMessage id=\"Songs.mode\"/></InputLabel>\r\n              <Select value={mode} onChange={this.handleModeChange}>\r\n                <MenuItem value={0}><FormattedMessage id=\"Songs.mode0\"/></MenuItem>\r\n                <MenuItem value={1}><FormattedMessage id=\"Songs.mode1\"/></MenuItem>\r\n                <MenuItem value={2}><FormattedMessage id=\"Songs.mode2\"/></MenuItem>\r\n                <MenuItem value={3}><FormattedMessage id=\"Songs.mode3\"/></MenuItem>\r\n                <MenuItem value={4}><FormattedMessage id=\"Songs.mode4\"/></MenuItem>\r\n                <MenuItem value={5}><FormattedMessage id=\"Songs.mode5\"/></MenuItem>\r\n                <MenuItem value={6}><FormattedMessage id=\"Songs.mode6\"/></MenuItem>\r\n                <MenuItem value={7}><FormattedMessage id=\"Songs.mode7\"/></MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\" style={{width:\"100%\"}}>\r\n            <InputLabel htmlFor=\"standard-adornment-password\"><FormattedMessage id=\"Songs.filterByName\"/></InputLabel>\r\n              <Input\r\n                style={{width:\"100%\"}}\r\n                placeholder={\"(ex.)255\"}\r\n                value={filterByName}\r\n                onChange={this.handleInputChange}\r\n                endAdornment={\r\n                  filterByName &&\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={()=>this.handleInputChange(null)}>\r\n                      <BackspaceIcon/>\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} id=\"mainFilters\" style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByLevel\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"11\")} onChange={this.handleLevelChange(\"11\")} value=\"11\" />}\r\n                  label=\"☆11\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"12\")} onChange={this.handleLevelChange(\"12\")} value=\"12\" />}\r\n                  label=\"☆12\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByDifficulty\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"0\")} onChange={this.handleDiffChange(\"0\")} value=\"hyper\" />}\r\n                  label=\"H\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"1\")} onChange={this.handleDiffChange(\"1\")} value=\"another\" />}\r\n                  label=\"A\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"2\")} onChange={this.handleDiffChange(\"2\")} value=\"leggendaria\" />}\r\n                  label=\"†\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <SongsTable\r\n          data={this.sortedData()} sort={sort} isDesc={isDesc} mode={mode}\r\n          changeSort={this.changeSort} allSongsData={this.state.allSongsData}\r\n          updateScoreData={this.updateScoreData}/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport SongsList from '../components/songs/played/songsList';\r\nimport { scoresDB } from '../../components/indexedDB';\r\nimport { scoreData } from '../../types/data';\r\n\r\ninterface S {\r\n  full:scoreData[]\r\n}\r\n\r\nexport default class Songs extends React.Component<{},S> {\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.state ={\r\n      full:[]\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.updateScoreData();\r\n  }\r\n\r\n  async updateScoreData(){\r\n    const full:scoreData[] = await new scoresDB().getAll();\r\n    this.setState({full:full});\r\n  }\r\n\r\n  render(){\r\n    if(!this.state.full){\r\n      return (null);\r\n    }\r\n    return (\r\n      <div>\r\n        <SongsList title=\"Songs.title\" full={this.state.full} updateScoreData={this.updateScoreData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport SongsList from '../components/songs/played/songsList';\r\nimport { scoresDB, songsDB } from '../../components/indexedDB';\r\nimport { scoreData, songData } from '../../types/data';\r\nimport { difficultyDiscriminator } from '../../components/songs/filter';\r\n\r\ninterface S {\r\n  full:scoreData[]\r\n}\r\n\r\nexport default class Songs extends React.Component<{},S> {\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.state ={\r\n      full:[]\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.updateScoreData();\r\n  }\r\n\r\n  async updateScoreData(){\r\n    const db = new scoresDB();\r\n    const currentStore = \"27\";\r\n    const isSingle = 1;\r\n    const songs:songData[] = await new songsDB().getAllFavoritedItems(isSingle);\r\n    let full:scoreData[] = [];\r\n    for(let i =0;i < songs.length;++i){\r\n      const song = songs[i];\r\n      const d = difficultyDiscriminator(song.difficulty);\r\n      const res = await db.getItem(song.title,d,currentStore,isSingle);\r\n      if((isSingle && song[\"dpLevel\"] !== \"0\") || (!isSingle && song[\"dpLevel\"] === \"0\")){\r\n        continue;\r\n      }\r\n      if(res.length === 0){\r\n        full.push({\r\n          title:song.title,\r\n          clearState:7,\r\n          currentBPI:-15,\r\n          difficulty:d,\r\n          difficultyLevel:song.difficultyLevel,\r\n          exScore:0,\r\n          isSingle:isSingle,\r\n          storedAt:currentStore,\r\n          lastScore:-1,\r\n          updatedAt:\"-\",\r\n        });\r\n      }else{\r\n        full.push(res[0]);\r\n      }\r\n    }\r\n    this.setState({full:full});\r\n  }\r\n\r\n  render(){\r\n    if(!this.state.full){\r\n      return (null);\r\n    }\r\n    return (\r\n      <div>\r\n        <SongsList title=\"Favorites.Title\" full={this.state.full} updateScoreData={this.updateScoreData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport {scoreData, songData} from \"../../../../types/data\";\r\nimport DetailedSongInformation from \"../detailsScreen\";\r\nimport { difficultyDiscriminator } from '../../../../components/songs/filter';\r\nimport { _isSingle,_currentStore } from '../../../../components/settings';\r\n\r\nconst columns = [\r\n  { id: \"difficultyLevel\", label: \"☆\"},\r\n  { id: \"title\", label: \"曲名\" },\r\n];\r\n\r\ninterface P{\r\n  data:songData[],\r\n  sort:number,\r\n  isDesc:boolean,\r\n  changeSort:(newNum:number)=>void,\r\n  updateScoreData:(willDelete?:boolean,willDeleteItems?:{title:string,difficulty:string})=>void,\r\n}\r\n\r\ninterface S{\r\n  page:number,\r\n  rowsPerPage:number,\r\n  isOpen:boolean,\r\n  currentSongData:songData | null,\r\n  currentScoreData:scoreData | null\r\n}\r\n\r\nexport default class SongsTable extends React.Component<Readonly<P>,S>{\r\n\r\n  constructor(props:Readonly<P>){\r\n    super(props);\r\n    this.state = {\r\n      page : 0,\r\n      rowsPerPage : 10,\r\n      isOpen:false,\r\n      currentSongData:null,\r\n      currentScoreData:null\r\n    }\r\n  }\r\n\r\n  handleOpen = async(updateFlag:boolean = false,row?:any,willDeleteItems?:{title:string,difficulty:string}):Promise<void>=> {\r\n    if(updateFlag){await this.props.updateScoreData(true,willDeleteItems);}\r\n    const t = row ? {\r\n      difficulty:difficultyDiscriminator(row.difficulty),\r\n      title:row.title,\r\n      currentBPI:NaN,\r\n      exScore:0,\r\n      difficultyLevel:row.difficultyLevel,\r\n      storedAt:_currentStore(),\r\n      isSingle:_isSingle(),\r\n      clearState:7,\r\n      lastScore:-1,\r\n      updatedAt:\"-\",\r\n    } : null;\r\n    return this.setState({\r\n      isOpen:!this.state.isOpen,\r\n      currentSongData:row ? row : null,\r\n      currentScoreData:t\r\n    });\r\n  }\r\n\r\n  handleChangePage = (_event:React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage:number):void => this.setState({page:newPage});\r\n\r\n  handleChangeRowsPerPage = (event:React.ChangeEvent<HTMLInputElement>):void => this.setState({page:0,rowsPerPage:+event.target.value});\r\n\r\n  render(){\r\n    const {page,rowsPerPage,isOpen,currentSongData,currentScoreData} = this.state;\r\n    const {data,changeSort,sort,isDesc} = this.props;\r\n    return (\r\n      <Paper style={{width:\"100%\",overflowX:\"auto\"}}>\r\n        <div>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column,i) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    onClick={()=>changeSort(i)}\r\n                  >\r\n                    {column.label}\r\n                    {i === sort &&\r\n                      <span>\r\n                        { isDesc && <span>▼</span> }\r\n                        { !isDesc && <span>▲</span> }\r\n                      </span>\r\n                    }\r\n                    {i !== sort && <span>△</span>}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:any,i:number) => {\r\n                return (\r\n                  <TableRow\r\n                    onClick={()=>this.handleOpen(false,row)}\r\n                    hover role=\"checkbox\" tabIndex={-1} key={row.title + row.difficulty} style ={ i % 2? { background : \"#f7f7f7\" }:{ background : \"white\" }}>\r\n                    {columns.map((column,j) => {\r\n                      const d = difficultyDiscriminator(row.difficulty);\r\n                      const prefix = d === \"hyper\" ? \"(H)\" : d === \"leggendaria\" ? \"(†)\" : \"\";\r\n                      return (\r\n                        <TableCell key={column.id + prefix}>\r\n                          {row[column.id]}\r\n                          {column.id === \"title\" && prefix}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={this.props.data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          labelRowsPerPage=\"\"\r\n          backIconButtonProps={{\r\n            \"aria-label\": \"previous page\",\r\n          }}\r\n          nextIconButtonProps={{\r\n            \"aria-label\": \"next page\",\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n        {isOpen &&\r\n          <DetailedSongInformation isOpen={isOpen} song={currentSongData} score={currentScoreData} handleOpen={this.handleOpen} willDelete={true}/>\r\n        }\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport SongsTable from \"./tableNotPlayed\";\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport {songData} from \"../../../../types/data\";\r\nimport { difficultyDiscriminator } from '../../../../components/songs/filter';\r\nimport equal from 'fast-deep-equal'\r\n\r\ninterface stateInt {\r\n  filterByName:string,\r\n  songData:songData[],\r\n  options:{[key:string]:string[]},\r\n  sort:number,\r\n  isDesc:boolean,\r\n}\r\n\r\ninterface P{\r\n  title:string,\r\n  full:songData[],\r\n  updateScoreData:(whenUpdated:boolean,willDeleteItem?:{title:string,difficulty:string})=>Promise<void>,\r\n}\r\n\r\nexport default class NotPlayList extends React.Component<P,stateInt> {\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state = {\r\n      filterByName:\"\",\r\n      songData:[],\r\n      sort:1,\r\n      isDesc:false,\r\n      options:{\r\n        level:[\"11\",\"12\"],\r\n        difficulty:[\"0\",\"1\",\"2\"],\r\n      }\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({songData:this.songFilter()})\r\n  }\r\n\r\n  componentDidUpdate(prevProps:P){\r\n    if(!equal(prevProps.full,this.props.full)){\r\n      return this.setState({songData:this.songFilter()});\r\n    }\r\n  }\r\n\r\n  updateScoreData(whenUpdated:boolean = false,willDeleteItem?:{title:string,difficulty:string}):Promise<void>{\r\n    if(!whenUpdated || !willDeleteItem){\r\n      return this.props.updateScoreData(false);\r\n    }\r\n    return this.props.updateScoreData(whenUpdated,willDeleteItem);\r\n  }\r\n\r\n  handleLevelChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"level\");\r\n  }\r\n\r\n  handleDiffChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"difficulty\");\r\n  }\r\n\r\n  handleExec = (name:string,checked:boolean,target:string)=>{\r\n    let newState = this.state;\r\n    if(checked){\r\n      newState[\"options\"][target].push(name);\r\n    }else{\r\n      newState[\"options\"][target] = newState[\"options\"][target].filter((t:string)=> t !== name);\r\n    }\r\n    return this.setState({songData:this.songFilter(newState),options:newState[\"options\"]});\r\n  }\r\n\r\n  handleInputChange = (e:React.ChangeEvent<HTMLInputElement|HTMLTextAreaElement>|null)=>{\r\n    let newState = this.cloneState();\r\n    newState.filterByName = e ? e.target.value : \"\";\r\n\r\n    return this.setState({songData:this.songFilter(newState),filterByName:newState.filterByName});\r\n  }\r\n\r\n  songFilter = (newState:{[s:string]:any} = this.state) =>{\r\n    const diffs:string[] = [\"hyper\",\"another\",\"leggendaria\"];\r\n    return this.props.full.filter((data)=>{\r\n      return (\r\n        newState[\"options\"][\"level\"].some((item:string)=>{\r\n          return item === data.difficultyLevel }) &&\r\n        newState[\"options\"][\"difficulty\"].some((item:number)=>{\r\n          return diffs[Number(item)] === difficultyDiscriminator(data.difficulty)} ) &&\r\n        data.title.toLowerCase().indexOf(newState[\"filterByName\"].toLowerCase()) > -1\r\n      )\r\n    })\r\n  }\r\n\r\n  changeSort = (newNum:number):void=>{\r\n    const {sort,isDesc} = this.state;\r\n    if(sort === newNum){\r\n      return this.setState({isDesc:!isDesc});\r\n    }\r\n    return this.setState({sort:newNum,isDesc:true})\r\n  }\r\n\r\n  sortedData = ():songData[]=>{\r\n    const {songData,sort,isDesc} = this.state;\r\n    const res = songData.sort((a,b)=> {\r\n      switch(sort){\r\n        case 0:\r\n        return Number(b.difficultyLevel) - Number(a.difficultyLevel);\r\n        case 1:\r\n        default:\r\n        return b.title.localeCompare(a.title, \"ja\", {numeric:true});\r\n      }\r\n    });\r\n    return isDesc ? res : res.reverse();\r\n  }\r\n\r\n  // readonly修飾子が付いているデータに一時的な書き込みをするための措置\r\n  // (曲目フィルタのためにのみ使用し、stateには反映しない)\r\n  // アンチパターンなのでなんとかする\r\n  cloneState = () => JSON.parse(JSON.stringify(this.state))\r\n\r\n  render(){\r\n    const {filterByName,options,sort,isDesc} = this.state;\r\n    return (\r\n      <Container className=\"commonLayout\" fixed id=\"songsVil\">\r\n        <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\" gutterBottom\r\n          style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n          <FormattedMessage id={this.props.title}/>\r\n        </Typography>\r\n        <Grid container spacing={1} style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={12}>\r\n            <FormControl component=\"fieldset\" style={{width:\"100%\"}}>\r\n            <InputLabel htmlFor=\"standard-adornment-password\"><FormattedMessage id=\"Songs.filterByName\"/></InputLabel>\r\n              <Input\r\n                style={{width:\"100%\"}}\r\n                placeholder={\"(ex.)255\"}\r\n                value={filterByName}\r\n                onChange={this.handleInputChange}\r\n                endAdornment={\r\n                  filterByName && \r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={()=>this.handleInputChange(null)}>\r\n                      <BackspaceIcon/>\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} id=\"mainFilters\" style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByLevel\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"11\")} onChange={this.handleLevelChange(\"11\")} value=\"11\" />}\r\n                  label=\"☆11\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"12\")} onChange={this.handleLevelChange(\"12\")} value=\"12\" />}\r\n                  label=\"☆12\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByDifficulty\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"0\")} onChange={this.handleDiffChange(\"0\")} value=\"hyper\" />}\r\n                  label=\"H\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"1\")} onChange={this.handleDiffChange(\"1\")} value=\"another\" />}\r\n                  label=\"A\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"2\")} onChange={this.handleDiffChange(\"2\")} value=\"leggendaria\" />}\r\n                  label=\"†\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <SongsTable\r\n          data={this.sortedData()} sort={sort} isDesc={isDesc}\r\n          changeSort={this.changeSort}\r\n          updateScoreData={this.updateScoreData}/>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { scoresDB, songsDB } from '../../components/indexedDB';\r\nimport { songData } from '../../types/data';\r\nimport { difficultyDiscriminator } from '../../components/songs/filter';\r\nimport { _isSingle,_currentStore } from '../../components/settings';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport NotPlayList from '../components/songs/notplayed/notPlayList';\r\n\r\ninterface S {\r\n  full:songData[]\r\n}\r\n\r\nexport default class NotPlayed extends React.Component<{},S> {\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.state ={\r\n      full:[]\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.updateScoreData();\r\n  }\r\n\r\n  async updateScoreData(whenUpdated:boolean = false,willDeleteItem?:{title:string,difficulty:string}){\r\n    if(whenUpdated && willDeleteItem){\r\n      let currentState = this.state.full;\r\n      currentState = currentState.filter((item:songData)=>item.title !== willDeleteItem.title && willDeleteItem.difficulty);\r\n      return this.setState({full:currentState});\r\n    }\r\n    const currentStore = _currentStore();\r\n    const isSingle = _isSingle();\r\n    const songs:songData[] = await new songsDB().getAll(isSingle);\r\n    const db = new scoresDB();\r\n    let full:songData[] = [];\r\n    for(let i =0;i < songs.length;++i){\r\n      let song = songs[i];\r\n      const res = await db.getItem(song.title,difficultyDiscriminator(song.difficulty),currentStore,isSingle);\r\n      if(res.length === 0) full.push(song);\r\n    }\r\n    this.setState({full:full});\r\n  }\r\n\r\n  render(){\r\n    if(this.state.full.length === 0){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>);\r\n    }\r\n    return (\r\n      <div>\r\n        <NotPlayList title=\"NotPlayed.Title\" full={this.state.full} updateScoreData={this.updateScoreData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { scoresDB, songsDB, scoreHistoryDB } from '../../components/indexedDB';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport bpiCalcuator from '../../components/bpi';\r\nimport {_isSingle,_currentStore} from \"../../components/settings\";\r\nimport moment from 'moment';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { XAxis, CartesianGrid, YAxis, Tooltip, Bar, ResponsiveContainer, Line, ComposedChart } from 'recharts';\r\n\r\ninterface S {\r\n  isLoading:boolean,\r\n  totalBPI:number,\r\n  perDate:{name:string,sum:string,avg:number}[]\r\n}\r\n\r\nclass Stats extends React.Component<{intl:any},S> {\r\n\r\n  constructor(props:{intl:any}){\r\n    super(props);\r\n    this.state ={\r\n      isLoading:true,\r\n      totalBPI:0,\r\n      perDate:[],\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.updateScoreData();\r\n  }\r\n\r\n  async updateScoreData(){\r\n    const db = new scoresDB();\r\n    const bpi = new bpiCalcuator();\r\n    const currentStore = _currentStore();\r\n    const isSingle = _isSingle();\r\n    bpi.allTwelvesLength = await new songsDB().getAllTwelvesLength(isSingle);\r\n    bpi.allTwelvesBPI = await db.getAllTwelvesBPI(isSingle,currentStore,\"12\");\r\n\r\n    //compare by date\r\n    const allDiffs = (await new scoreHistoryDB().getAll(isSingle,currentStore,\"12\")).reduce((groups, item) => {\r\n      const date = moment(item.updatedAt).format(\"YYYY/MM/DD\");\r\n      if (!groups[date]) {\r\n        groups[date] = [];\r\n      }\r\n      groups[date].push(item);\r\n      return groups;\r\n    }, {});\r\n    let eachDaySum:{name:string,sum:string,avg:number,}[] = [];\r\n    Object.keys(allDiffs).map((item,i)=>{\r\n      if(i > 10){\r\n        return 0;\r\n      }\r\n      const avg:{BPI:number} = allDiffs[item].reduce((a:any,c:any)=>{return {BPI:a.BPI + c.BPI}});\r\n      eachDaySum.push({\r\n        name : item,\r\n        sum : allDiffs[item].length,\r\n        avg : Math.round(avg.BPI / allDiffs[item].length * 100) / 100\r\n      });\r\n      return 0;\r\n    });\r\n    this.setState({\r\n      isLoading:false,\r\n      totalBPI:bpi.totalBPI(),\r\n      perDate:eachDaySum.sort((a,b)=> moment(a.name).diff(b.name))\r\n    });\r\n  }\r\n\r\n  render(){\r\n    const {totalBPI,isLoading,perDate} = this.state;\r\n    const {formatMessage} = this.props.intl;\r\n    if(isLoading){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>\r\n      );\r\n    }\r\n    return (\r\n      <Container className=\"commonLayout\" fixed>\r\n        <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\" gutterBottom>\r\n          <FormattedMessage id=\"Stats.title\"/>\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={3} lg={3}>\r\n            <Paper style={{padding:\"15px\"}} className=\"responsiveTotalBPI\">\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                <FormattedMessage id=\"Stats.TotalBPI\"/>\r\n              </Typography>\r\n              <Typography component=\"h2\" variant=\"h2\" color=\"primary\">\r\n                {totalBPI}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={9} lg={9}>\r\n            <Paper style={{padding:\"15px\",height:240}}>\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n                <FormattedMessage id=\"Stats.EachDay\"/>\r\n              </Typography>\r\n              {perDate.length > 0 &&\r\n                <div style={{width:\"95%\",height:\"100%\",margin:\"5px auto\"}}>\r\n                  <ResponsiveContainer width=\"100%\">\r\n                    <ComposedChart\r\n                      data={perDate}\r\n                      margin={{\r\n                        top: 5, right: 30, left: -30, bottom: 25,\r\n                      }}>\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis dataKey=\"name\" />\r\n                      <YAxis tick={{dx:-5}}/>\r\n                      <Tooltip />\r\n                      <Bar dataKey=\"sum\" name={formatMessage({id:\"Stats.UpdatedSum\"})} fill=\"#82ca9d\" />\r\n                      <Line dataKey=\"avg\" name={formatMessage({id:\"Stats.Average\"})} />\r\n                    </ComposedChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              }\r\n              {perDate.length === 0 && <p>No data found.</p>}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(Stats);\r\n","import { Container } from 'unstated'\r\nimport { _lang,_currentStore } from '../settings'\r\n\r\ninterface S{\r\n  lang:string,\r\n  store:string,\r\n  cannotMove:boolean,\r\n}\r\n\r\nexport default class GlobalContainer extends Container<S> {\r\n\r\n  constructor(){\r\n    super();\r\n    this.setLang = this.setLang.bind(this);\r\n    this.setStore = this.setStore.bind(this);\r\n  }\r\n\r\n  state = {\r\n    lang : _lang(),\r\n    store : _currentStore(),\r\n    cannotMove: false\r\n  }\r\n\r\n  setLang(newLang:string) {\r\n    localStorage.setItem(\"lang\",newLang);\r\n    this.setState({ lang: newLang })\r\n  }\r\n\r\n  setStore(newStore:string){\r\n    localStorage.setItem(\"currentStore\",newStore);\r\n    this.setState({ store: newStore });\r\n  }\r\n\r\n  setMove(newState:boolean) {\r\n    this.setState({ cannotMove: newState })\r\n  }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Subscribe } from 'unstated';\r\nimport GlobalContainer from '../../components/context/global';\r\nimport Button from '@material-ui/core/Button';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport { _currentVersion, _isSingle } from '../../components/settings';\r\nimport { songsDB, scoresDB } from '../../components/indexedDB';\r\nimport { songData } from '../../types/data';\r\nimport PromisePool from \"es6-promise-pool\";\r\n\r\ninterface S {\r\n  isLoading:boolean,\r\n  disableUpdateBtn:boolean,\r\n  currentVersion:string,\r\n  message:string,\r\n}\r\n\r\ninterface P{\r\n  intl:any,\r\n  global:any\r\n}\r\n\r\nclass Settings extends React.Component<P,S> {\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state ={\r\n      isLoading:false,\r\n      disableUpdateBtn:false,\r\n      currentVersion:_currentVersion(),\r\n      message:\"\",\r\n    }\r\n  }\r\n\r\n  async componentDidMount(){\r\n  }\r\n\r\n  updateDef = async()=>{\r\n    const end = ()=>{this.props.global.setMove(false);}\r\n    try{\r\n      this.props.global.setMove(true);\r\n      this.setState({disableUpdateBtn:true,message:\"\"});\r\n      const sdb = new songsDB();\r\n      const reducer = (t:songData[])=>t.reduce((result:{[key:string]:songData}, current:songData) => {result[current.title] = current;return result;}, {});\r\n      const allSongs = await sdb.getAll(_isSingle()).then(t=>reducer(t));\r\n\r\n      const res = await fetch(\"https://files.poyashi.me/json/songs.json\").then(t=>t.json());\r\n      if(res.version === this.state.currentVersion){\r\n        end();\r\n        return this.setState({disableUpdateBtn:false,message:\"定義データはすでに最新です\"});\r\n      }\r\n      const promiseProducer = ()=>{\r\n        return res.body.map((t:songData) => {\r\n          return new Promise(resolve=>{\r\n            console.log(t[\"title\"]);\r\n            if(allSongs[t[\"title\"]]){\r\n              //既存曲\r\n              sdb.updateItem(t).then(()=>resolve());\r\n            }else{\r\n              //新曲\r\n              sdb.setItem(t).then(()=>resolve());\r\n            }\r\n          });\r\n        });\r\n      }\r\n      await Promise.all(promiseProducer());\r\n      const scDB = new scoresDB();\r\n      scDB.setNewSongsDBRawData(reducer(res.body));\r\n      await scDB.recalculateBPI();\r\n      localStorage.setItem(\"lastDefFileVer\",res.version);\r\n      this.setState({currentVersion:res.version,disableUpdateBtn:false,message:\"更新完了\"});\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n    end();\r\n    return;\r\n  }\r\n\r\n  render(){\r\n    const {isLoading,disableUpdateBtn,message} = this.state;\r\n    if(isLoading){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>\r\n      );\r\n    }\r\n    return (\r\n      <Subscribe to={[GlobalContainer]}>\r\n        {({state,setLang,setStore}:GlobalContainer)=> (\r\n          <Container className=\"commonLayout\" fixed>\r\n            <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\" gutterBottom>\r\n              <FormattedMessage id=\"Settings.title\"/>\r\n            </Typography>\r\n            <Paper style={{padding:\"15px\"}}>\r\n              <FormControl>\r\n                <InputLabel><FormattedMessage id=\"Settings.language\"/></InputLabel>\r\n                <Select value={state.lang} onChange={(e:React.ChangeEvent<{ value: unknown }>,)=>{\r\n                  if(typeof e.target.value === \"string\"){\r\n                    setLang(e.target.value)\r\n                  }\r\n                }}>\r\n                  <MenuItem value=\"ja\">日本語</MenuItem>\r\n                  <MenuItem value=\"en\">English</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                <FormattedMessage id=\"Settings.noteLang\"/>\r\n              </Typography>\r\n              <Divider style={{margin:\"10px 0\"}}/>\r\n              <FormControl>\r\n                <InputLabel><FormattedMessage id=\"Settings.dataStore\"/></InputLabel>\r\n                <Select value={state.store} onChange={(e:React.ChangeEvent<{ value: unknown }>,)=>{\r\n                  if(typeof e.target.value === \"string\"){\r\n                    setStore(e.target.value)\r\n                  }\r\n                }}>\r\n                  <MenuItem value=\"26\">26 Rootage</MenuItem>\r\n                  <MenuItem value=\"27\">27 HEROIC VERSE</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                <FormattedMessage id=\"Settings.noteMes1\"/>\r\n              </Typography>\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                <FormattedMessage id=\"Settings.inaccurateMes\"/>\r\n              </Typography>\r\n              <Divider style={{margin:\"10px 0\"}}/>\r\n                <FormControl>\r\n                  <Typography variant=\"caption\" display=\"block\" className=\"MuiFormLabel-root MuiInputLabel-animated MuiInputLabel-shrink\">\r\n                    <FormattedMessage id=\"Settings.Update\"/>\r\n                  </Typography>\r\n                  <div style={{position:\"relative\"}}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={this.updateDef}\r\n                      disabled={disableUpdateBtn}\r\n                      startIcon={<UpdateIcon />}>\r\n                      <FormattedMessage id=\"Settings.UpdateResourcePacks\"/>\r\n                    </Button>\r\n                    {disableUpdateBtn && <CircularProgress size={24} style={{color:\"#777\",position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}} />}\r\n                  </div>\r\n                </FormControl>\r\n                <Typography variant=\"caption\" display=\"block\">\r\n                  {message}\r\n                </Typography>\r\n                <Typography variant=\"caption\" display=\"block\">\r\n                  <FormattedMessage id=\"Settings.currentVersion\"/>{this.state.currentVersion}\r\n                </Typography>\r\n                <Typography variant=\"caption\" display=\"block\">\r\n                  <FormattedMessage id=\"Settings.updateWarning\"/>\r\n                </Typography>\r\n            </Paper>\r\n          </Container>\r\n        )}\r\n      </Subscribe>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(Settings);\r\n","import * as React from 'react';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport DetailedSongInformation from \"../../components/songs/detailsScreen\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { scoreData, songData } from '../../../types/data';\r\nimport { diffColor } from \"../songs/common\";\r\n\r\ninterface S {\r\n  isOpen:boolean,\r\n  currentSongData:songData | null,\r\n  currentScoreData:scoreData | null,\r\n}\r\n\r\ninterface P{\r\n  isLoading:boolean,\r\n  full:any[],\r\n  page:number,\r\n  rowsPerPage:number,\r\n  handleChangePage:(newPage:number)=>void,\r\n  handleChangeRowsPerPage:(value:string)=>void,\r\n  changeSort:(value:number)=>void,\r\n  sort:number,\r\n  isDesc:boolean,\r\n}\r\n\r\nexport default class Compare extends React.Component<P,S> {\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state ={\r\n      isOpen:false,\r\n      currentSongData:null,\r\n      currentScoreData:null,\r\n    }\r\n  }\r\n\r\n  handleOpen = async(updateFlag:boolean,row?:any):Promise<void>=> {\r\n    return this.setState({\r\n      isOpen:!this.state.isOpen,\r\n      currentSongData:row ? row[\"songData\"] : null,\r\n      currentScoreData:row ? row[\"scoreData\"] : null\r\n    });\r\n  }\r\n\r\n  cloneState = () => JSON.parse(JSON.stringify(this.state))\r\n\r\n  handleChangePage = (_e:React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage:number):void => this.props.handleChangePage(newPage);\r\n\r\n  handleChangeRowsPerPage = (event:React.ChangeEvent<HTMLInputElement>):void => this.props.handleChangeRowsPerPage(event.target.value);\r\n\r\n  render(){\r\n    const {currentScoreData,currentSongData,isOpen} = this.state;\r\n    const {full,isLoading,page,rowsPerPage,changeSort,sort,isDesc} = this.props;\r\n\r\n    const columns = [\r\n      { id: \"difficultyLevel\", label: \"☆\"},\r\n      { id: \"title\", label: \"曲名\" },\r\n      { id: \"exScore\", label: \"Source\"},\r\n      {\r\n        id: \"compareData\",\r\n        label: \"Compare\",\r\n      }\r\n    ];\r\n    if(isLoading){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>\r\n      );\r\n    }\r\n    return (\r\n    <Paper style={{width:\"100%\",overflowX:\"auto\"}}>\r\n      <div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column,i) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  onClick={()=>changeSort(i)}\r\n                >\r\n                  {column.label}\r\n                  {i === sort &&\r\n                    <span>\r\n                      { isDesc && <span>▼</span> }\r\n                      { !isDesc && <span>▲</span> }\r\n                    </span>\r\n                  }\r\n                  {i !== sort && <span>△</span>}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {full.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:any,i:number) => {\r\n              return (\r\n                <TableRow\r\n                  onClick={()=>this.handleOpen(false,row)}\r\n                  hover role=\"checkbox\" tabIndex={-1} key={row.title} style ={ i % 2? { background : \"#f7f7f7\" }:{ background : \"white\" }}>\r\n                  {columns.map((column,j) => {\r\n                    const prefix = row.difficulty === \"hyper\" ? \"(H)\" : row.difficulty === \"leggendaria\" ? \"(†)\" : \"\";\r\n                    return (\r\n                      <TableCell key={column.id + prefix} style={{backgroundColor : diffColor(j,row.scoreData),position:\"relative\"}}>\r\n                        {row[column.id]}\r\n                        {(j === 3) && <span className=\"plusOverlayScore\">\r\n                          {row.gap}\r\n                          </span>\r\n                        }\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={full.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        labelRowsPerPage=\"\"\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\",\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\",\r\n        }}\r\n        onChangePage={this.handleChangePage}\r\n        onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n      />\r\n      {isOpen &&\r\n        <DetailedSongInformation isOpen={isOpen} song={currentSongData} score={currentScoreData} handleOpen={this.handleOpen}/>\r\n      }\r\n    </Paper>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { scoresDB, songsDB } from '../../components/indexedDB';\r\nimport {_isSingle, _currentStore} from \"../../components/settings\";\r\nimport { scoreData, songData } from '../../types/data';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport CompareTable from \"../components/compare/table\";\r\n\r\ninterface S {\r\n  isLoading:boolean,\r\n  full:any[],\r\n  filtered:any[],\r\n  sort:number,\r\n  isDesc:boolean,\r\n  options:{[key:string]:string[]},\r\n  filterByName:string,\r\n  compareFrom:string,\r\n  compareTo:string,\r\n  page:number,\r\n  rowsPerPage:number,\r\n}\r\n\r\nexport default class Compare extends React.Component<{},S> {\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.state ={\r\n      isLoading:true,\r\n      full:[],\r\n      filtered:[],\r\n      sort:3,\r\n      isDesc:true,\r\n      options:{\r\n        level:[\"11\",\"12\"],\r\n        difficulty:[\"0\",\"1\",\"2\"],\r\n      },\r\n      filterByName:\"\",\r\n      compareFrom:\"27\",\r\n      compareTo:\"26\",\r\n      page:1,\r\n      rowsPerPage:10,\r\n    }\r\n  }\r\n\r\n  async componentDidMount(){\r\n    this.dataHandler();\r\n  }\r\n\r\n  handleLevelChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"level\");\r\n  }\r\n\r\n  handleDiffChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"difficulty\");\r\n  }\r\n\r\n  handleExec = (name:string,checked:boolean,target:string)=>{\r\n    let newState:S = this.state;\r\n    if(checked){\r\n      newState[\"options\"][target].push(name);\r\n    }else{\r\n      newState[\"options\"][target] = newState[\"options\"][target].filter((t:string)=> t !== name);\r\n    }\r\n    this.setState({options:newState[\"options\"]});\r\n    return this.filter();\r\n  }\r\n\r\n  changeSort = (newNum:number):void=>{\r\n    const {sort,isDesc} = this.state;\r\n    if(sort === newNum){\r\n      return this.setState({isDesc:!isDesc});\r\n    }\r\n    this.setState({sort:newNum,isDesc:true});\r\n  }\r\n\r\n  handleCompareFromChange = async (event:React.ChangeEvent<{name?:string|undefined; value:unknown;}>):Promise<void> =>{\r\n    if (typeof event.target.value !== \"string\") { return; }\r\n    let newState = this.cloneState();\r\n    newState.compareFrom = event.target.value;\r\n    this.setState({compareFrom:event.target.value,isLoading:true});\r\n    return this.dataHandler(newState);\r\n  }\r\n\r\n  handleCompareToChange = async (event:React.ChangeEvent<{name?:string|undefined; value:unknown;}>):Promise<void> =>{\r\n    if (typeof event.target.value !== \"string\") { return; }\r\n    let newState = this.cloneState();\r\n    newState.compareTo = event.target.value;\r\n    this.setState({compareTo:event.target.value,isLoading:true});\r\n    return this.dataHandler(newState);\r\n  }\r\n\r\n  filter = ():any[]=>{\r\n    const {options,full} = this.state;\r\n    const diffs:string[] = [\"hyper\",\"another\",\"leggendaria\"];\r\n    return full.filter((data)=>\r\n        options[\"level\"].some((item:string)=>item === data.difficultyLevel) &&\r\n        options[\"difficulty\"].some((item:string)=>diffs[Number(item)] === data.difficulty )\r\n    )\r\n  }\r\n\r\n  async dataHandler(newState:any = this.state):Promise<void>{\r\n    let result:any[] = [];\r\n    const f = newState.compareFrom;\r\n    const t = newState.compareTo;\r\n    const isSingle = _isSingle();\r\n    const scores = new scoresDB(isSingle,f);\r\n    const sdb = new songsDB();\r\n    const fData = await scores.getSpecificVersionAll();\r\n    for(let i =0; i < fData.length; ++i){\r\n      let tScore = 0;\r\n      const tData = await scores.getItem(fData[i][\"title\"],fData[i][\"difficulty\"],t,isSingle);\r\n      const songData = await sdb.getOneItemIsSingle(fData[i][\"title\"],fData[i][\"difficulty\"]);\r\n      if(!tData || tData.length === 0){\r\n        tScore = 0;\r\n      }else{\r\n        tScore = tData[0][\"exScore\"];\r\n      }\r\n      result.push({\r\n        title:fData[i][\"title\"],\r\n        songData: songData[0],\r\n        scoreData: fData[i],\r\n        difficulty:fData[i][\"difficulty\"],\r\n        difficultyLevel:fData[i][\"difficultyLevel\"],\r\n        exScore:fData[i][\"exScore\"],\r\n        compareData:tScore,\r\n        gap:fData[i][\"exScore\"] - tScore\r\n      });\r\n    }\r\n    return this.setState({full:result,isLoading:false});\r\n  }\r\n\r\n  sortedData = ():any[]=>{\r\n    const {isDesc,sort} = this.state;\r\n    const sortedData:any[] = this.filter().sort((a,b)=>{\r\n      switch(sort){\r\n        case 0:\r\n        return Number(b.difficultyLevel) - Number(a.difficultyLevel);\r\n        case 1:\r\n        return b.title.localeCompare(a.title, \"ja\", {numeric:true});\r\n        default:\r\n        case 2:\r\n          return b.exScore - a.exScore;\r\n        case 3:\r\n          return b.gap - a.gap;\r\n      }\r\n    });\r\n    console.log(sortedData);\r\n    return isDesc ? sortedData.reverse() : sortedData;\r\n  }\r\n\r\n  cloneState = () => JSON.parse(JSON.stringify(this.state))\r\n\r\n  handleChangePage = (newPage:number):void => this.setState({page:newPage});\r\n\r\n  handleChangeRowsPerPage = (value:string):void => this.setState({page:0,rowsPerPage:+value});\r\n\r\n  render(){\r\n    const {full,compareFrom,compareTo,isLoading,page,rowsPerPage,options,sort,isDesc} = this.state;\r\n    if(!this.state.full){\r\n      return (null);\r\n    }\r\n    return (\r\n      <Container className=\"commonLayout\" fixed>\r\n        <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\" gutterBottom>\r\n          <FormattedMessage id=\"Compare.Title\"/>\r\n        </Typography>\r\n        <Grid container spacing={1} style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={6}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n              <InputLabel><FormattedMessage id=\"Compare.From\"/></InputLabel>\r\n              <Select value={compareFrom} onChange={this.handleCompareFromChange}>\r\n                <MenuItem value={\"26\"}>26 Rootage</MenuItem>\r\n                <MenuItem value={\"27\"}>27 HEROIC VERSE</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n              <InputLabel><FormattedMessage id=\"Compare.To\"/></InputLabel>\r\n              <Select value={compareTo} onChange={this.handleCompareToChange}>\r\n                <MenuItem value={\"26\"}>26 Rootage</MenuItem>\r\n                <MenuItem value={\"27\"}>27 HEROIC VERSE</MenuItem>\r\n                <MenuItem value={\"WR\"}>WORLD RECORD</MenuItem>\r\n                <MenuItem value={\"AVERAGE\"}>AVERAGE</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} id=\"mainFilters\" style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByLevel\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"11\")} onChange={this.handleLevelChange(\"11\")} value=\"11\" />}\r\n                  label=\"☆11\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"12\")} onChange={this.handleLevelChange(\"12\")} value=\"12\" />}\r\n                  label=\"☆12\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByDifficulty\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"0\")} onChange={this.handleDiffChange(\"0\")} value=\"hyper\" />}\r\n                  label=\"H\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"1\")} onChange={this.handleDiffChange(\"1\")} value=\"another\" />}\r\n                  label=\"A\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"2\")} onChange={this.handleDiffChange(\"2\")} value=\"leggendaria\" />}\r\n                  label=\"†\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <CompareTable full={this.sortedData()} isLoading={isLoading} page={page} rowsPerPage={rowsPerPage} sort={sort} isDesc={isDesc}\r\n        changeSort={this.changeSort}\r\n        handleChangeRowsPerPage={this.handleChangeRowsPerPage} handleChangePage={this.handleChangePage}/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","const ja = {\r\n  \"Top.Title\": \"BPIManager\",\r\n  \"GlobalNav.Home\": \"ホーム\",\r\n  \"GlobalNav.Data\": \"データ\",\r\n  \"GlobalNav.FavoriteSongs\": \"お気に入り楽曲\",\r\n  \"GlobalNav.SongList\": \"楽曲一覧\",\r\n  \"GlobalNav.unregisteredSongs\": \"未プレイ楽曲\",\r\n  \"GlobalNav.Statistics\": \"統計\",\r\n  \"GlobalNav.compare\": \"スコア比較\",\r\n  \"GlobalNav.Settings\": \"設定\",\r\n  \"Index.heroText\": \"Web上でbeatmania IIDXのスコアを管理し、BPIとして可視化できます。\",\r\n  \"Index.importButton\" : \"使ってみる\",\r\n  \"Index.notes1\" : \"beatmaniaは株式会社コナミデジタルエンタテインメントの登録商標です。\",\r\n  \"Index.notes2\" : \"本ツールはnorimiso様考案のBPIおよびZUBU様制作のBPICLのそれぞれにインスパイアされて制作されました。\",\r\n  \"Data.add\" : \"スコアのインポート\",\r\n  \"Data.infoBulk\" : \"e-AMUSEMENTプレミアムコースに加入済みの場合、CSVデータを取り込むことで全ての曲データを一括でインポートできます。\",\r\n  \"Data.howToBulk1\" : \"まず\",\r\n  \"Data.CSVURL\" : \"こちら\",\r\n  \"Data.howToBulk2\" : \"にアクセスし、案内に従って表示されたCSVデータ（テキスト形式）を下のボックスにコピーしてください。\",\r\n  \"Data.Execute\": \"取り込み実行\",\r\n  \"Data.notPremium1\": \"プレミアムコースに加入していない場合、現段階では個別に曲データを入力する必要があります。\",\r\n  \"Data.Success\":\"インポートに成功しました。\",\r\n  \"Data.Failed\":\"インポートに失敗しました。\",\r\n  \"Data.edit\" : \"スコアの手動入力\",\r\n  \"Data.howToEdit\" : \"各楽曲の詳細表示画面でスコアを編集することができます。以下が手順です:\",\r\n  \"Data.howToEdit1\" : \"メニューから「未プレイ楽曲」ページへ移動し、曲検索フォームにスコアを更新したい楽曲の名前を入力してください。\",\r\n  \"Data.howToEdit2\" : \"検索結果が表示されますので、目的の楽曲名をクリックしてください。\",\r\n  \"Data.howToEdit3\" : \"楽曲詳細画面が表示されますので、更新後のスコアを入力し、保存ボタンをクリックしてください。\",\r\n  \"Data.howToEdit4\" : \"That's all!\",\r\n  \"Songs.title\":\"楽曲データ\",\r\n  \"Songs.filterByLevel\":\"レベル\",\r\n  \"Songs.filterByDifficulty\":\"難易度\",\r\n  \"Songs.detailedFilter\":\"詳細条件\",\r\n  \"Songs.filterByName\":\"曲名で絞り込み\",\r\n  \"Songs.filterByFavorite\":\"お気に入り曲\",\r\n  \"Songs.mode\":\"モード選択\",\r\n  \"Songs.mode0\":\"BPI詰め\",\r\n  \"Songs.mode1\":\"A狙い\",\r\n  \"Songs.mode2\":\"AA狙い\",\r\n  \"Songs.mode3\":\"AAA狙い\",\r\n  \"Songs.mode4\":\"MAX狙い\",\r\n  \"Songs.mode5\":\"HARD CLEAR狙い\",\r\n  \"Songs.mode6\":\"EX-HARD CLEAR狙い\",\r\n  \"Songs.mode7\":\"FULLCOMBO狙い\",\r\n  \"Songs.legend\":\"凡例および使用方法を確認する場合は、ここをクリックしてヘルプを表示してください\",\r\n  \"Songs.updatedToday\":\"本日更新分のみ表示\",\r\n  \"Details.SaveButton\":\"保存\",\r\n  \"Details.typeNewScore\":\"あなたの自己ベスト\",\r\n  \"Details.FavButton\":\"お気に入り\",\r\n  \"Details.FavButtonRemove\":\"お気に入り解除\",\r\n  \"Details.FavButtonRemoved\":\"お気に入りから削除しました。\",\r\n  \"Details.FavButtonAdded\":\"お気に入り登録しました。\",\r\n  \"Details.Graph\":\"グラフ\",\r\n  \"Details.Details\":\"詳細\",\r\n  \"Details.Diffs\":\"差分\",\r\n  \"Details.ErrorIIDXInfo\":\"IIDXInfoは☆12楽曲でのみ利用できます。\",\r\n  \"Common.Tweet\":\"ツイート\",\r\n  \"SongDetail.SongDetailHead\":\"楽曲\",\r\n  \"SongDetail.Notes\":\"ノート数\",\r\n  \"SongDetail.WorldRecord\":\"全一\",\r\n  \"SongDetail.Average\":\"皆伝平均\",\r\n  \"SongDetail.You\":\"あなた\",\r\n  \"SongDetail.Version\":\"バージョン\",\r\n  \"SongDetail.ScoreDetailHead\":\"プレイ状態\",\r\n  \"SongDetail.ClearState\":\"ランプ\",\r\n  \"SongDetail.MissCount\":\"ミスカウント\",\r\n  \"SongDetail.LastPlayed\":\"最終プレイ\",\r\n  \"SongDetail.ScoreDetails\":\"詳細\",\r\n  \"SongDiffs.Target\":\"データセット\",\r\n  \"SongDiffs.WithinSameVersion\":\"同一バージョン内\",\r\n  \"SongDiffs.EachVersion\":\"バージョン間\",\r\n  \"Favorites.Title\":\"お気に入り\",\r\n  \"NotPlayed.Title\":\"未プレイ楽曲\",\r\n  \"Stats.title\":\"統計データ\",\r\n  \"Stats.TotalBPI\":\"総合BPI\",\r\n  \"Stats.EachDay\":\"日別更新数/平均BPI\",\r\n  \"Stats.UpdatedSongs\":\"更新した楽曲\",\r\n  \"Stats.UpdatedSum\":\"更新件数\",\r\n  \"Stats.Average\":\"平均BPI\",\r\n  \"Stats.LethalWeapon\":\"武器曲\",\r\n  \"Stats.PossibleToGetBetter\":\"伸びそうな曲\",\r\n  \"Compare.Title\":\"データ比較\",\r\n  \"Compare.From\":\"比較元\",\r\n  \"Compare.To\":\"比較先\",\r\n  \"Settings.title\":\"設定\",\r\n  \"Settings.language\":\"言語\",\r\n  \"Settings.dataStore\":\"バージョン\",\r\n  \"Settings.delete\":\"データのリセット\",\r\n  \"Settings.noteLang\":\"UIに用いる言語を選択してください。\",\r\n  \"Settings.noteMes1\":\"過去作スコアを登録することで、最新作とのデータ比較が可能です。\",\r\n  \"Settings.inaccurateMes\":\"過去作のスコアも今現在の最新全1,平均スコアでBPIが計算されます。参考程度にしてください。\",\r\n  \"Settings.Update\":\"更新\",\r\n  \"Settings.UpdateResourcePacks\":\"定義データの更新\",\r\n  \"Settings.currentVersion\":\"現在の定義バージョン:\",\r\n  \"Settings.updateWarning\":\"更新には時間がかかる場合があります。\",\r\n};\r\n\r\nexport default ja;\r\n","const ja = {\r\n  \"Top.Title\": \"BPIManager\",\r\n  \"GlobalNav.Home\": \"Home\",\r\n  \"GlobalNav.Data\": \"Data\",\r\n  \"GlobalNav.FavoriteSongs\": \"Favorite Songs\",\r\n  \"GlobalNav.SongList\": \"Songs\",\r\n  \"GlobalNav.unregisteredSongs\": \"Not played yet\",\r\n  \"GlobalNav.Statistics\": \"Statistics\",\r\n  \"GlobalNav.compare\": \"Compare\",\r\n  \"GlobalNav.Settings\": \"Settings\",\r\n  \"Index.heroText\": \"Easily manage your scores of beatmania IIDX and visualize as BPI, in Web.\",\r\n  \"Index.importButton\" : \"Try it out!\",\r\n  \"Index.notes1\" : \"beatmania is the trademark registered by Konami Degital Entertainment Co., Ltd.\",\r\n  \"Index.notes2\" : \"This tool was affected by both of BPI which was invented by norimiso and BPICL which was released by ZUBU.\",\r\n  \"Data.add\" : \"Import score data\",\r\n  \"Data.infoBulk\" : \"If you've been subscribed to e-AMUSEMENT Premium Course, you can import all your scores in bulk by importing CSV from official IIDX website.\",\r\n  \"Data.howToBulk1\" : \"Just access \",\r\n  \"Data.CSVURL\" : \"HERE\",\r\n  \"Data.howToBulk2\" : \", copy displayed text and then paste it to form shown below.\",\r\n  \"Data.Execute\": \"Import\",\r\n  \"Data.notPremium1\": \"If you cannot use the way above, so please fill each songs in individually.\",\r\n  \"Data.Success\":\"Successfully imported.\",\r\n  \"Data.Failed\":\"Failed to import scores.\",\r\n  \"Data.edit\" : \"Edit scores on your own\",\r\n  \"Data.howToEdit\" : \"You can edit the score of each songs by detailed song information screen.\",\r\n  \"Data.howToEdit1\" : \"Access to \\\"songs not done yet\\\" page and search by the song name you want to edit.\",\r\n  \"Data.howToEdit2\" : \"Search results will be shown, then click the name of the song.\",\r\n  \"Data.howToEdit3\" : \"You can see detailed song information screen. Type your score and press save button.\",\r\n  \"Data.howToEdit4\" : \"That's all!\",\r\n  \"Songs.title\":\"Songs\",\r\n  \"Songs.filterByLevel\":\"Level\",\r\n  \"Songs.filterByDifficulty\":\"Difficulty\",\r\n  \"Songs.detailedFilter\":\"Configure\",\r\n  \"Songs.filterByName\":\"Filter by song title\",\r\n  \"Songs.filterByFavorite\":\"Favorited\",\r\n  \"Songs.mode\":\"Aiming for...\",\r\n  \"Songs.mode0\":\"Higher BPI\",\r\n  \"Songs.mode1\":\"new A\",\r\n  \"Songs.mode2\":\"new AA\",\r\n  \"Songs.mode3\":\"new AAA\",\r\n  \"Songs.mode4\":\"new MAX\",\r\n  \"Songs.mode5\":\"new HARD CLEAR\",\r\n  \"Songs.mode6\":\"new EX-HARD CLEAR\",\r\n  \"Songs.mode7\":\"new FULLCOMBO\",\r\n  \"Songs.legend\":\"To see legends and usage, click here and go to help\",\r\n  \"Songs.updatedToday\":\"Only displays the scores updated today\",\r\n  \"Details.SaveButton\":\"Save\",\r\n  \"Details.typeNewScore\":\"My Record\",\r\n  \"Details.FavButton\":\"Favorite\",\r\n  \"Details.FavButtonRemove\":\"Delete favorite\",\r\n  \"Details.FavButtonRemoved\":\"Successfully deleted.\",\r\n  \"Details.FavButtonAdded\":\"Successfully added.\",\r\n  \"Details.Graph\":\"Graph\",\r\n  \"Details.Details\":\"Details\",\r\n  \"Details.Diffs\":\"Diffs\",\r\n  \"Details.ErrorIIDXInfo\":\"IIDXInfo is only available for level-12.\",\r\n  \"Common.Tweet\":\"Tweet\",\r\n  \"SongDetail.SongDetailHead\":\"Song\",\r\n  \"SongDetail.Notes\":\"Notes\",\r\n  \"SongDetail.WorldRecord\":\"World Record\",\r\n  \"SongDetail.Average\":\"Average\",\r\n  \"SongDetail.You\":\"You\",\r\n  \"SongDetail.Version\":\"Version\",\r\n  \"SongDetail.ScoreDetailHead\":\"Play Status\",\r\n  \"SongDiffs.Target\":\"Datasets\",\r\n  \"SongDiffs.WithinSameVersion\":\"Within the same version\",\r\n  \"SongDiffs.EachVersion\":\"Across versions\",\r\n  \"SongDetail.ClearState\":\"Clear State\",\r\n  \"SongDetail.MissCount\":\"Miss Count\",\r\n  \"SongDetail.LastPlayed\":\"Last Played\",\r\n  \"SongDetail.ScoreDetails\":\"Detail\",\r\n  \"Favorites.Title\":\"Favorites\",\r\n  \"NotPlayed.Title\":\"Not Played yet\",\r\n  \"Stats.title\":\"Statistics\",\r\n  \"Stats.TotalBPI\":\"Total BPI\",\r\n  \"Stats.EachDay\":\"Total and BPI per day\",\r\n  \"Stats.UpdatedSongs\":\"New records\",\r\n  \"Stats.UpdatedSum\":\"The total of updated songs\",\r\n  \"Stats.Average\":\"Average BPI\",\r\n  \"Stats.PossibleToGetBetter\":\"Songs Possible to Get better\",\r\n  \"Compare.Title\":\"Compare\",\r\n  \"Compare.From\":\"Data source\",\r\n  \"Compare.To\":\"Compare with\",\r\n  \"Settings.title\":\"Settings\",\r\n  \"Settings.language\":\"Language\",\r\n  \"Settings.dataStore\":\"Version\",\r\n  \"Settings.delete\":\"Delete all data\",\r\n  \"Settings.noteLang\":\"Select language you want to use. Please contribute to improve the quality of translation.(contact @notAesthet1c)\",\r\n  \"Settings.noteMes1\":\"Registering scores in older IIDX makes you able to compare scores across versions.\",\r\n  \"Settings.inaccurateMes\":\"Please note that since BPI in older IIDX versions will also be calculated with the latest WR and average scores so they would be rather inaccurate than them at the time.\",\r\n  \"Settings.Update\":\"Update\",\r\n  \"Settings.UpdateResourcePacks\":\"Update definition file\",\r\n  \"Settings.currentVersion\":\"Current version of the definition data:\",\r\n  \"Settings.updateWarning\":\"This process may take a few minutes.\",\r\n};\r\n\r\nexport default ja;\r\n","import * as React from 'react';\r\nimport AppBar from \"../view/components/header/appBar\";\r\nimport { IntlProvider } from 'react-intl'\r\nimport Index from \"../view/pages\";\r\nimport Data from \"../view/pages/data\";\r\nimport Songs from \"../view/pages/songs\";\r\nimport Favorite from \"../view/pages/favorites\";\r\nimport NotPlayed from \"../view/pages/notPlayed\";\r\nimport Stats from \"../view/pages/stats\";\r\nimport Settings from \"../view/pages/settings\";\r\nimport Compare from \"../view/pages/compare\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\n\r\n//locale data\r\n\r\nimport ja  from \"../i18n/ja\";\r\nimport en from \"../i18n/en\";\r\nimport GlobalContainer from '../components/context/global';\r\nimport { Subscribe, Provider } from 'unstated';\r\n\r\n//\r\nexport default class Router extends React.Component<{},{}> {\r\n\r\n  render(){\r\n    return (\r\n      <Provider>\r\n        <Subscribe to={[GlobalContainer]}>\r\n          {global =>{\r\n            return (<IntlProvider\r\n              locale={global.state.lang}\r\n              messages={global.state.lang === \"ja\" ? ja : en}\r\n            >\r\n              <BrowserRouter>\r\n                <AppBar global={global}/>\r\n                <Route path=\"/\" exact component={Index}/>\r\n                <Route path=\"/data\" exact render={_props=><Data global={global}/>}/>\r\n                <Route path=\"/songs\" exact component={Songs}/>\r\n                <Route path=\"/favorite\" exact component={Favorite}/>\r\n                <Route path=\"/notPlayed\" exact component={NotPlayed}/>\r\n                <Route path=\"/stats\" exact component={Stats}/>\r\n                <Route path=\"/compare\" exact component={Compare}/>\r\n                <Route path=\"/settings\" exact render={_props=><Settings global={global}/>}/>\r\n              </BrowserRouter>\r\n            </IntlProvider>\r\n          )}}\r\n        </Subscribe>\r\n      </Provider>\r\n    );\r\n  }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport timeFormatter from \"../common/timeFormatter\";\r\nimport storageWrapper,{songsDB} from \"../indexedDB\";\r\n\r\nexport default class Initialize extends React.Component<{},{show:boolean}>{\r\n  storage:any;\r\n  songsDB:any;\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.storage = new storageWrapper();\r\n    this.songsDB = new songsDB();\r\n    this.state = {\r\n      show : true,\r\n    }\r\n  }\r\n\r\n  wait = (msec:number = 10)=> {\r\n    return new Promise(resolve=>{\r\n      setTimeout(resolve, msec)\r\n    });\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try{\r\n      const songsAvailable:string[] = await this.songsDB.getAll();\r\n      if(songsAvailable.length > 0){\r\n        return this.setState({show:false});\r\n      }\r\n      const now = timeFormatter(0);\r\n      const csv = await fetch(\"https://files.poyashi.me/json/songs.json\").then(t=>t.json());;\r\n      for(let i=0;i < csv.body.length;++i){\r\n        await this.songsDB.setItem(Object.assign(csv[\"body\"][i],{\r\n          isFavorited:false,\r\n          isCreated:false,\r\n          updatedAt:now,\r\n        }));\r\n        this.wait(3);\r\n      }\r\n      localStorage.setItem(\"isSingle\",\"true\");\r\n      localStorage.setItem(\"lastDefFileVer\",csv.version);\r\n      return this.setState({show:false});\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(!this.state.show){\r\n      return (null);\r\n    }\r\n    return (\r\n      <div id=\"overlayLayout\">\r\n        <div>\r\n          <CircularProgress/>\r\n        </div>\r\n        <div>\r\n          <p>Loading essential components...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      50: '#dedede',\r\n      100: '#808080',\r\n      200: '#5e5e5e',\r\n      300: '#4b4b4b',\r\n      400: '#434343',\r\n      500: '#3a3a3a',\r\n      600: '#2d2d2d',\r\n      700: '#272727',\r\n      800: '#1c1c1c',\r\n      900: '#111111',\r\n      A100: '#cecece',\r\n      A200: '#949494',\r\n      A400: '#6f6f6f',\r\n      A700: '#4c4c4c',\r\n    },\r\n    secondary: {\r\n      50: '#d0e0e3',\r\n      100: '#a2c4c9',\r\n      200: '#76a5af',\r\n      300: '#648c95',\r\n      400: '#45818e',\r\n      500: '#396872',\r\n      600: '#2a5059',\r\n      700: '#23434a',\r\n      800: '#1f353a',\r\n      900: '#0c343d',\r\n      A100: '#a2c4c9',\r\n      A200: '#76a5af',\r\n      A400: '#45818e',\r\n      A700: '#205966',\r\n    },\r\n  },\r\n\r\n  'breakpoints': {\r\n    'keys': [\r\n      'xs',\r\n      'sm',\r\n      'md',\r\n      'lg',\r\n      'xl',\r\n    ],\r\n    'values': {\r\n      'xs': 360,\r\n      'sm': 768,\r\n      'md': 992,\r\n      'lg': 1400,\r\n      'xl': 1800,\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: 'none',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import * as React from 'react';\r\nimport \"./styles/App.css\";\r\nimport Router from \"./route\";\r\nimport Initialize from \"./components/initialize\";\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport defaultTheme from './themes/dark';\r\n\r\nexport default function App() {\r\n\r\n  document.title = \"BPI Manager\";\r\n  return (\r\n    <ThemeProvider theme={defaultTheme}>\r\n      <CssBaseline />\r\n      <Initialize/>\r\n      <Router/>\r\n    </ThemeProvider>\r\n  );\r\n\r\n}\r\n"],"sourceRoot":""}