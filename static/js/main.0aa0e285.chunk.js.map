{"version":3,"sources":["view/components/snackBar/index.tsx","view/components/header/appBar.tsx","view/pages/index.tsx","components/common/timeFormatter.tsx","components/settings/index.tsx","components/songs/filter.tsx","components/bpi/index.tsx","components/indexedDB/index.tsx","components/csv/import.tsx","view/pages/data.tsx","view/components/songs/bpiChart.tsx","view/components/songs/songDetails.tsx","view/components/songs/songDiffs.tsx","view/components/songs/common/tabPanel.tsx","view/components/songs/detailsScreen.tsx","view/components/songs/common/index.tsx","view/components/songs/played/tablePlayed.tsx","view/components/songs/played/songsList.tsx","view/pages/songs.tsx","view/pages/favorites.tsx","view/components/songs/notplayed/tableNotPlayed.tsx","view/components/songs/notplayed/notPlayList.tsx","view/pages/notPlayed.tsx","view/pages/stats.tsx","components/context/global.tsx","config/index.tsx","view/pages/settings.tsx","view/components/compare/table.tsx","view/pages/compare.tsx","view/pages/help.tsx","i18n/ja.js","i18n/en.js","route/index.tsx","components/initialize/index.tsx","themes/dark.tsx","themes/light.tsx","view/components/update.tsx","serviceWorker.js","index.tsx","App.tsx"],"names":["variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","styles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","SnackBarWrapper","props","classes","className","onClose","variant","other","Icon","SnackbarContent","clsx","aria-describedby","id","action","Button","onClick","color","size","key","ShowSnackBar","open","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","handleClose","HideOnScroll","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","RLink","React","forwardRef","ref","innerRef","GlobalHeader","toggleNav","setState","isOpen","state","toggleErrorSnack","errorSnack","this","Fragment","AppBar","Toolbar","IconButton","edge","aria-label","global","cannotMove","Typography","Drawer","List","style","width","Link","component","to","underline","ListItem","button","ListItemIcon","ListItemText","Divider","Component","require","LineShareButton","LineIcon","TwitterShareButton","TwitterIcon","Index","Container","fixed","align","gutterBottom","paragraph","Grid","container","justify","item","textDecoration","marginTop","xs","url","round","title","href","timeFormatter","type","date","Date","m","moment","format","_isSingle","localStorage","getItem","_currentStore","_lang","_currentVersion","_goalBPI","Number","_goalPercentage","_currentTheme","_chartColor","lampCSVArray","convertClearState","original","indexOf","_prefix","diff","_prefixFromNum","difficulty","prefix","difficultyDiscriminator","getSongSuffixForIIDXInfo","name","convertLeggendariaStates","newName","newDifficulty","replace","bpiCalcuator","alreadyHaveData","isSingle","songsDB","propData","s","k","z","pgf","j","avg","wr","_allTwelvesLength","_allTwelvesBPI","data","exScore","exec","songTitle","getOneItemIsSingle","getOneItemIsDouble","Error","bpi","difficultyLevel","NaN","reason","res","_s","_k","_s_","_z_","Math","pow","log","max","ceiled","i","N","E","ceil","sum","playedSongs","length","log2","abs","val","storageWrapper","scores","songs","stores","calculator","newSongs","version","scoreHistory","table","reduced","t","setPropData","Dexie","scoresDB","storedAt","where","toArray","currentData","console","clear","equals","filter","map","currentBPI","delete","isImported","modify","Pgreat","great","missCount","clearState","lastPlayed","lastScore","updatedAt","put","e","score","newScoreData","add","Object","assign","self","toCollection","value","a","calc","scoreHistoryDB","currentStore","forceUpdateTime","BPI","then","sort","b","willUpdate","song","reduce","result","current","push","all","keys","reverse","willCollection","notEqual","matched","getAll","and","isFavorited","diffs","notes","bpm","textage","dpLevel","isCreated","newState","importCSV","raw","rawData","resultHistory","mode","Promise","resolve","reject","splittedByBreak","split","lengthSum","eachObjNum","p","onChangeText","isSnackbarOpen","stateText","errors","isSaving","currentState","progress","execute","bind","setMove","executor","bpiCalculator","getResult","getResultHistory","h","len","calcData","body","setItem","putItem","ContentProps","rel","TextField","onChange","label","margin","multiline","rowsMax","position","disabled","CircularProgress","top","left","marginLeft","BPIChart","chartColor","chartData","graphLastUpdated","height","strokeDasharray","stroke","dataKey","domain","ticks","contentStyle","isAnimationActive","fill","y","isFront","SongDetails","Paper","Table","TableHead","TableRow","TableCell","minWidth","maxWidth","TableBody","floor","isNaN","SongDiffs","handleChange","event","isLoading","updateScoreData","dataset","getWithinVersion","getAcrossVersion","FormControl","InputLabel","shrink","Select","displayEmpty","MenuItem","justifyContent","scoreTable","DiffsTable","columns","column","row","hover","role","tabIndex","TabPanel","index","DetailedSongInformation","unlisten","makeGraph","newScore","lastExScore","dataInserter","setData","bpiBasis","mybest","exScoreFromBPI","calcFromBPI","String","handleScoreInput","errorSnackMessage","newBPI","getTime","handleTabChange","_e","newValue","currentTab","toggleMenu","anchorEl","currentTarget","jumpWeb","formatMessage","intl","toggleFavorited","favorited","db","toggleFavorite","toggleSuccessSnack","successSnack","calcRank","rank","saveAndClose","willDelete","scoreHist","updateScore","handleOpen","showRank","isBody","percentage","isError","showCharts","history","listen","_newLocation","go","detectStarIconColor","Dialog","fullScreen","overflowX","flexGrow","flexDirection","noValidate","autoComplete","Tooltip","aria-haspopup","keepMounted","Boolean","Tabs","indicatorColor","textColor","Tab","withRouter","injectIntl","diffColor","SongsTable","updateFlag","_willDeleteItems","currentSongData","allSongsData","currentScoreData","handleChangeRowsPerPage","handleChangePage","rowsPerPage","page","changeSort","isDesc","slice","bp","behindScore","TablePagination","rowsPerPageOptions","count","labelRowsPerPage","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","SongsList","newPage","handleLevelChange","handleExec","checked","handleDiffChange","scoreData","songFilter","options","handleInputChange","cloneState","filterByName","r","range","f","evaluateRange","week","evaluateMode","full","some","toLowerCase","newNum","sortedData","localeCompare","numeric","Infinity","aMax","bMax","handleModeChange","handleRangeCange","JSON","parse","stringify","level","allSongs","allSongsRawData","prevProps","equal","htmlFor","Input","placeholder","endAdornment","InputAdornment","FormLabel","FormGroup","FormControlLabel","control","Checkbox","Songs","getAllFavoritedItems","d","willDeleteItems","NotPlayList","_mounted","_event","songData","whenUpdated","willDeleteItem","NotPlayed","Stats","groupByBPI","array","groups","_","totalBPI","perDate","groupedByBPI","getAllTwelvesBPI","allSongsTwelvesBPI","allSongsElevensBPI","allTwelvesBPI","getAllTwelvesLength","allTwelvesLength","allDiffs","eachDaySum","c","bpis","twelvesBPIGrouped","elevensBPIGrouped","obj","md","lg","padding","right","bottom","orientation","tickLine","axisLine","activeDot","GlobalContainer","lang","store","goalBPI","goalPercentage","setLang","setStore","setTheme","setIsSingle","setGoalBPI","setGoalPercentage","newLang","newStore","newTheme","config","versionNumber","Settings","deleteDef","disableDeleteBtn","message2","sdb","shdb","sodb","currentResetStore","deleteAll","resetItems","reset","toggleDialog","isDialogOpen","updateDef","end","disableUpdateBtn","schDB","reducer","getAllWithAllPlayModes","fetch","json","requireVersion","currentVersion","promiseProducer","pfx","updateItem","scDB","setNewSongsDBRawData","recalculateBPI","Switch","InputLabelProps","startIcon","background","close","AlertDialog","handleOk","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","Compare","gap","handlePMChange","handleCompareFromChange","compareFrom","dataHandler","handleCompareToChange","compareTo","pm","filtered","getSpecificVersionAll","fData","goalPerc","tScore","tData","compareData","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","ja","Router","locale","messages","en","path","exact","render","_props","Favorite","Help","Initialize","storage","wait","msec","setTimeout","show","errorMessage","now","csv","createMuiTheme","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","secondary","overrides","MuiButton","root","textTransform","ReloadModal","onUpdate","location","reload","addEventListener","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","Event","dispatchEvent","onSuccess","catch","ReactDOM","document","ThemeProvider","Dark","Light","CssBaseline","getElementById","URL","process","origin","response","contentType","headers","get","status","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0aa0e285.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles = makeStyles((theme: Theme) => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nexport interface Props {\r\n  className?: string;\r\n  message?: string;\r\n  onClose?: () => void;\r\n  variant: keyof typeof variantIcon;\r\n  autoHideDuration?:number\r\n  open?:boolean,\r\n  handleClose?:()=>void\r\n}\r\n\r\nfunction SnackBarWrapper(props: Props) {\r\n  const classes = styles();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <Button onClick={onClose} color=\"inherit\" size=\"small\" key=\"ok\">\r\n          Ok\r\n        </Button>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function ShowSnackBar(props:Props) {\r\n  if(!props.open){\r\n    return (null);\r\n  }\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={props.open}\r\n        autoHideDuration={props.autoHideDuration ? props.autoHideDuration : 2000}\r\n        onClose={props.handleClose}\r\n      >\r\n        <SnackBarWrapper\r\n          onClose={props.handleClose}\r\n          variant={props.variant}\r\n          message={props.message}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link as RouterLink, LinkProps as RouterLinkProps } from \"react-router-dom\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport FilterNoneIcon from '@material-ui/icons/FilterNone';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\n\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport ShowSnackBar from \"../snackBar\";\r\n\r\nfunction HideOnScroll(props:HideOnScrollProps) {\r\n  const { children, window } = props;\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\ninterface HideOnScrollProps {\r\n  children?: React.ReactElement,\r\n  window?: () => Window,\r\n};\r\n\r\nconst RLink = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\r\n  <RouterLink innerRef={ref} {...props} />\r\n));\r\n\r\nclass GlobalHeader extends React.Component<{global:any} & HideOnScrollProps,{isOpen:boolean,errorSnack:boolean}>{\r\n\r\n  constructor(props:{global:any} & HideOnScrollProps){\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      errorSnack:false\r\n    }\r\n  }\r\n\r\n  toggleNav = ()=> this.setState({isOpen:!this.state.isOpen});\r\n  toggleErrorSnack = ()=> this.setState({errorSnack:!this.state.errorSnack});\r\n\r\n  render(){\r\n    const {isOpen} = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <HideOnScroll {...this.props}>\r\n          <AppBar>\r\n            <Toolbar>\r\n              <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={()=>{\r\n                if(!this.props.global.state.cannotMove){\r\n                  return this.toggleNav();\r\n                }else{\r\n                  return this.toggleErrorSnack();\r\n                }\r\n              }}>\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\">\r\n                <FormattedMessage id=\"Top.Title\"/>\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </HideOnScroll>\r\n        <Toolbar />\r\n        <Drawer open={isOpen} onClose={this.toggleNav}>\r\n          <List style={{width:\"230px\"}}>\r\n            <Link component={RLink} to=\"/\" underline=\"none\" color=\"textPrimary\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><HomeIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.Home\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link component={RLink} to=\"/data\" underline=\"none\" color=\"textPrimary\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><StorageIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.Data\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link component={RLink} to=\"/favorite\" underline=\"none\" color=\"textPrimary\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><StarIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.FavoriteSongs\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link component={RLink} to=\"/songs\" underline=\"none\" color=\"textPrimary\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><LibraryMusicIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.SongList\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link component={RLink} to=\"/notPlayed\" underline=\"none\" color=\"textPrimary\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><BorderColorIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.unregisteredSongs\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link component={RLink} to=\"/compare\" underline=\"none\" color=\"textPrimary\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><FilterNoneIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.compare\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link component={RLink} to=\"/stats\" underline=\"none\" color=\"textPrimary\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><TrendingUpIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.Statistics\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link component={RLink} to=\"/settings\" underline=\"none\" color=\"textPrimary\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><SettingsIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.Settings\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n            <Link component={RLink} to=\"/help\" underline=\"none\" color=\"textPrimary\" onClick={this.toggleNav}>\r\n              <ListItem button>\r\n                <ListItemIcon><HelpIcon /></ListItemIcon>\r\n                <ListItemText primary={<FormattedMessage id=\"GlobalNav.Help\"/>} />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n          <Divider />\r\n        </Drawer>\r\n        <ShowSnackBar message={\"実行中の処理があるため続行できません\"} variant=\"warning\"\r\n            handleClose={this.toggleErrorSnack} open={this.state.errorSnack} autoHideDuration={3000}/>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default GlobalHeader;\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { Link } from 'react-router-dom';\r\nimport {Link as RefLink} from '@material-ui/core/';\r\nconst {LineShareButton,LineIcon,TwitterShareButton,TwitterIcon} = require('react-share');\r\n\r\nexport default class Index extends React.Component<{},{}> {\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"heroLayout\">\r\n        <Container fixed>\r\n          <Typography component=\"h3\" variant=\"h3\" align=\"center\" color=\"textPrimary\" gutterBottom>\r\n            <FormattedMessage id=\"Top.Title\"/>\r\n          </Typography>\r\n          <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\r\n            <FormattedMessage id=\"Index.heroText\"/>\r\n          </Typography>\r\n          <Typography align=\"center\" color=\"textSecondary\" paragraph>\r\n            ホーム画面/デスクトップに追加してお使いください\r\n          </Typography>\r\n          <div>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Link to=\"/data\" style={{textDecoration:\"none\"}}>\r\n                  <Button variant=\"contained\" color=\"primary\">\r\n                    <FormattedMessage id=\"Index.importButton\"/>\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n              <Grid item>\r\n                <Link to=\"/help\" style={{textDecoration:\"none\"}}>\r\n                  <Button variant=\"contained\" color=\"secondary\">\r\n                    <FormattedMessage id=\"Index.helpButton\"/>\r\n                  </Button>\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div style={{marginTop:\"10px\"}}>\r\n            <Typography align=\"center\" color=\"textSecondary\" variant=\"caption\" paragraph>\r\n              気に入ったらシェアお願いします!\r\n            </Typography>\r\n            <Grid container spacing={1} justify=\"center\">\r\n              <Grid item xs={2}>\r\n                <LineShareButton url={\"https://bpi.poyashi.me\"}>\r\n                    <LineIcon size={32} round />\r\n                </LineShareButton>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n                <TwitterShareButton url={\"https://bpi.poyashi.me\"} title={\"BPIManagerを使っています:\"}>\r\n                    <TwitterIcon size={32} round />\r\n                </TwitterShareButton>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          <div style={{marginTop:\"15px\"}}>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Typography align=\"center\" color=\"textSecondary\" variant=\"caption\" paragraph>\r\n                  If you're not familiar with Japanese, please go firstly to settings and you can change language there.\r\n                </Typography>\r\n                <Typography align=\"center\" color=\"textSecondary\" paragraph variant=\"caption\">\r\n                  <FormattedMessage id=\"Index.notes1\"/>\r\n                </Typography>\r\n                <Typography align=\"center\" color=\"textSecondary\" paragraph variant=\"caption\">\r\n                  <FormattedMessage id=\"Index.notes2\"/>\r\n                </Typography>\r\n                <Typography align=\"center\" color=\"textSecondary\" paragraph variant=\"caption\">\r\n                  BPIManager beta ver0.0.0.3<br/>\r\n                  If you have encountered unintended behaviours or have opinions to make this tool much better, please contact <RefLink color=\"secondary\" href=\"https://twitter.com/BPIManager\">@BPIManager</RefLink>.\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import moment from \"moment\";\r\n\r\nconst timeFormatter = (type = 0,date = new Date()):string =>{\r\n  const m = moment(date);\r\n  switch (type){\r\n    case 0:\r\n    return m.format(\"YYYY-MM-DD HH:mm\");\r\n    case 1:\r\n    return m.format(\"YYYYMMDD\");\r\n    case 2:\r\n    return m.format(\"HHmmss\");\r\n    case 3:\r\n    return m.format(\"YYYY-MM-DD HH:mm:ss\");\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport default timeFormatter;\r\n","export const _isSingle = ()=>{\r\n    return !localStorage.getItem(\"isSingle\") || localStorage.getItem(\"isSingle\") === \"1\" || localStorage.getItem(\"isSingle\") === \"true\" ? 1 : 0;\r\n}\r\n\r\nexport const _currentStore = ()=>{\r\n  return localStorage.getItem(\"currentStore\") || \"27\";\r\n}\r\n\r\nexport const _lang = ()=>{\r\n  return localStorage.getItem(\"lang\") || \"ja\";\r\n}\r\n\r\nexport const _currentVersion = ()=>{\r\n  return localStorage.getItem(\"lastDefFileVer\") || \"undefined\";\r\n}\r\n\r\nexport const _goalBPI = ()=>{\r\n  return Number(localStorage.getItem(\"goalBPI\")) || 0;\r\n}\r\n\r\nexport const _goalPercentage = ()=>{\r\n  return Number(localStorage.getItem(\"goalPercentage\")) || 0;\r\n}\r\n\r\nexport const _currentTheme = ()=>{\r\n  return localStorage.getItem(\"theme\") || \"light\";\r\n}\r\n\r\nexport const _currentStoreWithFullName = ()=>{\r\n  const t:string = localStorage.getItem(\"currentStore\") || \"27\";\r\n  return t === \"26\" ? \"26 Rootage\" : \"27 HEROIC VERSE\"\r\n}\r\n\r\nexport const _chartColor = ()=>{\r\n  return _currentTheme() === \"dark\" ? \"#eee\" : \"#333\"\r\n}\r\n","export const lampArray:string[] = [\r\n  \"FAILED\",\"ASSIST\",\"EASY\",\"CLEAR\",\"HARD\",\"EX-HARD\",\"FULLCOMBO\",\"UNKNOWN\"\r\n];\r\nexport const lampCSVArray:string[] = [\r\n  \"FAILED\",\"ASSIST CLEAR\",\"EASY CLEAR\",\"CLEAR\",\"HARD CLEAR\",\"EX HARD CLEAR\",\"FULLCOMBO CLEAR\"\r\n];\r\n\r\nexport const convertClearState = (original:string|number,direction:number):string|number=>{\r\n  if(direction === 0){\r\n    // csv to num\r\n    if(typeof original !== \"string\"){return 0;}\r\n    return lampCSVArray.indexOf(original);\r\n  }else{\r\n    if(typeof original !== \"number\"){return 1;}\r\n    return lampCSVArray[original];\r\n  }\r\n}\r\n\r\nexport const _prefix = (diff:string):string=> diff === \"hyper\" ? \"(H)\" : diff === \"leggendaria\" ? \"(†)\" : \"\";\r\n\r\nexport const _prefixFromNum = (difficulty:string):string=>{\r\n  let prefix:string = \"\";\r\n  if(difficulty === \"3\" || difficulty === \"8\"){\r\n    prefix = \"(H)\";\r\n  }\r\n  if(difficulty === \"10\" || difficulty === \"11\"){\r\n    prefix = \"(†)\";\r\n  }\r\n  return prefix;\r\n}\r\n\r\nexport const difficultyDiscriminator = (difficulty:string):string=>{\r\n  let diff:string = \"another\";\r\n  if(difficulty === \"3\" || difficulty === \"8\"){\r\n    diff = \"hyper\";\r\n  }\r\n  if(difficulty === \"10\" || difficulty === \"11\"){\r\n    diff = \"leggendaria\";\r\n  }\r\n  return diff;\r\n}\r\n\r\nexport const getSongSuffixForIIDXInfo = (name:string,difficulty:string):string=>{\r\n  if(difficulty === \"3\" || difficulty === \"8\"){\r\n    return \"[H]\";\r\n  }\r\n  if(difficulty === \"4\" || difficulty === \"9\"){\r\n    return \"[A]\";\r\n  }\r\n  if(difficulty === \"10\" || difficulty === \"11\"){\r\n    switch(name){\r\n      default:\r\n        return \"†[A]\";\r\n      case \"Ancient Scapes\":\r\n      case \"Close the World feat.a☆ru\":\r\n      case \"Feel The Beat\":\r\n      case \"invoker\":\r\n      case \"Sigmund\":\r\n      case \"Verflucht\":\r\n      case \"疾風迅雷\":\r\n        return \"†LEGGENDARIA[A]\";\r\n    }\r\n  }\r\n  return \"\";\r\n}\r\n\r\n\r\nexport const convertLeggendariaStates = (name:string,difficulty:string):{name:string,difficulty:string}=>{\r\n  const leggendariaSongs:string[] = [\r\n    \"ABSOLUTE†\",\r\n    \"Clione†\",\r\n    \"RED ZONE†\",\r\n    \"spiral galaxy†\",\r\n    \"Little Little Princess†\",\r\n    \"CONTRACT†\",\r\n    \"waxing and wanding†\",\r\n    \"KAMAITACHI†\",\r\n    \"VANESSA†\",\r\n    \"Blue Rain†\",\r\n    \"ICARUS†\",\r\n    \"THE DEEP STRIKER†\",\r\n    \"Übertreffen†\",\r\n    \"Kung-fu Empire†\",\r\n    \"naughty girl@Queen's Palace†\",\r\n    \"THANK YOU FOR PLAYING†\",\r\n    \"凛として咲く花の如く†\",\r\n    \"SOLID STATE SQUAD†\",\r\n    \"Golden Palms†\",\r\n    \"QUANTUM TELEPORTATION†\",\r\n    \"Howling†\",\r\n    \"LUV CAN SAVE U†\",\r\n    \"朧†\",\r\n    \"仮想空間の旅人たち†\",\r\n    \"龍と少女とデコヒーレンス†\",\r\n    \"Ancient Scapes†LEGGENDARIA\",\r\n    \"Close the World feat.a☆ru†LEGGENDARIA\",\r\n    \"Feel The Beat†LEGGENDARIA\",\r\n    \"invoker†LEGGENDARIA\",\r\n    \"Sigmund†LEGGENDARIA\",\r\n    \"Verflucht†LEGGENDARIA\",\r\n    \"疾風迅雷†LEGGENDARIA\",\r\n    \"廿†\",\r\n    \"Beat Radiance†\",\r\n    \"CHRONO DIVER -NORNIR-†\",\r\n    \"Cosmic Cat†\",\r\n    \"EBORY & IVORY†\",\r\n    \"恋は白帯、サンシロー†\",\r\n    \"超青少年ノ為ノ超多幸ナ超古典的超舞曲†\",\r\n    \"Damage Per Second†\",\r\n    \"STARLIGHT DANCEHALL†\",\r\n    \"Amazing Mirage†\",\r\n    \"冬椿 ft. Kanae Asaba†\",\r\n  ]\r\n  let newName = name,newDifficulty = difficulty;\r\n  if(difficulty !== \"another\"){\r\n    return {\r\n      name:newName,\r\n      difficulty:newDifficulty\r\n    }\r\n  }\r\n  if(leggendariaSongs.indexOf(name) > -1){\r\n    newName = name.replace(\"†LEGGENDARIA\",\"\").replace(\"†\",\"\");\r\n    newDifficulty = \"leggendaria\";\r\n  }\r\n  return {\r\n    name:newName,\r\n    difficulty:newDifficulty\r\n  }\r\n}\r\n","import {songsDB} from \"../indexedDB\";\r\nimport { songData } from \"../../types/data\";\r\n\r\nexport interface B{\r\n  error:boolean,bpi:number,reason?:any,difficultyLevel?:string\r\n}\r\n\r\nexport default class bpiCalcuator{\r\n  songsDB:any;\r\n  isSingle: number;\r\n  propData:songData[]|null = null;\r\n\r\n  constructor(alreadyHaveData:boolean = false, isSingle:number = 1){\r\n    this.isSingle = isSingle;\r\n    this.songsDB = !alreadyHaveData ? new songsDB() : null;\r\n  }\r\n\r\n  setPropData(data:songData,exScore:number,isSingle:number):number{\r\n    this.isSingle = isSingle;\r\n    this.s = exScore;\r\n    this.k = data[\"avg\"];\r\n    this.z = data[\"wr\"];\r\n    this.m = data[\"notes\"] * 2;\r\n    return this.exec();\r\n  }\r\n\r\n  private m:number = 1;\r\n  private s:number = 0;\r\n  private k:number = 0;\r\n  private z:number = 0;\r\n  private pgf = (j:number):number=> j === this.m ? this.m : 1 + ( j / this.m - 0.5 ) / ( 1 - j / this.m );\r\n\r\n  async calc(songTitle:string,difficulty:string,exScore:number):Promise<B>{\r\n    try{\r\n      this.propData = this.isSingle === 1 ?\r\n      await this.songsDB.getOneItemIsSingle(songTitle,difficulty) :\r\n      await this.songsDB.getOneItemIsDouble(songTitle,difficulty);\r\n      if(!this.propData || !this.propData[0]){\r\n        throw new Error(\"楽曲情報が見つかりませんでした\");\r\n      }\r\n      this.s = exScore;\r\n      this.k = this.propData[0][\"avg\"];\r\n      this.z = this.propData[0][\"wr\"];\r\n      this.m = this.propData[0][\"notes\"] * 2;\r\n      return {error:false,bpi:this.exec(),difficultyLevel:this.propData[0][\"difficultyLevel\"]};\r\n\r\n    }catch(e){\r\n      return {error:true,bpi:NaN,reason:e.message || e};\r\n    }\r\n  }\r\n\r\n  exec(){\r\n    let res:number = NaN;\r\n    const {k,z,s} = this;\r\n    if( s > this.m ){\r\n      throw new Error(\"理論値を超えています\");\r\n    }\r\n    if( s < 0){\r\n      throw new Error(\"スコアは自然数で入力してください\");\r\n    }\r\n    const _s = this.pgf(s);\r\n    const _k = this.pgf(k);\r\n    const _z = this.pgf(z);\r\n\r\n    const _s_ = _s / _k;\r\n    const _z_ = _z / _k;\r\n    if(s >= k){\r\n      res = 100 * ( Math.pow(Math.log(_s_),1.5) / Math.pow(Math.log(_z_),1.5) );\r\n    }else{\r\n      res = -100 * ( Math.pow(-Math.log(_s_),1.5) / Math.pow(Math.log(_z_),1.5) );\r\n    }\r\n    return res < -15 ? -15 : Math.round(res * 100) / 100;\r\n  }\r\n\r\n  //使いまわし可能データ\r\n  private avg:number = 0;\r\n  private wr:number = 0;\r\n\r\n  setData(max:number,avg:number,wr:number):void{\r\n    this.m = max;\r\n    this.avg = avg;\r\n    this.wr = wr;\r\n  }\r\n\r\n  calcFromBPI(bpi:number,ceiled:boolean = false):number{\r\n    const z = this.pgf(this.wr),k = this.pgf(this.avg);\r\n\r\n    const i = Math.pow(Math.pow(Math.log(z / k),1.5)  * bpi / 100, 1 / 1.5);\r\n\r\n    const N = Math.pow(Math.E,i) * k;\r\n    const res = this.m * ( ( N - 0.5 ) / N );\r\n    return ceiled ? Math.ceil(res) : res;\r\n  }\r\n\r\n  rank(bpi:number):number{\r\n    return Math.ceil(Math.pow(2645, (100 - bpi ) / 100 ));\r\n  }\r\n\r\n  _allTwelvesLength:number = 0;\r\n  _allTwelvesBPI:number[] = [];\r\n\r\n  set allTwelvesLength(val: number){ this._allTwelvesLength = val }\r\n  set allTwelvesBPI(val: number[]){ this._allTwelvesBPI = val }\r\n\r\n  totalBPI():number{\r\n    let sum = 0,playedSongs = this._allTwelvesBPI.length;\r\n    if(playedSongs === 0){return -15;}\r\n    const k = Math.log2(this._allTwelvesLength);\r\n    for (let i=0; i < this._allTwelvesLength; ++i){\r\n      if(i < playedSongs){\r\n        const bpi = this._allTwelvesBPI[i]\r\n        if(bpi > 0){\r\n          sum += Math.pow( bpi, k ) / this._allTwelvesLength\r\n        }else{\r\n          sum += -Math.pow( Math.abs(bpi), k ) / this._allTwelvesLength\r\n        }\r\n      }\r\n    }\r\n    return Math.round(Math.pow(sum, 1 / k) * 100) / 100;\r\n  }\r\n}\r\n","import Dexie from \"dexie\";\r\nimport {scoreData,songData} from \"../../types/data\";\r\nimport timeFormatter from \"../common/timeFormatter\";\r\nimport {_currentStore,_isSingle} from \"../settings\";\r\nimport moment from \"moment\";\r\nimport {difficultyDiscriminator} from \"../songs/filter\";\r\nimport bpiCalcuator from \"../bpi\";\r\n\r\nconst storageWrapper = class extends Dexie{\r\n  target: string = \"scores\";\r\n  //あとで書いとく\r\n  scores:Dexie.Table<any, any>;\r\n  songs:Dexie.Table<any, any>;\r\n  stores: Dexie.Table<any, any>;\r\n  protected calculator:bpiCalcuator = new bpiCalcuator(true);\r\n\r\n  constructor(){\r\n    super(\"ScoreCoach\");\r\n    this.version(1).stores({\r\n      scores : \"[title+difficulty+storedAt+isSingle],title,*difficulty,*difficultyLevel,*version,currentBPI,exScore,Pgreat,great,missCount,clearState,lastPlayed,storedAt,isSingle,isImported,updatedAt,lastScore\",\r\n      songs : \"&++num,title,*difficulty,*difficultyLevel,wr,avg,notes,bpm,textage,dpLevel,isCreated,isFavorited,[title+difficulty]\",\r\n      stores : \"&name,updatedAt\",\r\n      scoreHistory : \"&++num,[title+storedAt+difficulty+isSingle],[title+storedAt+difficulty+isSingle+updatedAt],title,difficulty,difficultyLevel,storedAt,exScore,BPI,isSingle,updatedAt\"\r\n    });\r\n    this.scores = this.table(\"scores\");\r\n    this.songs = this.table(\"songs\");\r\n    this.stores = this.table(\"stores\");\r\n  }\r\n\r\n  protected newSongs:{[key:string]:songData} = {};\r\n\r\n  setNewSongsDBRawData(reduced:{[key:string]:songData}):this{\r\n    this.newSongs = reduced;\r\n    return this;\r\n  }\r\n\r\n  protected apply(t:string,s:number,i:number = 1):number{\r\n    return this.calculator.setPropData(this.newSongs[t],s,i);\r\n  }\r\n\r\n}\r\n\r\nexport const scoresDB = class extends storageWrapper{\r\n  scores: Dexie.Table<any, any>;\r\n  storedAt:string = \"\";\r\n  isSingle:number = 1;\r\n\r\n  constructor(isSingle:number = 1,storedAt?:string){\r\n    super();\r\n    this.scores = this.table(\"scores\");\r\n    this.isSingle = isSingle;\r\n    if(storedAt) this.storedAt = storedAt;\r\n  }\r\n\r\n  setIsSingle(isSingle:number):this{\r\n    this.isSingle = isSingle;\r\n    return this;\r\n  }\r\n\r\n  setStoredAt(storedAt:string):this{\r\n    this.storedAt = storedAt;\r\n    return this;\r\n  }\r\n\r\n  async getAll():Promise<scoreData[]>{\r\n    try{\r\n      const currentData = await this.scores.where({\r\n        storedAt:_currentStore(),\r\n        isSingle:_isSingle(),\r\n      }).toArray();\r\n      return currentData;\r\n    }catch(e){\r\n      console.error(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getSpecificVersionAll():Promise<scoreData[]>{\r\n    try{\r\n      const currentData = await this.scores.where({\r\n        storedAt:this.storedAt,\r\n        isSingle:this.isSingle,\r\n      }).toArray();\r\n      return currentData;\r\n    }catch(e){\r\n      console.error(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async deleteAll():Promise<void>{\r\n    return await this.scores.clear();\r\n  }\r\n\r\n  getItem(title:string,difficulty:string,storedAt:string,isSingle:number):Promise<scoreData[]>{\r\n    return this.scores.where(\"[title+difficulty+storedAt+isSingle]\").equals([title,difficulty,storedAt,isSingle]).toArray();\r\n  }\r\n\r\n  //for statistics\r\n  async getAllTwelvesBPI(isSingle:number,storedAt:string,diff:string = \"12\"):Promise<number[]>{\r\n    try{\r\n      let data:scoreData[] = await this.scores.where({\r\n        storedAt:storedAt,isSingle:isSingle,\r\n      }).toArray();\r\n      data = data.filter(item=>item.difficultyLevel === diff) ;\r\n      return data.map((item:scoreData)=>item.currentBPI);\r\n    }catch(e){\r\n      console.error(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async resetItems(storedAt:string):Promise<number>{\r\n    return await this.scores.where({storedAt:storedAt}).delete();\r\n  }\r\n\r\n  async resetImportedItems():Promise<number>{\r\n    return await this.scores.where({isImported:\"true\"}).delete();\r\n  }\r\n\r\n  async setItem(item:any):Promise<any>{\r\n    try{\r\n      return await this.scores.where(\"[title+difficulty+storedAt+isSingle]\").equals(\r\n        [item[\"title\"],item[\"difficulty\"],this.storedAt,this.isSingle]\r\n      ).modify({\r\n        title:item[\"title\"],\r\n        version:item[\"version\"],\r\n        difficulty:item[\"difficulty\"],\r\n        difficultyLevel:item[\"difficultyLevel\"],\r\n        currentBPI:item[\"currentBPI\"],\r\n        exScore:Number(item[\"exScore\"]),\r\n        Pgreat:Number(item[\"Pgreat\"]),\r\n        great:Number(item[\"great\"]),\r\n        missCount:Number(item[\"missCount\"]),\r\n        clearState:item[\"clearState\"],\r\n        lastPlayed:item[\"lastPlayed\"],\r\n        lastScore:item[\"lastScore\"],\r\n        storedAt:item[\"storedAt\"],\r\n        isSingle:item[\"isSingle\"],\r\n        isImported:true,\r\n        updatedAt : item[\"updatedAt\"]\r\n      })\r\n    }catch(e){\r\n      console.error(e);\r\n      return;\r\n    }\r\n  }\r\n\r\n  putItem(item:any):any{\r\n    try{\r\n      return this.scores.put({\r\n        title:item[\"title\"],\r\n        version:item[\"version\"],\r\n        difficulty:item[\"difficulty\"],\r\n        difficultyLevel:item[\"difficultyLevel\"],\r\n        currentBPI:item[\"currentBPI\"],\r\n        exScore:Number(item[\"exScore\"]),\r\n        Pgreat:Number(item[\"Pgreat\"]),\r\n        great:Number(item[\"great\"]),\r\n        missCount:Number(item[\"missCount\"]),\r\n        clearState:item[\"clearState\"],\r\n        lastPlayed:item[\"lastPlayed\"],\r\n        lastScore:item[\"lastScore\"],\r\n        storedAt:item[\"storedAt\"],\r\n        isSingle:item[\"isSingle\"],\r\n        isImported:true,\r\n        updatedAt : item[\"updatedAt\"]\r\n      })\r\n    }catch(e){\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  async updateScore(score:scoreData|null,data:{currentBPI:number,exScore:number}):Promise<boolean>{\r\n    try{\r\n      if(!score){return false;}\r\n      if(score.updatedAt === \"-\"){\r\n        //put\r\n        let newScoreData:scoreData = score;\r\n        newScoreData.currentBPI = data.currentBPI;\r\n        newScoreData.exScore = data.exScore;\r\n        newScoreData.updatedAt = timeFormatter(0);\r\n        await this.scores.add(newScoreData);\r\n      }else{\r\n        //update\r\n        await this.scores.where(\"[title+difficulty+storedAt+isSingle]\").equals([score.title,score.difficulty,score.storedAt,score.isSingle]).modify(\r\n        Object.assign(data,{\r\n          updatedAt : timeFormatter(0),\r\n          lastScore: score.exScore,\r\n        })\r\n        );\r\n      }\r\n      return true;\r\n    }catch(e){\r\n      console.error(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async removeItem(title:string,storedAt:string):Promise<number>{\r\n    return await this.scores.where({title:title,storedAt:storedAt}).delete();\r\n  }\r\n\r\n  async recalculateBPI(){\r\n    try{\r\n      const self = this;\r\n      return await this.scores.toCollection().modify(async function(value){\r\n        value.currentBPI = await self.calculator.calc(value.title,value.exScore,value.isSingle);\r\n      })\r\n    }catch(e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nexport const scoreHistoryDB = class extends storageWrapper{\r\n  scoreHistory: Dexie.Table<any, any>;\r\n  isSingle:number = 1;\r\n  currentStore:string = \"27\";\r\n\r\n  constructor(){\r\n    super();\r\n    this.scoreHistory = this.table(\"scoreHistory\");\r\n    this.isSingle = _isSingle();\r\n    this.currentStore = _currentStore();\r\n  }\r\n\r\n  add(score:scoreData|null,data:{currentBPI:number,exScore:number},forceUpdateTime:boolean = false):boolean{\r\n    try{\r\n      if(!score){return false;}\r\n      this.scoreHistory.add({\r\n        title:score.title,\r\n        exScore:data.exScore,\r\n        difficulty:score.difficulty,\r\n        difficultyLevel:score.difficultyLevel,\r\n        storedAt:score.storedAt,\r\n        BPI:data.currentBPI,\r\n        updatedAt:forceUpdateTime ? score.updatedAt : timeFormatter(3),\r\n        isSingle:score.isSingle,\r\n      });\r\n      return true;\r\n    }catch(e){\r\n      console.error(e);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async check(item:scoreData):Promise<{willUpdate:boolean,lastScore:number}>{\r\n    try{\r\n      const t = await this.scoreHistory.where(\"[title+storedAt+difficulty+isSingle]\").equals(\r\n        [item[\"title\"],item[\"storedAt\"],item[\"difficulty\"],item[\"isSingle\"]]\r\n      ).toArray().then((t)=>t.sort((a,b)=>moment(b.updatedAt).diff(moment(a.updatedAt))));\r\n      return {\r\n        willUpdate:t.length === 0 ? true : Number(item.exScore) > Number(t[t.length - 1].exScore),\r\n        lastScore:t.length === 0 ? -1 : t[t.length-1].exScore\r\n      };\r\n    }catch(e){\r\n      return {\r\n        willUpdate:false,\r\n        lastScore:0,\r\n      };\r\n    }\r\n  }\r\n\r\n  async getAll(diff:string = \"12\"):Promise<any[]>{\r\n    try{\r\n      return await this.scoreHistory.where(\r\n        {storedAt:this.currentStore,isSingle:this.isSingle,difficultyLevel:diff}\r\n      ).toArray();\r\n    }catch(e){\r\n      console.error(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async reset(storedAt?:string):Promise<any>{\r\n    try{\r\n      return await this.scoreHistory.where(\r\n        {storedAt:storedAt ? storedAt : this.currentStore,isSingle:this.isSingle}\r\n      ).delete();\r\n    }catch(e){\r\n      console.error(e);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  async getWithinVersion(song:songData):Promise<any[]>{\r\n    try{\r\n      if(!song){return [];}\r\n      return await this.scoreHistory.where(\r\n        {storedAt:this.currentStore,isSingle:this.isSingle,title:song.title,difficulty:difficultyDiscriminator(song.difficulty)}\r\n      ).toArray().then(t=>t.sort((a,b)=>{\r\n        return moment(b.updatedAt).diff(moment(a.updatedAt))\r\n      }));\r\n    }catch(e){\r\n      console.error(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getAcrossVersion(song:songData):Promise<any[]>{\r\n    try{\r\n      if(!song){return [];}\r\n      const all = await this.scoreHistory.where(\r\n        {isSingle:this.isSingle,title:song.title,difficulty:difficultyDiscriminator(song.difficulty)}\r\n      ).toArray().then(t=>t.reduce((result, current) => {\r\n        if(!result[current.storedAt]){\r\n          result[current.storedAt] = [];\r\n        }\r\n        result[current.storedAt].push(current);\r\n        return result;\r\n      }, {}));\r\n      let res:any[] = [];\r\n      Object.keys(all).map((item:string)=>{\r\n        const t = all[item].sort((a:any,b:any)=>{\r\n          return b.exScore - a.exScore\r\n        });\r\n        res.push(t[0]);\r\n        return 0;\r\n      });\r\n      return res.reverse();\r\n    }catch(e){\r\n      console.error(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async recalculateBPI(){\r\n    try{\r\n      const self = this;\r\n      return await this.scoreHistory.toCollection().modify(async function(value){\r\n        value.BPI = await self.calculator.calc(value.title,value.exScore,value.isSingle);\r\n      })\r\n    }catch(e){\r\n      console.log(e);\r\n      console.log(\"failed recalculate [scoreHistoryDB] - \");\r\n      return;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport const songsDB = class extends storageWrapper{\r\n  songs: Dexie.Table<any, any>;\r\n\r\n  constructor(){\r\n    super();\r\n    this.songs = this.table(\"songs\");\r\n  }\r\n\r\n  async getAll(isSingle:number = 1,willCollection:boolean = false):Promise<any>{\r\n    try{\r\n      const data = isSingle === 1 ?\r\n        this.songs.where(\"dpLevel\").equals(\"0\") :\r\n        this.songs.where(\"dpLevel\").notEqual(\"0\");\r\n      return willCollection ? data : await data.toArray();\r\n    }catch(e){\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getAllWithAllPlayModes():Promise<any>{\r\n    try{\r\n      return await this.songs.toCollection().toArray();\r\n    }catch(e){\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getAllTwelvesLength(isSingle:number = 1):Promise<number>{\r\n    try{\r\n      const data = isSingle === 1 ?\r\n        await this.songs.where(\"dpLevel\").equals(\"0\").toArray() :\r\n        await this.songs.where(\"dpLevel\").notEqual(\"0\").toArray();\r\n      let matched = 0;\r\n      for(let i = 0; i < data.length; ++i){\r\n        if(data[i][\"difficultyLevel\"] === \"12\"){\r\n          matched++;\r\n        }\r\n      }\r\n      return matched;\r\n    }catch(e){\r\n      console.error(e);\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  async getAllFavoritedItems(isSingle:number = 1):Promise<any[]>{\r\n    try{\r\n      return await this.getAll(isSingle,true).then(t=>t.and((item:songData)=>item.isFavorited === true).toArray());\r\n    }catch(e){\r\n      console.error(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async deleteAll():Promise<void>{\r\n    return await this.songs.clear();\r\n  }\r\n\r\n  async getItem(title:string):Promise<any[]>{\r\n    try{\r\n      return await this.songs.where({title:title}).toArray();\r\n    }catch(e){\r\n      console.error(e);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getOneItemIsSingle(title:string,difficulty:string):Promise<songData[]>{\r\n    const diffs = ():string=>{\r\n      switch(difficulty){\r\n        case \"hyper\":return \"3\";\r\n        case \"another\":return \"4\";\r\n        case \"leggendaria\":return \"10\";\r\n        default:\r\n        return difficulty;\r\n      }\r\n    };\r\n    try{\r\n      return await this.songs.where(\"[title+difficulty]\").equals([title,diffs()]).toArray();\r\n    }catch(e){\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getOneItemIsDouble(title:string,difficulty:string):Promise<songData[]>{\r\n    const diffs = ():string=>{\r\n      switch(difficulty){\r\n        case \"hyper\":return \"8\";\r\n        case \"another\":return \"9\";\r\n        case \"leggendaria\":return \"11\";\r\n        default:\r\n        return difficulty;\r\n      }\r\n    };\r\n    try{\r\n      return await this.songs.where(\"[title+difficulty]\").equals([title,diffs()]).toArray();\r\n    }catch(e){\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async setItem(item:any):Promise<any>{\r\n    try{\r\n      return await this.songs.put({\r\n        title:item[\"title\"],\r\n        difficulty:item[\"difficulty\"],\r\n        wr:Number(item[\"wr\"]),\r\n        avg:Number(item[\"avg\"]),\r\n        notes:Number(item[\"notes\"]),\r\n        bpm:item[\"bpm\"],\r\n        textage:item[\"textage\"],\r\n        difficultyLevel:item[\"difficultyLevel\"],\r\n        dpLevel:item[\"dpLevel\"],\r\n        isFavorited:item[\"isFavorited\"] || false,\r\n        isCreated: item[\"isCreated\"] || false,\r\n        updatedAt: item[\"updatedAt\"] || timeFormatter(0),\r\n      })\r\n    }catch(e){\r\n      console.error(e);\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  async updateItem(item:any):Promise<any>{\r\n    try{\r\n      return await this.songs.where({\r\n        \"title\":item[\"title\"],\"difficulty\":item[\"difficulty\"]\r\n      }).modify({\r\n        wr:Number(item[\"wr\"]),\r\n        avg:Number(item[\"avg\"]),\r\n        updatedAt: timeFormatter(0),\r\n      })\r\n    }catch(e){\r\n      console.error(e);\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  async toggleFavorite(title:string,difficulty:string,newState:boolean):Promise<any>{\r\n    try{\r\n      return await this.songs.where({title:title,difficulty:difficulty}).modify({\r\n        isFavorited:newState\r\n      });\r\n    }catch(e){\r\n      console.error(e);\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  async removeItem(title:string):Promise<number>{\r\n    try{\r\n      return await this.songs.where({title:title}).delete();\r\n    }catch(e){\r\n      console.error(e);\r\n      return 1;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default storageWrapper;\r\n","import {scoreData} from \"../../types/data\";\r\nimport { convertClearState,convertLeggendariaStates } from \"../songs/filter\";\r\n\r\nexport default class importCSV {\r\n\r\n  rawData:string = \"\";\r\n  result:scoreData[] = [];\r\n  resultHistory:any[] = [];\r\n\r\n  isSingle:number = 1;\r\n  currentStore:string = \"\";\r\n\r\n  constructor(raw:string,isSingle:number = 1,currentStore?:string){\r\n    this.rawData = raw;\r\n    this.isSingle = isSingle;\r\n    if(currentStore)this.currentStore = currentStore;\r\n  }\r\n\r\n  getResult():scoreData[]{\r\n    return this.result;\r\n  }\r\n\r\n  getResultHistory():any[]{\r\n    return this.resultHistory;\r\n  }\r\n\r\n  execute():Promise<number>{\r\n    const self = this;\r\n    let mode = 0;\r\n    return new Promise(function(resolve, reject) {\r\n      try{\r\n        const splittedByBreak:string[] = self.rawData.split(/\\r\\n|\\n/);\r\n        const lengthSum:number = splittedByBreak.length;\r\n        let result = [],resultHistory = [];\r\n        for(let i = 0; i < lengthSum; ++i){\r\n          let eachObjNum:number[] = [];\r\n          let t:string = \"\";\r\n          const p = splittedByBreak[i].split(/,/);\r\n          if(i===0 && p[5] === \"NORMAL 難易度\"){\r\n            //Rootage以前のCSV判別\r\n            mode = 1;\r\n          }\r\n          if(mode === 0){\r\n            //HYPER\r\n            if(Number(p[19]) > 10 && Number(p[20]) > 0){\r\n              t = \"hyper\";\r\n              eachObjNum = [0,1,20,21,22,23,24,25,40];\r\n            }\r\n            //ANOTHER\r\n            if(Number(p[26]) > 10 && Number(p[27]) > 0){\r\n              t = \"another\";\r\n              eachObjNum = [0,1,27,28,29,30,31,32,40];\r\n            }\r\n            //LEGGENDARIA\r\n            if(Number(p[33]) > 10 && Number(p[34]) > 0){\r\n              t = \"leggendaria\";\r\n              eachObjNum = [0,1,34,35,36,37,38,39,40];\r\n            }\r\n          }else{\r\n            //HYPER\r\n            if(Number(p[12]) > 10 && Number(p[13]) > 0){\r\n              t = \"hyper\";\r\n              eachObjNum = [0,1,13,14,15,16,17,18,26];\r\n            }\r\n            //ANOTHER\r\n            if(Number(p[19]) > 10 && Number(p[20]) > 0){\r\n              t = \"another\";\r\n              eachObjNum = [0,1,20,21,22,23,24,25,26];\r\n            }\r\n          }\r\n          if(!p[eachObjNum[1]]){\r\n            continue;\r\n          }\r\n\r\n          let {name,difficulty} = mode === 1 ? convertLeggendariaStates(p[eachObjNum[1]],t) : {name:p[eachObjNum[1]],difficulty:t};\r\n          const clearState:string|number = convertClearState(p[eachObjNum[6]],0);\r\n          if(typeof clearState !== \"number\"){throw new Error();}\r\n          if(mode === 1 && name === \"炎影\") name = \"火影\";\r\n          if(mode === 1 && name === \"Rave*it!! Rave*it!! \") name = \"Rave*it!! Rave*it!!\";\r\n\r\n          result.push({\r\n            title:name,\r\n            version:p[eachObjNum[0]],\r\n            difficulty:difficulty,\r\n            currentBPI:0,\r\n            difficultyLevel:\"-\",\r\n            exScore:Number(p[eachObjNum[2]]),\r\n            Pgreat:Number(p[eachObjNum[3]]),\r\n            great:Number(p[eachObjNum[4]]),\r\n            missCount:Number(p[eachObjNum[5]]),\r\n            clearState:clearState,\r\n            lastPlayed:p[eachObjNum[8]],\r\n            lastScore:-1,\r\n            storedAt:self.currentStore,\r\n            isSingle:self.isSingle,\r\n            isImported:true,\r\n            updatedAt:p[eachObjNum[8]]\r\n          });\r\n          resultHistory.push({\r\n            title:name,\r\n            exScore:Number(p[eachObjNum[2]]),\r\n            difficulty:difficulty,\r\n            difficultyLevel:\"-\",\r\n            storedAt:self.currentStore,\r\n            isSingle:self.isSingle,\r\n            BPI:0,\r\n            updatedAt:p[eachObjNum[8]],\r\n          });\r\n        }\r\n        self.result = result;\r\n        self.resultHistory = resultHistory;\r\n        return resolve(result.length);\r\n      }catch(e){\r\n        console.log(e);\r\n        return reject(e);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {scoresDB, scoreHistoryDB} from \"../../components/indexedDB\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport importCSV from \"../../components/csv/import\";\r\nimport bpiCalculator from \"../../components/bpi\";\r\nimport { _currentStore, _isSingle, _currentStoreWithFullName } from '../../components/settings';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default class Index extends React.Component<{global:any},{raw:string,isSnackbarOpen:boolean,stateText:string,errors:string[],isSaving:boolean,currentState:string,progress:number}> {\r\n\r\n  constructor(props:{global:any}){\r\n    super(props);\r\n    this.state = {\r\n      raw: \"\",\r\n      isSnackbarOpen:false,\r\n      stateText:\"Data.Success\",\r\n      errors:[],\r\n      isSaving:false,\r\n      currentState:\"\",\r\n      progress:0,\r\n    }\r\n    this.execute = this.execute.bind(this);\r\n  }\r\n\r\n  async execute(){\r\n    try{\r\n      this.props.global.setMove(true);\r\n      this.setState({isSaving:true});\r\n      let errors = [];\r\n      const isSingle = _isSingle();\r\n      const currentStore = _currentStore();\r\n      const executor = new importCSV(this.state.raw,isSingle,currentStore);\r\n      const calc = new bpiCalculator(false,isSingle);\r\n      const exec = await executor.execute();\r\n      if(!exec){\r\n        throw new Error(\"CSVデータの形式が正しくありません\");\r\n      }\r\n\r\n      const result = executor.getResult(),resultHistory = executor.getResultHistory();\r\n      const s = new scoresDB(isSingle,currentStore), h = new scoreHistoryDB();\r\n      const all = await s.getAll().then(t=>t.reduce((result:any, current:any) => {\r\n        result[current.title] = current;\r\n        return result;\r\n      }, {}));\r\n      const len = result.length;\r\n      for(let i = 0;i < len;++i){\r\n        const calcData = await calc.calc(result[i][\"title\"],result[i][\"difficulty\"],result[i][\"exScore\"])\r\n        if(calcData.error && calcData.reason){\r\n          errors.push(result[i][\"title\"] + \" - \" + calcData.reason);\r\n          continue;\r\n        }\r\n        if(all[result[i][\"title\"]] && (all[result[i][\"title\"]][\"exScore\"] >= result[i][\"exScore\"] && all[result[i][\"title\"]][\"clearState\"] === result[i][\"clearState\"])){\r\n          //this.setState({progress:i / len * 100,currentState:result[i][\"title\"] + \"をスキップしました\"});\r\n          continue;\r\n        }\r\n        //this.setState({progress:i / len * 100,currentState:result[i][\"title\"] + \"を保存しています\"});\r\n        const body = Object.assign(\r\n          result[i],\r\n          {\r\n            difficultyLevel:calcData.difficultyLevel,\r\n            currentBPI : calcData.bpi,\r\n            isImported: true,\r\n            lastScore: all[result[i][\"title\"]] ? all[result[i][\"title\"]][\"exScore\"] : 0\r\n          }\r\n        );\r\n        all[result[i][\"title\"]] && all[result[i][\"isSingle\"]] === isSingle ? s.setItem(body) : s.putItem(body);\r\n        h.add(Object.assign(resultHistory[i],{difficultyLevel:calcData.difficultyLevel}),{currentBPI:calcData.bpi,exScore:resultHistory[i].exScore},true);\r\n      }\r\n      this.props.global.setMove(false);\r\n      return this.setState({isSaving:false,raw:\"\",isSnackbarOpen:true,stateText:\"Data.Success\",errors:errors});\r\n    }catch(e){\r\n      console.log(e);\r\n      this.props.global.setMove(false);\r\n      return this.setState({isSaving:false,isSnackbarOpen:true,stateText:\"Data.Failed\",errors:[e.message]});\r\n    }\r\n  }\r\n\r\n  onChangeText = (e: React.ChangeEvent<HTMLInputElement>)=> this.setState({raw:e.target.value});\r\n  handleClose = ()=> this.setState({isSnackbarOpen:false});\r\n\r\n  render(){\r\n    const {raw,isSnackbarOpen,stateText,errors,isSaving} = this.state;\r\n    return (\r\n      <Container className=\"commonLayout\" fixed>\r\n        <Snackbar\r\n          open={isSnackbarOpen}\r\n          onClose={this.handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n          }}\r\n          message={<span id=\"message-id\"><FormattedMessage id={stateText}/></span>}\r\n        />\r\n        <Typography component=\"h5\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n          <FormattedMessage id=\"Data.add\"/>\r\n        </Typography>\r\n        <FormattedMessage id=\"Data.infoBulk\"/><br/>\r\n        <FormattedMessage id=\"Data.howToBulk1\"/>\r\n        <Link color=\"secondary\" href={\"https://p.eagate.573.jp/game/2dx/\"+_currentStore()+\"/djdata/score_download.html\"} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <FormattedMessage id=\"Data.CSVURL\"/>\r\n        </Link>\r\n        <FormattedMessage id=\"Data.howToBulk2\"/>\r\n        <TextField\r\n          onChange={this.onChangeText}\r\n          value={raw}\r\n          style={{width:\"100%\"}}\r\n          label=\"Paste here\"\r\n          margin=\"dense\"\r\n          variant=\"outlined\"\r\n          multiline\r\n          rowsMax=\"4\"/>\r\n        <div style={{position:\"relative\"}}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={this.execute}\r\n            disabled={isSaving}\r\n            style={{width:\"100%\",margin:\"5px 0\"}}>\r\n            <FormattedMessage id=\"Data.Execute\"/>\r\n            (->{_currentStoreWithFullName() }&nbsp;/&nbsp;\r\n            {_isSingle() === 1 ? \"SP\" : \"DP\"})\r\n          </Button>\r\n          {isSaving && <CircularProgress size={24} style={{color:\"#777\",position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}} />}\r\n        </div>\r\n        {errors && errors.map(item=><span key={item}>{item}<br/></span>)}\r\n        <Divider variant=\"middle\" style={{margin:\"10px 0\"}}/>\r\n        <FormattedMessage id=\"Data.notPremium1\"/>\r\n        <Divider variant=\"middle\" style={{margin:\"10px 0\"}}/>\r\n        <Typography component=\"h5\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n          <FormattedMessage id=\"Data.edit\"/>\r\n        </Typography>\r\n        <FormattedMessage id=\"Data.howToEdit\"/>\r\n        <ol>\r\n          <li><FormattedMessage id=\"Data.howToEdit1\"/></li>\r\n          <li><FormattedMessage id=\"Data.howToEdit2\"/></li>\r\n          <li><FormattedMessage id=\"Data.howToEdit3\"/></li>\r\n        </ol>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { scoreData, songData } from \"../../../types/data\";\r\nimport {BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, ReferenceLine, ResponsiveContainer, Label} from \"recharts\";\r\nimport { _chartColor } from \"../../../components/settings\";\r\n\r\ninterface P{\r\n  song:songData|null,\r\n  score:scoreData|null,\r\n  chartData:any[],\r\n  graphLastUpdated:number\r\n}\r\n\r\nclass BPIChart extends React.Component<P,{}> {\r\n\r\n  render(){\r\n    const chartColor = _chartColor();\r\n    const {chartData,song,score,graphLastUpdated} = this.props;\r\n    if(!song || !score){\r\n      return (null);\r\n    }\r\n    const max = song.notes ? song.notes * 2 : 0;\r\n    return (\r\n      <div style={{width:\"95%\",height:\"100%\",margin:\"5px auto\"}}>\r\n        <ResponsiveContainer width=\"100%\">\r\n          <BarChart data={chartData} key={graphLastUpdated}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis stroke={chartColor} dataKey=\"name\" />\r\n            <YAxis stroke={chartColor} domain={[0,max]} ticks={[Math.ceil(max * (6/9)),Math.ceil(max * (7/9)),Math.ceil(max * (8/9)),max]} width={40}>\r\n            </YAxis>\r\n            <Tooltip contentStyle={{color:\"#333\"}} />\r\n            <Bar dataKey=\"EX SCORE\" isAnimationActive={false}>\r\n              {\r\n                chartData.map((item) => {\r\n                  const color = item.name === \"YOU\" ? \"#e75d00\" : \"#8884d8\";\r\n                  return <Cell key={item.name} fill={color} />;\r\n                })\r\n              }\r\n            </Bar>\r\n            <ReferenceLine y={max * (8/9)} label={<Label position=\"insideTopRight\" style={{fill: chartColor}}>AAA</Label>} stroke={chartColor} isFront={true} />\r\n            <ReferenceLine y={max * (7/9)} label={<Label position=\"insideTopRight\" style={{fill: chartColor}}>AA</Label>} stroke={chartColor} isFront />\r\n            <ReferenceLine y={max * (2/3)} label={<Label position=\"insideTopRight\" style={{fill: chartColor}}>A</Label>} stroke={chartColor} isFront />\r\n          </BarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BPIChart;\r\n","import React from \"react\";\r\n\r\nimport { scoreData, songData } from \"../../../types/data\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { convertClearState } from \"../../../components/songs/filter\";\r\n\r\ninterface P{\r\n  song:songData|null,\r\n  score:scoreData|null,\r\n}\r\n\r\nclass SongDetails extends React.Component<P,{}> {\r\n\r\n  render(){\r\n    const {song,score} = this.props;\r\n    if(!song || !score){\r\n      return (null);\r\n    }\r\n    const max = song.notes * 2;\r\n    return (\r\n      <div>\r\n        <Paper>\r\n          <Table aria-label=\"Song Details\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{minWidth:\"130px\",maxWidth:\"130px\"}}><FormattedMessage id=\"SongDetail.SongDetailHead\"/></TableCell>\r\n                <TableCell>&nbsp;</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell><FormattedMessage id=\"SongDetail.Notes\"/></TableCell>\r\n                <TableCell>{song.notes}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><FormattedMessage id=\"SongDetail.WorldRecord\"/></TableCell>\r\n                <TableCell>{song.wr}({Math.floor(song.wr / max * 10000) / 100}%)</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell><FormattedMessage id=\"SongDetail.Average\"/></TableCell>\r\n                <TableCell>{song.avg}({Math.floor(song.avg / max * 10000)  / 100}%)</TableCell>\r\n              </TableRow>\r\n              { !Number.isNaN(score.exScore) &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.You\"/></TableCell>\r\n                  <TableCell>{score.exScore}({Math.floor(score.exScore / max * 10000) / 100}%)</TableCell>\r\n                </TableRow>\r\n              }\r\n              <TableRow>\r\n                <TableCell>BPM</TableCell>\r\n                <TableCell>{song.bpm}</TableCell>\r\n              </TableRow>\r\n              { score.version &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.Version\"/></TableCell>\r\n                  <TableCell>{score.version}</TableCell>\r\n                </TableRow>\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        { (score.missCount || score.lastPlayed) &&\r\n        <Paper>\r\n          <Table aria-label=\"Score Details\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell style={{minWidth:\"130px\",maxWidth:\"130px\"}}><FormattedMessage id=\"SongDetail.ScoreDetailHead\"/></TableCell>\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              { score.lastPlayed &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.ClearState\"/></TableCell>\r\n                  <TableCell>{convertClearState(score.clearState,1)}</TableCell>\r\n                </TableRow>\r\n              }\r\n              { score.missCount &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.MissCount\"/></TableCell>\r\n                  <TableCell>{score.missCount}</TableCell>\r\n                </TableRow>\r\n              }\r\n              { score.lastPlayed &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.LastPlayed\"/></TableCell>\r\n                  <TableCell>{score.lastPlayed}</TableCell>\r\n                </TableRow>\r\n              }\r\n              { (score.Pgreat && score.great) &&\r\n                <TableRow>\r\n                  <TableCell><FormattedMessage id=\"SongDetail.ScoreDetails\"/></TableCell>\r\n                  <TableCell>PG:{score.Pgreat} G:{score.great}</TableCell>\r\n                </TableRow>\r\n              }\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SongDetails;\r\n","import React from \"react\";\r\n\r\nimport { scoreData, songData } from \"../../../types/data\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {scoreHistoryDB} from \"../../../components/indexedDB\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\ninterface P{\r\n  song:songData|null,\r\n  score:scoreData|null,\r\n}\r\n\r\ninterface S{\r\n  isLoading:boolean,\r\n  current:number,\r\n  dataset:any[],\r\n}\r\n\r\nclass SongDiffs extends React.Component<P,S> {\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state = {\r\n      isLoading:true,\r\n      current:0,\r\n      dataset:[],\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateScoreData();\r\n  }\r\n\r\n  handleChange = (event: React.ChangeEvent<{ value: unknown }>)=> {\r\n    if(typeof event.target.value !== \"number\"){return;}\r\n    this.setState({current:event.target.value,isLoading:true});\r\n    this.updateScoreData(event.target.value);\r\n  }\r\n\r\n  async updateScoreData(newState:number = 0){\r\n    const {song} = this.props;\r\n    if(!song){return};\r\n    const s = new scoreHistoryDB();\r\n    if(newState === 0){\r\n      return this.setState({\r\n        dataset:await s.getWithinVersion(song),\r\n        isLoading:false,\r\n      })\r\n    }else{\r\n      return this.setState({\r\n        dataset:await s.getAcrossVersion(song),\r\n        isLoading:false,\r\n      })\r\n    }\r\n  }\r\n\r\n  render(){\r\n    const {current,isLoading,dataset} = this.state;\r\n    const {song,score} = this.props;\r\n    if(!song || !score){\r\n      return (null);\r\n    }\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <FormControl style={{width:\"100%\"}}>\r\n          <InputLabel shrink>\r\n              <FormattedMessage id=\"SongDiffs.Target\"/>\r\n            </InputLabel>\r\n            <Select\r\n              value={current}\r\n              onChange={this.handleChange}\r\n              displayEmpty>\r\n                <MenuItem value={0}><FormattedMessage id=\"SongDiffs.WithinSameVersion\"/></MenuItem>\r\n                <MenuItem value={1}><FormattedMessage id=\"SongDiffs.EachVersion\"/></MenuItem>\r\n              </Select>\r\n          </FormControl>\r\n          {\r\n            isLoading && <div style={{display:\"flex\",justifyContent:\"center\",marginTop:\"30px\"}}><CircularProgress/></div>\r\n          }\r\n          {\r\n            !isLoading && <DiffsTable scoreTable={dataset} type={current}/>\r\n          }\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SongDiffs;\r\n\r\n\r\nclass DiffsTable extends React.Component<{scoreTable:any[],type:number},{}>{\r\n\r\n  render(){\r\n\r\n    const columns = [\r\n      this.props.type === 0 ? { id: \"updatedAt\", label: \"Date\"} : { id: \"storedAt\", label: \"Version\"},\r\n      { id: \"exScore\", label: \"EX\" },\r\n      { id: \"BPI\", label: \"BPI\" },\r\n    ];\r\n\r\n    return (\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map((column,i) => (\r\n              <TableCell\r\n                key={column.id}\r\n                style={i===0 ? {minWidth:\"150px\"} : undefined}\r\n              >\r\n                {column.label}\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {this.props.scoreTable.map((row:any,i:number) => {\r\n            return (\r\n              <TableRow\r\n                hover role=\"checkbox\" tabIndex={-1} key={row.title + row.difficulty + i} className={ i % 2 ? \"isOdd\" : \"isEven\"}>\r\n                {columns.map((column,j) => {\r\n                  return (\r\n                    <TableCell key={column.id}>\r\n                      {row[column.id]}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default class TabPanel extends React.Component<{value:number,index:number},{}>{\r\n\r\n  render(){\r\n    if(this.props.value !== this.props.index){\r\n      return (null);\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport { scoreData, songData } from \"../../../types/data\";\r\nimport { _prefixFromNum, getSongSuffixForIIDXInfo } from \"../../../components/songs/filter\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { FormattedMessage, injectIntl } from \"react-intl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport bpiCalcuator, { B } from \"../../../components/bpi\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {songsDB,scoresDB,scoreHistoryDB} from \"../../../components/indexedDB\";\r\nimport ShowSnackBar from \"../snackBar\";\r\nimport {Tooltip as TooltipMUI, Button, CircularProgress} from '@material-ui/core';\r\nimport BPIChart from \"./bpiChart\";\r\nimport SongDetails from \"./songDetails\";\r\nimport SongDiffs from \"./songDiffs\";\r\nimport { withRouter,RouteComponentProps } from \"react-router-dom\";\r\nimport { UnregisterCallback } from \"history\";\r\nimport TabPanel from \"./common/tabPanel\";\r\nimport { _currentTheme } from \"../../../components/settings\";\r\n\r\ninterface P{\r\n  isOpen:boolean,\r\n  song:songData|null,\r\n  score:scoreData|null,\r\n  handleOpen:(flag:boolean,row?:any,willDeleteItems?:any)=>void,\r\n  willDelete?:boolean\r\n}\r\n\r\ninterface S{\r\n  isError:boolean,\r\n  newScore:number,\r\n  newBPI:number,\r\n  showCharts:boolean,\r\n  chartData:any[],\r\n  currentTab:number,\r\n  anchorEl:null | HTMLElement,\r\n  favorited:boolean,\r\n  successSnack:boolean,\r\n  errorSnack:boolean,\r\n  errorSnackMessage:string,\r\n  graphLastUpdated:number,\r\n  isSaving:boolean,\r\n}\r\n\r\nclass DetailedSongInformation extends React.Component<P & {intl?:any} & RouteComponentProps,S> {\r\n\r\n  private calc:bpiCalcuator = new bpiCalcuator();\r\n  private unlisten:UnregisterCallback|null = null;\r\n\r\n  constructor(props:P & {intl?:any} & RouteComponentProps){\r\n    super(props);\r\n    this.state = {\r\n      isError:false,\r\n      newScore: NaN,\r\n      newBPI:NaN,\r\n      showCharts : true,\r\n      chartData:this.makeGraph().reverse(),\r\n      favorited:props.song ? props.song.isFavorited : false,\r\n      currentTab:0,\r\n      anchorEl:null,\r\n      successSnack:false,\r\n      errorSnack:false,\r\n      errorSnackMessage:\"\",\r\n      graphLastUpdated:new Date().getTime(),\r\n      isSaving:false,\r\n    }\r\n    this.unlisten = this.props.history.listen((_newLocation, action) => {\r\n      if (action === \"POP\") {\r\n        this.props.history.go(1);\r\n        this.props.handleOpen(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    if(this.unlisten){\r\n      this.unlisten();\r\n    }\r\n  }\r\n\r\n  makeGraph = (newScore?:number):any[]=>{\r\n    let data:any[] = [],lastExScore = 0;\r\n    const {song,score} = this.props;\r\n    const dataInserter = (exScore:number,label:string):number=>{\r\n      return data.push({\r\n        \"name\" : label,\r\n        \"EX SCORE\" : exScore\r\n      });\r\n    }\r\n    if(!song || !score){ return []; }\r\n    this.calc.setData(song.notes * 2, song.avg, song.wr);\r\n    const bpiBasis = [0,10,20,30,40,50,60,70,80,90,100];\r\n    const mybest = newScore ? newScore : score.exScore;\r\n    for(let i = 0;i < bpiBasis.length; ++i){\r\n      const exScoreFromBPI:number = this.calc.calcFromBPI(bpiBasis[i],true);\r\n      if(lastExScore < mybest && mybest <= exScoreFromBPI){\r\n        dataInserter(mybest,\"YOU\");\r\n        lastExScore = mybest;\r\n      }\r\n      lastExScore = exScoreFromBPI;\r\n      dataInserter(exScoreFromBPI,String(bpiBasis[i]));\r\n    }\r\n    if(lastExScore < mybest){\r\n      dataInserter(mybest,\"YOU\");\r\n    }\r\n    return data;\r\n  }\r\n\r\n  handleScoreInput = async(e:React.FocusEvent<HTMLInputElement>):Promise<void>=>{\r\n    const {song} = this.props;\r\n    if(this.state.isSaving){\r\n      return this.setState({errorSnack:true,errorSnackMessage:\"保存中です\"});\r\n    }\r\n    if(!song){\r\n      return this.setState({errorSnack:true,errorSnackMessage:\"楽曲データが不正です。\"});\r\n    }\r\n    const newScore:number = Number(e.target.value);\r\n    const newBPI:B = await this.calc.calc(song.title,song.difficulty,newScore);\r\n    if(newBPI.error){\r\n      return this.setState({errorSnack:true,errorSnackMessage:newBPI.reason});\r\n    }\r\n    return this.setState({\r\n      newScore:newScore,\r\n      newBPI:Math.floor(newBPI.bpi * 100) / 100,\r\n      chartData:this.makeGraph(newScore).reverse(),\r\n      graphLastUpdated:new Date().getTime()\r\n    })\r\n  }\r\n\r\n  handleTabChange = (_e:React.ChangeEvent<{}>, newValue:number)=> this.setState({currentTab:newValue});\r\n\r\n  toggleMenu = (e?: React.MouseEvent<HTMLButtonElement>)=> this.setState({anchorEl: e ? e.currentTarget : null });\r\n\r\n  jumpWeb = (type:number):void =>{\r\n    if(!this.props.song){return;}\r\n    switch(type){\r\n      case 0:\r\n        window.open(\"http://textage.cc/score/\" + this.props.song.textage);\r\n      break;\r\n      case 1:\r\n        window.open(\"https://www.youtube.com/results?search_query=\" + this.props.song.title + \"+IIDX\");\r\n      break;\r\n      case 2:\r\n        if(this.props.song.difficultyLevel !== \"12\"){\r\n          const {formatMessage} = this.props.intl;\r\n          this.setState({errorSnack:true,errorSnackMessage:formatMessage({id:\"Details.ErrorIIDXInfo\"})});\r\n        }else{\r\n          window.open(\r\n            `https://iidx.info/songinfo/?title=${this.props.song.title}${getSongSuffixForIIDXInfo(this.props.song.title,this.props.song.difficulty)}`\r\n          );\r\n        }\r\n      break;\r\n      case 3:\r\n        window.open(\"https://twitter.com/intent/tweet?&text=\");\r\n      break;\r\n    }\r\n    return this.toggleMenu();\r\n  }\r\n\r\n  toggleFavorited = async():Promise<void>=>{\r\n    try{\r\n      const {favorited} = this.state;\r\n      const {song} = this.props;\r\n      const db = new songsDB();\r\n      if(!song){\r\n        throw new Error();\r\n      }\r\n      await db.toggleFavorite(song.title,song.difficulty,!favorited);\r\n      this.toggleSuccessSnack();\r\n      return this.setState({\r\n        favorited:!favorited\r\n      });\r\n    }catch(e){\r\n      console.log(e);\r\n      return;\r\n    }\r\n  }\r\n\r\n  toggleSuccessSnack = ()=>this.setState({successSnack:!this.state.successSnack})\r\n  toggleErrorSnack = ()=>this.setState({errorSnack:!this.state.errorSnack})\r\n\r\n  calcRank = ()=> this.props.score ? `${this.calc.rank(!Number.isNaN(this.state.newBPI) ? this.state.newBPI : this.props.score.currentBPI)}` : \"-\";\r\n\r\n  saveAndClose = async()=>{\r\n    try{\r\n      const {newBPI,newScore} = this.state;\r\n      const {score,song,willDelete} = this.props;\r\n      if(!song || !score){return;}\r\n      this.setState({isSaving:true});\r\n      const scores = new scoresDB(), scoreHist = new scoreHistoryDB();\r\n      await scores.updateScore(score,{currentBPI:newBPI,exScore:newScore});\r\n      await scoreHist.add(Object.assign(score,{difficultyLevel:song.difficultyLevel}),{currentBPI:newBPI,exScore:newScore});\r\n      this.props.handleOpen(true,null,willDelete ? {title:score.title,difficulty:score.difficulty} : null);\r\n    }catch(e){\r\n      return this.setState({errorSnack:true,errorSnackMessage:e});\r\n    }\r\n  }\r\n\r\n  showRank = (isBody:boolean):string=>{\r\n    const {song,score} = this.props;\r\n    const {newScore} = this.state;\r\n    if(!song || !score){return \"-\";}\r\n    const max:number = song.notes * 2;\r\n    const s:number = !Number.isNaN(newScore) ? newScore : score.exScore;\r\n    const percentage:number =  s  / max;\r\n    if(percentage < 2/9){\r\n      return !isBody ? \"E-\" : `${Math.ceil(max * 2/9 - s)}`;\r\n    }\r\n    if(percentage >= 2/9 && percentage < 1/3){\r\n      return !isBody ? \"D-\" : `${Math.ceil(max * 1/3 - s)}`;\r\n    }\r\n    if(percentage >= 1/3 && percentage < 4/9){\r\n      return !isBody ? \"C-\" : `${Math.ceil(max * 4/9 - s)}`;\r\n    }\r\n    if(percentage >= 4/9 && percentage < 5/9){\r\n      return !isBody ? \"B-\" : `${Math.ceil(max * 5/9 - s)}`;\r\n    }\r\n    if(percentage >= 5/9 && percentage < 2/3){\r\n      return !isBody ? \"A-\" : `${Math.ceil(max * 2/3 - s)}`;\r\n    }\r\n    if(percentage >= 2/3 && percentage < 7/9){\r\n      return !isBody ? \"AA-\" : `${Math.ceil(max * 7/9 - s)}`;\r\n    }\r\n    if(percentage >= 7/9 && percentage < 8/9){\r\n      return !isBody ? \"AAA-\" : `${Math.ceil(max * 8/9 - s)}`;\r\n    }\r\n    if(percentage >= 8/9 && percentage < 17/18){\r\n      return !isBody ? \"AAA+\" : `${Math.floor(s - max * 8/9)}`;\r\n    }\r\n    if(percentage >= 17/18){\r\n      return !isBody ? \"MAX-\" : `${Math.ceil(max - s)}`;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  render(){\r\n    const {formatMessage} = this.props.intl;\r\n    const {isOpen,handleOpen,song,score} = this.props;\r\n    const {isSaving,newScore,newBPI,showCharts,chartData,currentTab,anchorEl,favorited,successSnack,errorSnack,errorSnackMessage} = this.state;\r\n    if(!song || !score){\r\n      return (null);\r\n    }\r\n    const detectStarIconColor = favorited ? \"#ffd700\" : \"#c3c3c3\";\r\n    return (\r\n      <Dialog id=\"detailedScreen\" className={_currentTheme() === \"dark\" ? \"darkDetailedScreen\" : \"lightDetailedScreen\"} fullScreen open={isOpen} onClose={handleOpen} style={{overflowX:\"hidden\",width:\"100%\"}}>\r\n        <AppBar>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={()=>handleOpen(false)} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className=\"be-ellipsis\" style={{flexGrow:1}}>\r\n              {song.title + _prefixFromNum(song.difficulty)}\r\n            </Typography>\r\n            {(!Number.isNaN(newBPI) || !Number.isNaN(newScore)) &&\r\n              <div style={{position:\"relative\"}}>\r\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.saveAndClose} disabled={isSaving}>\r\n                  <FormattedMessage id=\"Details.SaveButton\"/>\r\n                </Button>\r\n                {isSaving && <CircularProgress size={24} style={{color:\"#ccc\",position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}} />}\r\n              </div>\r\n            }\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Toolbar/>\r\n        <Paper>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={4} style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",margin:\"10px 0\"}}>\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"textSecondary\">\r\n                BPI\r\n              </Typography>\r\n              <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\">\r\n                {(score && Number.isNaN(newBPI) && !Number.isNaN(score.currentBPI)) && score.currentBPI}\r\n                {!Number.isNaN(newBPI) && newBPI}\r\n                {(Number.isNaN(score.currentBPI) && Number.isNaN(newBPI)) && <span>-</span>}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4} style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",margin:\"10px 0\"}}>\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"textSecondary\">\r\n                {score && <span>{this.showRank(false)}</span>}\r\n              </Typography>\r\n              <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\">\r\n                {score && <span>{this.showRank(true)}</span>}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={4} style={{display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",margin:\"10px 0\"}}>\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"textSecondary\">\r\n                RANK\r\n              </Typography>\r\n              <Typography component=\"h4\" variant=\"h4\" color=\"textPrimary\">\r\n                {(!Number.isNaN(score.currentBPI) || !Number.isNaN(newBPI)) && <span>{this.calcRank()}</span>}\r\n                {(Number.isNaN(score.currentBPI) && Number.isNaN(newBPI)) && <span>-</span>}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider/>\r\n          <Grid container>\r\n            <Grid item xs={8}>\r\n              <form noValidate autoComplete=\"off\" style={{margin:\"10px 6px 0\"}}>\r\n                <TextField\r\n                  type=\"number\"\r\n                  style={{width:\"100%\"}}\r\n                  label={<FormattedMessage id=\"Details.typeNewScore\"/>}\r\n                  value={!Number.isNaN(newScore) ? newScore : score ? score.exScore : 0}\r\n                  onChange={this.handleScoreInput}\r\n                />\r\n              </form>\r\n            </Grid>\r\n            <Grid item xs={1} style={{display:\"flex\",alignItems:\"center\",justifyContent:\"flex-end\"}}>\r\n              <div style={{margin:\"10px 6px 0\"}}>\r\n                <TooltipMUI title={<FormattedMessage id={favorited ? \"Details.FavButtonRemove\" : \"Details.FavButton\"}/>} aria-label=\"add\">\r\n                  <StarIcon style={{fontSize:\"35px\",color:detectStarIconColor,position:\"relative\",top:\"3px\"}}\r\n                    onClick={this.toggleFavorited}/>\r\n                </TooltipMUI>\r\n              </div>\r\n              <ShowSnackBar\r\n                message={\r\n                  favorited ? formatMessage({id:\"Details.FavButtonAdded\"}) : formatMessage({id:\"Details.FavButtonRemoved\"})}\r\n                variant=\"success\" handleClose={this.toggleSuccessSnack} open={successSnack} autoHideDuration={1000}/>\r\n            </Grid>\r\n            <Grid item xs={1} style={{display:\"flex\",alignItems:\"center\",justifyContent:\"flex-end\"}}>\r\n              <IconButton style={{margin:\"10px 6px 0\"}}\r\n                aria-haspopup=\"true\"\r\n                onClick={this.toggleMenu}>\r\n                  <MoreVertIcon />\r\n              </IconButton>\r\n              <Menu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={()=>this.toggleMenu()}\r\n                >\r\n                  <MenuItem onClick={()=>this.jumpWeb(0)}>TexTage</MenuItem>\r\n                  <MenuItem onClick={()=>this.jumpWeb(1)}>YouTube</MenuItem>\r\n                  <MenuItem onClick={()=>this.jumpWeb(2)}>IIDX.info</MenuItem>\r\n                  <MenuItem onClick={()=>this.jumpWeb(3)}><FormattedMessage id=\"Common.Tweet\"/></MenuItem>\r\n                </Menu>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        <Tabs\r\n          value={currentTab}\r\n          variant=\"fullWidth\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          onChange={this.handleTabChange}>\r\n          <Tab label={<FormattedMessage id=\"Details.Graph\"/>} />\r\n          <Tab label={<FormattedMessage id=\"Details.Details\"/>} />\r\n          <Tab label={<FormattedMessage id=\"Details.Diffs\"/>} />\r\n        </Tabs>\r\n        <TabPanel value={currentTab} index={0}>\r\n          {showCharts &&\r\n            <BPIChart song={song} score={score} chartData={chartData} graphLastUpdated={this.state.graphLastUpdated}/>\r\n          }\r\n        </TabPanel>\r\n        <TabPanel value={currentTab} index={1}>\r\n          <SongDetails song={song} score={score}/>\r\n        </TabPanel>\r\n        <TabPanel value={currentTab} index={2}>\r\n          <SongDiffs song={song} score={score}/>\r\n        </TabPanel>\r\n        <ShowSnackBar message={errorSnackMessage} variant=\"warning\"\r\n            handleClose={this.toggleErrorSnack} open={errorSnack} autoHideDuration={3000}/>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(injectIntl(DetailedSongInformation));\r\n","import { _prefix } from \"../../../../components/songs/filter\";\r\n\r\nexport const diffColor = (i:number,row: any):string=>{\r\n  if(i !== 0){return \"transparent\";}\r\n  switch (row.clearState){\r\n    case 0 : return \"#e0dede\";\r\n    case 1 : return \"#ea63ff\";\r\n    case 2 : return \"#acffab\";\r\n    case 3 : return \"#ff707a\";\r\n    case 4 : return \"#ff4545\";\r\n    case 5 : return \"#fff373\";\r\n    case 6 : return \"#ff793b\";\r\n    default: return \"rgba(255,255,255,.55)\";\r\n  }\r\n}\r\n\r\nexport const behindScore = (row:any,allSongsData:{[key:string]:any},mode:number)=>{\r\n  try{\r\n    const ghost = [1,2/3,7/9,8/9,1];\r\n    const max = allSongsData[row.title + _prefix(row.difficulty)][\"notes\"] * 2;\r\n    return Math.ceil(max * ghost[mode] - row.exScore)\r\n  }catch(e){\r\n    return;\r\n  }\r\n}\r\n\r\nexport const bp = (bp:number):string=>{\r\n  if(Number.isNaN(bp)){\r\n    return \"-\";\r\n  }\r\n  return String(bp);\r\n}\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport {scoreData, songData} from \"../../../../types/data\";\r\nimport { _prefix } from \"../../../../components/songs/filter\";\r\nimport DetailedSongInformation from \"../detailsScreen\";\r\nimport { diffColor, behindScore, bp } from \"../common\";\r\n\r\nconst columns = [\r\n  { id: \"difficultyLevel\", label: \"☆\"},\r\n  { id: \"title\", label: \"曲名\" },\r\n  { id: \"currentBPI\", label: \"BPI\"},\r\n  {\r\n    id: \"exScore\",\r\n    label: \"EX\",\r\n  },\r\n];\r\n\r\ninterface P{\r\n  data:scoreData[],\r\n  sort:number,\r\n  isDesc:boolean,\r\n  changeSort:(newNum:number)=>void,\r\n  mode:number,\r\n  allSongsData:{[key:string]:any}\r\n  updateScoreData:()=>void,\r\n  page:number,\r\n  handleChangePage:(_e:React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage:number)=>void\r\n}\r\n\r\ninterface S{\r\n  rowsPerPage:number,\r\n  isOpen:boolean,\r\n  currentSongData:songData | null,\r\n  currentScoreData:scoreData | null\r\n}\r\n\r\nexport default class SongsTable extends React.Component<Readonly<P>,S>{\r\n\r\n  constructor(props:Readonly<P>){\r\n    super(props);\r\n    this.state = {\r\n      rowsPerPage : 10,\r\n      isOpen:false,\r\n      currentSongData:null,\r\n      currentScoreData:null\r\n    }\r\n  }\r\n\r\n  handleOpen = (updateFlag:boolean,row?:any,_willDeleteItems?:any):void=> {\r\n    if(updateFlag){this.props.updateScoreData();}\r\n    return this.setState({\r\n      isOpen:!this.state.isOpen,\r\n      currentSongData:row ? this.props.allSongsData[row.title + _prefix(row.difficulty)] : null,\r\n      currentScoreData:row ? row : null\r\n    });\r\n  }\r\n\r\n  handleChangeRowsPerPage = (event:React.ChangeEvent<HTMLInputElement>):void => {\r\n    this.props.handleChangePage(null,0);\r\n    this.setState({rowsPerPage:+event.target.value});\r\n  }\r\n\r\n  render(){\r\n    const {rowsPerPage,isOpen,currentSongData,currentScoreData} = this.state;\r\n    const {page,data,changeSort,sort,isDesc,mode} = this.props;\r\n    return (\r\n      <Paper style={{width:\"100%\",overflowX:\"auto\"}}>\r\n        <div>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column,i) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    onClick={()=>changeSort(i)}\r\n                  >\r\n                    {(mode < 5 || i !== 2 ) && column.label}\r\n                    {(mode > 4 && i === 2) && \"BP\"}\r\n                    {i === sort &&\r\n                      <span>\r\n                        { isDesc && <span>▼</span> }\r\n                        { !isDesc && <span>▲</span> }\r\n                      </span>\r\n                    }\r\n                    {i !== sort && <span>△</span>}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:any,i:number) => {\r\n                return (\r\n                  <TableRow\r\n                    onClick={()=>this.handleOpen(false,row)}\r\n                    hover role=\"checkbox\" tabIndex={-1} key={row.title} className={ i % 2 ? \"isOdd\" : \"isEven\"}>\r\n                    {columns.map((column,j) => {\r\n                      const prefix = row.difficulty === \"hyper\" ? \"(H)\" : row.difficulty === \"leggendaria\" ? \"(†)\" : \"\";\r\n                      return (\r\n                        <TableCell key={column.id + prefix} style={{backgroundColor : diffColor(j,row),position:\"relative\"}}>\r\n                          {(mode < 5 || column.id !== \"currentBPI\") && row[column.id]}\r\n\r\n                          {column.id === \"title\" && prefix}\r\n                          {(mode > 0 && mode < 5 && column.id === \"exScore\") &&\r\n                            <span>(-{behindScore(row,this.props.allSongsData,mode)})</span>\r\n                          }\r\n                          {(mode > 4 && column.id === \"currentBPI\") && bp(row.missCount)}\r\n                          {(j === 3 && mode === 0 && row.lastScore > -1) && <span className=\"plusOverlayScore\">\r\n                            {row.exScore - row.lastScore > 0 ? \"+\" + Number(row.exScore - row.lastScore) : row.exScore - row.lastScore}\r\n                            </span>\r\n                          }\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={this.props.data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          labelRowsPerPage=\"\"\r\n          backIconButtonProps={{\r\n            \"aria-label\": \"previous page\",\r\n          }}\r\n          nextIconButtonProps={{\r\n            \"aria-label\": \"next page\",\r\n          }}\r\n          onChangePage={this.props.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n        {isOpen &&\r\n          <DetailedSongInformation isOpen={isOpen} song={currentSongData} score={currentScoreData} handleOpen={this.handleOpen}/>\r\n        }\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport {songsDB} from \"../../../../components/indexedDB\";\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport SongsTable from \"./tablePlayed\";\r\nimport Input from '@material-ui/core/Input';\r\n\r\nimport {scoreData} from \"../../../../types/data\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { _prefix, _prefixFromNum } from '../../../../components/songs/filter';\r\n\r\nimport equal from 'fast-deep-equal'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { _isSingle } from '../../../../components/settings';\r\nimport moment from 'moment';\r\n\r\ninterface stateInt {\r\n  isLoading:boolean,\r\n  filterByName:string,\r\n  scoreData:scoreData[],\r\n  allSongsData:{[key:string]:any},\r\n  options:{[key:string]:string[]},\r\n  sort:number,\r\n  isDesc:boolean,\r\n  mode:number,\r\n  range:number,\r\n  page:number,\r\n}\r\n\r\ninterface P{\r\n  title:string,\r\n  full:scoreData[],\r\n  updateScoreData:()=>Promise<void>,\r\n}\r\n\r\nexport default class SongsList extends React.Component<P,stateInt> {\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state = {\r\n      isLoading:true,\r\n      filterByName:\"\",\r\n      scoreData:[],\r\n      allSongsData:{},\r\n      mode:0,\r\n      sort:2,\r\n      isDesc:true,\r\n      options:{\r\n        level:[\"11\",\"12\"],\r\n        difficulty:[\"0\",\"1\",\"2\"],\r\n      },\r\n      range:0,\r\n      page:0,\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  handleChangePage = (_e:React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage:number):void => this.setState({page:newPage});\r\n\r\n  async componentDidMount(){\r\n    let allSongs:{[key:string]:string|number} = {};\r\n    const allSongsRawData = await new songsDB().getAll(_isSingle());\r\n    for(let i =0; i < allSongsRawData.length; ++i){\r\n      const prefix:string = _prefixFromNum(allSongsRawData[i][\"difficulty\"]);\r\n      allSongs[allSongsRawData[i][\"title\"] + prefix] = allSongsRawData[i];\r\n    }\r\n    this.setState({\r\n      scoreData:this.props.full,\r\n      allSongsData:allSongs,\r\n      isLoading:false,\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps:P){\r\n    if(!equal(prevProps.full,this.props.full)){\r\n      return this.setState({scoreData:this.songFilter()});\r\n    }\r\n  }\r\n\r\n  updateScoreData():Promise<void>{\r\n    return this.props.updateScoreData();\r\n  }\r\n\r\n  handleLevelChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"level\");\r\n  }\r\n\r\n  handleDiffChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"difficulty\");\r\n  }\r\n\r\n  handleExec = (name:string,checked:boolean,target:string)=>{\r\n    let newState = this.state;\r\n    if(checked){\r\n      newState[\"options\"][target].push(name);\r\n    }else{\r\n      newState[\"options\"][target] = newState[\"options\"][target].filter((t:string)=> t !== name);\r\n    }\r\n    return this.setState({scoreData:this.songFilter(newState),options:newState[\"options\"],page:0});\r\n  }\r\n\r\n  handleInputChange = (e:React.ChangeEvent<HTMLInputElement|HTMLTextAreaElement>|null)=>{\r\n    let newState = this.cloneState();\r\n    newState.filterByName = e ? e.target.value : \"\";\r\n    return this.setState({scoreData:this.songFilter(newState),filterByName:newState.filterByName,page:0});\r\n  }\r\n\r\n  songFilter = (newState:{[s:string]:any} = this.state) =>{\r\n    const diffs:string[] = [\"hyper\",\"another\",\"leggendaria\"];\r\n    const m = newState.mode;\r\n    const r = newState.range;\r\n    const f = this.state.allSongsData;\r\n\r\n    const evaluateRange = (data:scoreData):boolean=>{\r\n      const format = (t:string|Date)=>moment(t).format(\"YYYYMMDD\");\r\n      return r === 0 ? true :\r\n      r === 1 ? format(data.updatedAt) === format(new Date()) :\r\n      moment(data.updatedAt).week() === moment(new Date()).week()\r\n    }\r\n\r\n    const evaluateMode = (data:scoreData,max:number):boolean=>{\r\n      return m === 0 ? true :\r\n      m === 1 ? data.exScore / max < 2 / 3 :\r\n      m === 2 ? data.exScore / max < 7 / 9 && 2/3 < data.exScore / max :\r\n      m === 3 ? data.exScore / max < 8 / 9 && 7/9 < data.exScore / max :\r\n      m === 4 ? true :\r\n      m === 5 ? data.clearState <= 3 :\r\n      m === 6 ? data.clearState <= 4 :\r\n      m === 7 ? data.clearState <= 5 : true\r\n    }\r\n    \r\n    if(Object.keys(this.state.allSongsData).length === 0){return [];}\r\n    return this.props.full.filter((data)=>{\r\n      if(!f[data.title + _prefix(data[\"difficulty\"])]){return false;}\r\n      const max = f[data.title + _prefix(data[\"difficulty\"])][\"notes\"] * 2;\r\n      return (\r\n        evaluateRange(data) &&\r\n        evaluateMode(data,max) &&\r\n        newState[\"options\"][\"level\"].some((item:string)=>{\r\n          return item === data.difficultyLevel }) &&\r\n        newState[\"options\"][\"difficulty\"].some((item:number)=>{\r\n          return diffs[Number(item)] === data.difficulty} ) &&\r\n        data.title.toLowerCase().indexOf(newState[\"filterByName\"].toLowerCase()) > -1\r\n      )\r\n    })\r\n  }\r\n\r\n  changeSort = (newNum:number):void=>{\r\n    const {sort,isDesc} = this.state;\r\n    if(sort === newNum){\r\n      return this.setState({isDesc:!isDesc});\r\n    }\r\n    return this.setState({sort:newNum,isDesc:true})\r\n  }\r\n\r\n  sortedData = ():scoreData[]=>{\r\n    const {scoreData,sort,isDesc,mode,allSongsData} = this.state;\r\n    const res = scoreData.sort((a,b)=> {\r\n      switch(sort){\r\n        case 0:\r\n        return Number(b.difficultyLevel) - Number(a.difficultyLevel);\r\n        case 1:\r\n        return b.title.localeCompare(a.title, \"ja\", {numeric:true});\r\n        default:\r\n        case 2:\r\n        if(mode > 4){\r\n          if(!a.missCount || !b.missCount){\r\n            return -1;\r\n          }\r\n          return  a.missCount-b.missCount || (a.missCount||Infinity)-(b.missCount||Infinity) || 0\r\n        }\r\n        return b.currentBPI - a.currentBPI;\r\n        case 3:\r\n        if(mode > 0 && mode < 5){\r\n          const aMax = allSongsData[a.title + _prefix(a.difficulty)][\"notes\"] * 2;\r\n          const bMax = allSongsData[b.title + _prefix(b.difficulty)][\"notes\"] * 2;\r\n          return b.exScore / bMax - a.exScore / aMax;\r\n        }\r\n        return b.exScore - a.exScore;\r\n      }\r\n    });\r\n    return isDesc ? res : res.reverse();\r\n  }\r\n\r\n  handleModeChange = (event:React.ChangeEvent<{name?:string|undefined; value:unknown;}>):void =>{\r\n    if (typeof event.target.value !== \"number\") { return; }\r\n    let newState = this.cloneState();\r\n    newState.mode = event.target.value;\r\n    return this.setState({scoreData:this.songFilter(newState),mode:event.target.value});\r\n  }\r\n\r\n  handleRangeCange = (event:React.ChangeEvent<{name?:string|undefined; value:unknown;}>):void =>{\r\n    if (typeof event.target.value !== \"number\") { return; }\r\n    let newState = this.cloneState();\r\n    newState.range = event.target.value;\r\n    return this.setState({scoreData:this.songFilter(newState),range:event.target.value});\r\n  }\r\n\r\n  // readonly修飾子が付いているデータに一時的な書き込みをするための措置\r\n  // (曲目フィルタのためにのみ使用し、stateには反映しない)\r\n  // アンチパターンなのでなんとかする\r\n  cloneState = () => JSON.parse(JSON.stringify(this.state))\r\n\r\n  render(){\r\n    const {isLoading,filterByName,options,sort,isDesc,mode,range,page} = this.state;\r\n    if(isLoading){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>);\r\n    }\r\n    return (\r\n      <Container className=\"commonLayout\" fixed id=\"songsVil\">\r\n        <Typography component=\"h5\" variant=\"h5\" color=\"textPrimary\" gutterBottom\r\n          style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n          <FormattedMessage id={this.props.title}/>\r\n          <FormControl>\r\n            <Select value={range} displayEmpty onChange={this.handleRangeCange}>\r\n              <MenuItem value={0}>全期間</MenuItem>\r\n              <MenuItem value={1}>本日更新分</MenuItem>\r\n              <MenuItem value={2}>今週更新分</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Typography>\r\n        <Grid container spacing={1} style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={6}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n              <InputLabel><FormattedMessage id=\"Songs.mode\"/></InputLabel>\r\n              <Select value={mode} onChange={this.handleModeChange}>\r\n                <MenuItem value={0}><FormattedMessage id=\"Songs.mode0\"/></MenuItem>\r\n                <MenuItem value={1}><FormattedMessage id=\"Songs.mode1\"/></MenuItem>\r\n                <MenuItem value={2}><FormattedMessage id=\"Songs.mode2\"/></MenuItem>\r\n                <MenuItem value={3}><FormattedMessage id=\"Songs.mode3\"/></MenuItem>\r\n                <MenuItem value={4}><FormattedMessage id=\"Songs.mode4\"/></MenuItem>\r\n                <MenuItem value={5}><FormattedMessage id=\"Songs.mode5\"/></MenuItem>\r\n                <MenuItem value={6}><FormattedMessage id=\"Songs.mode6\"/></MenuItem>\r\n                <MenuItem value={7}><FormattedMessage id=\"Songs.mode7\"/></MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\" style={{width:\"100%\"}}>\r\n            <InputLabel htmlFor=\"standard-adornment-password\"><FormattedMessage id=\"Songs.filterByName\"/></InputLabel>\r\n              <Input\r\n                style={{width:\"100%\"}}\r\n                placeholder={\"(ex.)255\"}\r\n                value={filterByName}\r\n                onChange={this.handleInputChange}\r\n                endAdornment={\r\n                  filterByName &&\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={()=>this.handleInputChange(null)}>\r\n                      <BackspaceIcon/>\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} id=\"mainFilters\" style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByLevel\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"11\")} onChange={this.handleLevelChange(\"11\")} value=\"11\" />}\r\n                  label=\"☆11\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"12\")} onChange={this.handleLevelChange(\"12\")} value=\"12\" />}\r\n                  label=\"☆12\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByDifficulty\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"0\")} onChange={this.handleDiffChange(\"0\")} value=\"hyper\" />}\r\n                  label=\"H\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"1\")} onChange={this.handleDiffChange(\"1\")} value=\"another\" />}\r\n                  label=\"A\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"2\")} onChange={this.handleDiffChange(\"2\")} value=\"leggendaria\" />}\r\n                  label=\"†\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <SongsTable\r\n          page={page} handleChangePage={this.handleChangePage}\r\n          data={this.sortedData()} sort={sort} isDesc={isDesc} mode={mode}\r\n          changeSort={this.changeSort} allSongsData={this.state.allSongsData}\r\n          updateScoreData={this.updateScoreData}/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport SongsList from '../components/songs/played/songsList';\r\nimport { scoresDB } from '../../components/indexedDB';\r\nimport { scoreData } from '../../types/data';\r\n\r\ninterface S {\r\n  full:scoreData[]\r\n}\r\n\r\nexport default class Songs extends React.Component<{},S> {\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.state ={\r\n      full:[]\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.updateScoreData();\r\n  }\r\n\r\n  async updateScoreData(){\r\n    const full:scoreData[] = await new scoresDB().getAll();\r\n    this.setState({full:full});\r\n  }\r\n\r\n  render(){\r\n    if(!this.state.full){\r\n      return (null);\r\n    }\r\n    return (\r\n      <div>\r\n        <SongsList title=\"Songs.title\" full={this.state.full} updateScoreData={this.updateScoreData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport SongsList from '../components/songs/played/songsList';\r\nimport { scoresDB, songsDB } from '../../components/indexedDB';\r\nimport { scoreData, songData } from '../../types/data';\r\nimport { difficultyDiscriminator } from '../../components/songs/filter';\r\nimport { _currentStore, _isSingle } from '../../components/settings';\r\n\r\ninterface S {\r\n  full:scoreData[]\r\n}\r\n\r\nexport default class Songs extends React.Component<{},S> {\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.state ={\r\n      full:[]\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.updateScoreData();\r\n  }\r\n\r\n  async updateScoreData(){\r\n    const db = new scoresDB();\r\n    const songs:songData[] = await new songsDB().getAllFavoritedItems();\r\n    let full:scoreData[] = [];\r\n    for(let i =0;i < songs.length;++i){\r\n      const song = songs[i];\r\n      const d = difficultyDiscriminator(song.difficulty);\r\n      const res = await db.getItem(song.title,d,_currentStore(),_isSingle());\r\n      if((_isSingle() && song[\"dpLevel\"] !== \"0\") || (!_isSingle() && song[\"dpLevel\"] === \"0\")){\r\n        continue;\r\n      }\r\n      if(res.length === 0){\r\n        full.push({\r\n          title:song.title,\r\n          clearState:7,\r\n          currentBPI:-15,\r\n          difficulty:d,\r\n          difficultyLevel:song.difficultyLevel,\r\n          exScore:0,\r\n          isSingle:_isSingle(),\r\n          storedAt:_currentStore(),\r\n          lastScore:-1,\r\n          updatedAt:\"-\",\r\n        });\r\n      }else{\r\n        full.push(res[0]);\r\n      }\r\n    }\r\n    this.setState({full:full});\r\n  }\r\n\r\n  render(){\r\n    if(!this.state.full){\r\n      return (null);\r\n    }\r\n    return (\r\n      <div>\r\n        <SongsList title=\"Favorites.Title\" full={this.state.full} updateScoreData={this.updateScoreData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport {scoreData, songData} from \"../../../../types/data\";\r\nimport DetailedSongInformation from \"../detailsScreen\";\r\nimport { difficultyDiscriminator } from '../../../../components/songs/filter';\r\nimport { _isSingle,_currentStore } from '../../../../components/settings';\r\n\r\nconst columns = [\r\n  { id: \"difficultyLevel\", label: \"☆\"},\r\n  { id: \"title\", label: \"曲名\" },\r\n];\r\n\r\ninterface P{\r\n  data:songData[],\r\n  sort:number,\r\n  isDesc:boolean,\r\n  changeSort:(newNum:number)=>void,\r\n  updateScoreData:(willDelete?:boolean,willDeleteItems?:{title:string,difficulty:string})=>void,\r\n  page:number,\r\n  handleChangePage:(_e:React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage:number)=>void\r\n}\r\n\r\ninterface S{\r\n  rowsPerPage:number,\r\n  isOpen:boolean,\r\n  currentSongData:songData | null,\r\n  currentScoreData:scoreData | null\r\n}\r\n\r\nexport default class SongsTable extends React.Component<Readonly<P>,S>{\r\n\r\n  constructor(props:Readonly<P>){\r\n    super(props);\r\n    this.state = {\r\n      rowsPerPage : 10,\r\n      isOpen:false,\r\n      currentSongData:null,\r\n      currentScoreData:null\r\n    }\r\n  }\r\n\r\n  handleOpen = (updateFlag:boolean = false,row?:any,willDeleteItems?:{title:string,difficulty:string}):void=> {\r\n    if(updateFlag){this.props.updateScoreData(true, willDeleteItems);}\r\n    const t = row ? {\r\n      difficulty:difficultyDiscriminator(row.difficulty),\r\n      title:row.title,\r\n      currentBPI:NaN,\r\n      exScore:0,\r\n      difficultyLevel:row.difficultyLevel,\r\n      storedAt:_currentStore(),\r\n      isSingle:_isSingle(),\r\n      clearState:7,\r\n      lastScore:-1,\r\n      updatedAt:\"-\",\r\n    } : null;\r\n    return this.setState({\r\n      isOpen:!this.state.isOpen,\r\n      currentSongData:row ? row : null,\r\n      currentScoreData:t\r\n    });\r\n  }\r\n\r\n  handleChangeRowsPerPage = (event:React.ChangeEvent<HTMLInputElement>):void => {\r\n    this.props.handleChangePage(null,0);\r\n    this.setState({rowsPerPage:+event.target.value});\r\n  }\r\n\r\n  render(){\r\n    const {rowsPerPage,isOpen,currentSongData,currentScoreData} = this.state;\r\n    const {page,data,changeSort,sort,isDesc} = this.props;\r\n    return (\r\n      <Paper style={{width:\"100%\",overflowX:\"auto\"}}>\r\n        <div>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column,i) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    onClick={()=>changeSort(i)}\r\n                  >\r\n                    {column.label}\r\n                    {i === sort &&\r\n                      <span>\r\n                        { isDesc && <span>▼</span> }\r\n                        { !isDesc && <span>▲</span> }\r\n                      </span>\r\n                    }\r\n                    {i !== sort && <span>△</span>}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:any,i:number) => {\r\n                return (\r\n                  <TableRow\r\n                    onClick={()=>this.handleOpen(false,row)}\r\n                    hover role=\"checkbox\" tabIndex={-1} key={row.title + row.difficulty} className={ i % 2 ? \"isOdd\" : \"isEven\"}>\r\n                    {columns.map((column,j) => {\r\n                      const d = difficultyDiscriminator(row.difficulty);\r\n                      const prefix = d === \"hyper\" ? \"(H)\" : d === \"leggendaria\" ? \"(†)\" : \"\";\r\n                      return (\r\n                        <TableCell key={column.id + prefix}>\r\n                          {row[column.id]}\r\n                          {column.id === \"title\" && prefix}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100]}\r\n          component=\"div\"\r\n          count={this.props.data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          labelRowsPerPage=\"\"\r\n          backIconButtonProps={{\r\n            \"aria-label\": \"previous page\",\r\n          }}\r\n          nextIconButtonProps={{\r\n            \"aria-label\": \"next page\",\r\n          }}\r\n          onChangePage={this.props.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n        {isOpen &&\r\n          <DetailedSongInformation isOpen={isOpen} song={currentSongData} score={currentScoreData} handleOpen={this.handleOpen} willDelete={true}/>\r\n        }\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormattedMessage } from \"react-intl\";\r\n\r\nimport SongsTable from \"./tableNotPlayed\";\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport {songData} from \"../../../../types/data\";\r\nimport { difficultyDiscriminator } from '../../../../components/songs/filter';\r\nimport equal from 'fast-deep-equal'\r\n\r\ninterface stateInt {\r\n  filterByName:string,\r\n  songData:songData[],\r\n  options:{[key:string]:string[]},\r\n  sort:number,\r\n  isDesc:boolean,\r\n  page:number,\r\n}\r\n\r\ninterface P{\r\n  title:string,\r\n  full:songData[],\r\n  updateScoreData:(whenUpdated:boolean,willDeleteItem?:{title:string,difficulty:string})=>Promise<void>,\r\n}\r\n\r\nexport default class NotPlayList extends React.Component<P,stateInt> {\r\n  _mounted: boolean = false;\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state = {\r\n      filterByName:\"\",\r\n      songData:[],\r\n      sort:1,\r\n      isDesc:false,\r\n      options:{\r\n        level:[\"11\",\"12\"],\r\n        difficulty:[\"0\",\"1\",\"2\"],\r\n      },\r\n      page:0,\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this._mounted = true;\r\n    this.setState({songData:this.songFilter()})\r\n  }\r\n\r\n  componentDidUpdate(prevProps:P){\r\n    if(!equal(prevProps.full,this.props.full)){\r\n      return this.setState({songData:this.songFilter()});\r\n    }\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this._mounted = false;\r\n  }\r\n\r\n  handleChangePage = (_event:React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage:number):void => this.setState({page:newPage});\r\n\r\n  updateScoreData(whenUpdated:boolean = false,willDeleteItem?:{title:string,difficulty:string}):Promise<void>{\r\n    if(!whenUpdated || !willDeleteItem){\r\n      return this.props.updateScoreData(false);\r\n    }\r\n    return this.props.updateScoreData(whenUpdated,willDeleteItem);\r\n  }\r\n\r\n  handleLevelChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"level\");\r\n  }\r\n\r\n  handleDiffChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"difficulty\");\r\n  }\r\n\r\n  handleExec = (name:string,checked:boolean,target:string)=>{\r\n    let newState = this.state;\r\n    if(checked){\r\n      newState[\"options\"][target].push(name);\r\n    }else{\r\n      newState[\"options\"][target] = newState[\"options\"][target].filter((t:string)=> t !== name);\r\n    }\r\n    return this.setState({songData:this.songFilter(newState),options:newState[\"options\"],page:0});\r\n  }\r\n\r\n  handleInputChange = (e:React.ChangeEvent<HTMLInputElement|HTMLTextAreaElement>|null)=>{\r\n    let newState = this.cloneState();\r\n    newState.filterByName = e ? e.target.value : \"\";\r\n\r\n    return this.setState({songData:this.songFilter(newState),filterByName:newState.filterByName,page:0});\r\n  }\r\n\r\n  songFilter = (newState:{[s:string]:any} = this.state) =>{\r\n    const diffs:string[] = [\"hyper\",\"another\",\"leggendaria\"];\r\n    return this.props.full.filter((data)=>{\r\n      return (\r\n        newState[\"options\"][\"level\"].some((item:string)=>{\r\n          return item === data.difficultyLevel }) &&\r\n        newState[\"options\"][\"difficulty\"].some((item:number)=>{\r\n          return diffs[Number(item)] === difficultyDiscriminator(data.difficulty)} ) &&\r\n        data.title.toLowerCase().indexOf(newState[\"filterByName\"].toLowerCase()) > -1\r\n      )\r\n    });\r\n  }\r\n\r\n  changeSort = (newNum:number):void=>{\r\n    const {sort,isDesc} = this.state;\r\n    if(sort === newNum){\r\n      return this.setState({isDesc:!isDesc});\r\n    }\r\n    return this.setState({sort:newNum,isDesc:true})\r\n  }\r\n\r\n  sortedData = ():songData[]=>{\r\n    const {songData,sort,isDesc} = this.state;\r\n    const res = songData.sort((a,b)=> {\r\n      switch(sort){\r\n        case 0:\r\n        return Number(b.difficultyLevel) - Number(a.difficultyLevel);\r\n        case 1:\r\n        default:\r\n        return b.title.localeCompare(a.title, \"ja\", {numeric:true});\r\n      }\r\n    });\r\n    return isDesc ? res : res.reverse();\r\n  }\r\n\r\n  // readonly修飾子が付いているデータに一時的な書き込みをするための措置\r\n  // (曲目フィルタのためにのみ使用し、stateには反映しない)\r\n  // アンチパターンなのでなんとかする\r\n  cloneState = () => JSON.parse(JSON.stringify(this.state))\r\n\r\n  render(){\r\n    const {filterByName,options,sort,isDesc,page} = this.state;\r\n    return (\r\n      <Container className=\"commonLayout\" fixed id=\"songsVil\">\r\n        <Typography component=\"h5\" variant=\"h5\" color=\"textPrimary\" gutterBottom\r\n          style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n          <FormattedMessage id={this.props.title}/>\r\n        </Typography>\r\n        <Grid container spacing={1} style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={12}>\r\n            <FormControl component=\"fieldset\" style={{width:\"100%\"}}>\r\n            <InputLabel htmlFor=\"standard-adornment-password\"><FormattedMessage id=\"Songs.filterByName\"/></InputLabel>\r\n              <Input\r\n                style={{width:\"100%\"}}\r\n                placeholder={\"(ex.)255\"}\r\n                value={filterByName}\r\n                onChange={this.handleInputChange}\r\n                endAdornment={\r\n                  filterByName &&\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton onClick={()=>this.handleInputChange(null)}>\r\n                      <BackspaceIcon/>\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} id=\"mainFilters\" style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByLevel\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"11\")} onChange={this.handleLevelChange(\"11\")} value=\"11\" />}\r\n                  label=\"☆11\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"12\")} onChange={this.handleLevelChange(\"12\")} value=\"12\" />}\r\n                  label=\"☆12\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByDifficulty\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"0\")} onChange={this.handleDiffChange(\"0\")} value=\"hyper\" />}\r\n                  label=\"H\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"1\")} onChange={this.handleDiffChange(\"1\")} value=\"another\" />}\r\n                  label=\"A\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"2\")} onChange={this.handleDiffChange(\"2\")} value=\"leggendaria\" />}\r\n                  label=\"†\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <SongsTable\r\n          page={page} handleChangePage={this.handleChangePage}\r\n          data={this.sortedData()} sort={sort} isDesc={isDesc}\r\n          changeSort={this.changeSort}\r\n          updateScoreData={this.updateScoreData}/>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { scoresDB, songsDB } from '../../components/indexedDB';\r\nimport { songData } from '../../types/data';\r\nimport { difficultyDiscriminator } from '../../components/songs/filter';\r\nimport { _isSingle,_currentStore } from '../../components/settings';\r\nimport Container from '@material-ui/core/Container';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport NotPlayList from '../components/songs/notplayed/notPlayList';\r\n\r\ninterface S {\r\n  full:songData[]\r\n}\r\n\r\nexport default class NotPlayed extends React.Component<{},S> {\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.state ={\r\n      full:[]\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.updateScoreData();\r\n  }\r\n\r\n  async updateScoreData(whenUpdated:boolean = false,willDeleteItem?:{title:string,difficulty:string}){\r\n    if(whenUpdated && willDeleteItem){\r\n      return this.setState({full:this.state.full.filter((item:songData)=>{\r\n        if(item.title !== willDeleteItem.title){\r\n          return true;\r\n        }else{\r\n          if(difficultyDiscriminator(item.difficulty) !== willDeleteItem.difficulty){\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      })});\r\n    }\r\n    const currentStore = _currentStore();\r\n    const isSingle = _isSingle();\r\n    const songs:songData[] = await new songsDB().getAll(isSingle);\r\n    const db = new scoresDB();\r\n    let full:songData[] = [];\r\n    for(let i =0;i < songs.length;++i){\r\n      let song = songs[i];\r\n      const res = await db.getItem(song.title,difficultyDiscriminator(song.difficulty),currentStore,isSingle);\r\n      if(res.length === 0) full.push(song);\r\n    }\r\n    this.setState({full:full});\r\n  }\r\n\r\n  render(){\r\n    if(this.state.full.length === 0){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>);\r\n    }\r\n    return (\r\n      <div id=\"_notPlayed\">\r\n        <NotPlayList title=\"NotPlayed.Title\" full={this.state.full} updateScoreData={this.updateScoreData}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { scoresDB, songsDB, scoreHistoryDB } from '../../components/indexedDB';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport bpiCalcuator from '../../components/bpi';\r\nimport {_isSingle,_currentStore, _chartColor} from \"../../components/settings\";\r\nimport moment from 'moment';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { XAxis, CartesianGrid, YAxis, Tooltip, Bar, ResponsiveContainer, Line, ComposedChart, LineChart, Legend } from 'recharts';\r\n\r\ninterface S {\r\n  isLoading:boolean,\r\n  totalBPI:number,\r\n  perDate:{name:string,sum:string,avg:number}[],\r\n  groupedByBPI:any[],\r\n}\r\n\r\nclass Stats extends React.Component<{intl:any},S> {\r\n\r\n  constructor(props:{intl:any}){\r\n    super(props);\r\n    this.state ={\r\n      isLoading:true,\r\n      totalBPI:0,\r\n      perDate:[],\r\n      groupedByBPI:[],\r\n    }\r\n    this.updateScoreData = this.updateScoreData.bind(this);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    await this.updateScoreData();\r\n  }\r\n\r\n  async updateScoreData(){\r\n    const db = new scoresDB();\r\n    const bpi = new bpiCalcuator();\r\n    const currentStore = _currentStore();\r\n    const isSingle = _isSingle();\r\n    const allSongsTwelvesBPI = await db.getAllTwelvesBPI(isSingle,currentStore,\"12\");\r\n    const allSongsElevensBPI = await db.getAllTwelvesBPI(isSingle,currentStore,\"11\");\r\n    bpi.allTwelvesBPI = allSongsTwelvesBPI;\r\n    bpi.allTwelvesLength = await new songsDB().getAllTwelvesLength(isSingle);\r\n    //compare by date\r\n    const allDiffs = (await new scoreHistoryDB().getAll(\"12\")).reduce((groups, item) => {\r\n      const date = moment(item.updatedAt).format(\"YYYY/MM/DD\");\r\n      if (!groups[date]) {\r\n        groups[date] = [];\r\n      }\r\n      groups[date].push(item);\r\n      return groups;\r\n    }, {});\r\n    let eachDaySum:{name:string,sum:string,avg:number,}[] = [];\r\n    Object.keys(allDiffs).map((item,i)=>{\r\n      if(i > 10){\r\n        return 0;\r\n      }\r\n      const avg:{BPI:number} = allDiffs[item].reduce((a:any,c:any)=>{return {BPI:a.BPI + c.BPI}});\r\n      eachDaySum.push({\r\n        name : item,\r\n        sum : allDiffs[item].length,\r\n        avg : Math.round(avg.BPI / allDiffs[item].length * 100) / 100\r\n      });\r\n      return 0;\r\n    });\r\n\r\n    let bpis = [-20,-10,0,10,20,30,40,50,60,70,80,90,100];\r\n    let groupedByBPI = [];\r\n    const twelvesBPIGrouped = this.groupByBPI(allSongsTwelvesBPI);\r\n    const elevensBPIGrouped = this.groupByBPI(allSongsElevensBPI);\r\n    for(let i = 0; i < bpis.length; ++i){\r\n      let obj:{\"name\":number,\"☆11\":number,\"☆12\":number} = {\"name\":bpis[i],\"☆11\":0,\"☆12\":0};\r\n      obj[\"☆11\"] = elevensBPIGrouped[bpis[i]] ? elevensBPIGrouped[bpis[i]] : 0;\r\n      obj[\"☆12\"] = twelvesBPIGrouped[bpis[i]] ? twelvesBPIGrouped[bpis[i]] : 0;\r\n      groupedByBPI.push(obj);\r\n    }\r\n\r\n    //BPI別集計\r\n    this.setState({\r\n      isLoading:false,\r\n      totalBPI:bpi.totalBPI(),\r\n      perDate:eachDaySum.sort((a,b)=> moment(a.name).diff(b.name)),\r\n      groupedByBPI:groupedByBPI\r\n    });\r\n  }\r\n\r\n  groupByBPI = (array:number[])=>{\r\n    return array.reduce((groups:{[key:number]:number}, item:number) => {\r\n      let _ = Math.floor(item / 10) * 10;\r\n      if(_ > 100) _ = 100\r\n      if (!groups[_]) {\r\n        groups[_] = 1;\r\n      }else{\r\n        groups[_]++;\r\n      }\r\n      return groups;\r\n    }, {});\r\n  }\r\n\r\n  render(){\r\n    const {totalBPI,isLoading,perDate,groupedByBPI} = this.state;\r\n    const {formatMessage} = this.props.intl;\r\n    const chartColor = _chartColor();\r\n    if(isLoading){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>\r\n      );\r\n    }\r\n    return (\r\n      <Container className=\"commonLayout\" fixed>\r\n        <Typography component=\"h5\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n          <FormattedMessage id=\"Stats.title\"/>\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={3} lg={3}>\r\n            <Paper style={{padding:\"15px\"}} className=\"responsiveTotalBPI\">\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                <FormattedMessage id=\"Stats.TotalBPI\"/>\r\n              </Typography>\r\n              <Typography component=\"h2\" variant=\"h2\" color=\"textPrimary\">\r\n                {totalBPI}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} md={9} lg={9}>\r\n            <Paper style={{padding:\"15px\",height:240}}>\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                <FormattedMessage id=\"Stats.EachDay\"/>\r\n              </Typography>\r\n              {perDate.length > 0 &&\r\n                <div style={{width:\"95%\",height:\"100%\",margin:\"5px auto\"}}>\r\n                  <ResponsiveContainer width=\"100%\">\r\n                    <ComposedChart\r\n                      data={perDate}\r\n                      margin={{\r\n                        top: 5, right: 30, left: -30, bottom: 25,\r\n                      }}>\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis dataKey=\"name\" stroke={chartColor} />\r\n                      <YAxis orientation=\"left\" tickLine={false} axisLine={false} stroke={chartColor}/>\r\n                      <Tooltip contentStyle={{color:\"#333\"}}/>\r\n                      <Bar dataKey=\"sum\" name={formatMessage({id:\"Stats.UpdatedSum\"})} fill=\"#82ca9d\" />\r\n                      <Line dataKey=\"avg\" name={formatMessage({id:\"Stats.Average\"})} />\r\n                    </ComposedChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              }\r\n              {perDate.length === 0 && <p>No data found.</p>}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <Paper style={{padding:\"15px\",height:270}}>\r\n              <Typography component=\"h6\" variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                <FormattedMessage id=\"Stats.Distribution\"/>\r\n              </Typography>\r\n              {(groupedByBPI.length > 0) &&\r\n                <div style={{width:\"95%\",height:\"100%\",margin:\"5px auto\"}}>\r\n                  <ResponsiveContainer width=\"100%\">\r\n                    <LineChart\r\n                      data={groupedByBPI}\r\n                      margin={{\r\n                        top: 5, right: 30, left: -30, bottom: 30,\r\n                      }}\r\n                      >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"name\" stroke={chartColor} />\r\n                        <YAxis stroke={chartColor}/>\r\n                        <Tooltip contentStyle={{color:\"#333\"}}/>\r\n                        <Legend />\r\n                        <Line type=\"monotone\" dataKey=\"☆11\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n                        <Line type=\"monotone\" dataKey=\"☆12\" stroke=\"#82ca9d\" />\r\n                      </LineChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              }\r\n              {groupedByBPI.length === 0 && <p>No data found.</p>}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(Stats);\r\n","import { Container } from 'unstated'\r\nimport { _lang,_currentStore, _currentTheme, _isSingle, _goalBPI, _goalPercentage } from '../settings'\r\n\r\ninterface S{\r\n  lang:string,\r\n  store:string,\r\n  theme:string,\r\n  cannotMove:boolean,\r\n  isSingle:number,\r\n  goalBPI:number,\r\n  goalPercentage:number,\r\n}\r\n\r\nexport default class GlobalContainer extends Container<S> {\r\n\r\n  constructor(){\r\n    super();\r\n    this.setLang = this.setLang.bind(this);\r\n    this.setStore = this.setStore.bind(this);\r\n    this.setTheme = this.setTheme.bind(this);\r\n    this.setIsSingle = this.setIsSingle.bind(this);\r\n    this.setGoalBPI = this.setGoalBPI.bind(this);\r\n    this.setGoalPercentage = this.setGoalPercentage.bind(this);\r\n  }\r\n\r\n  state = {\r\n    lang : _lang(),\r\n    store : _currentStore(),\r\n    theme : _currentTheme(),\r\n    isSingle : _isSingle(),\r\n    goalBPI : _goalBPI(),\r\n    goalPercentage : _goalPercentage(),\r\n    cannotMove: false\r\n  }\r\n\r\n  setLang(newLang:string) {\r\n    localStorage.setItem(\"lang\",newLang);\r\n    this.setState({ lang: newLang })\r\n  }\r\n\r\n  setStore(newStore:string){\r\n    localStorage.setItem(\"currentStore\",newStore);\r\n    this.setState({ store: newStore });\r\n  }\r\n\r\n  setTheme(newTheme:string){\r\n    localStorage.setItem(\"theme\",newTheme);\r\n    this.setState({ theme: newTheme });\r\n  }\r\n\r\n  setIsSingle(newState:number){\r\n    localStorage.setItem(\"isSingle\",String(newState));\r\n    this.setState({ isSingle: newState });\r\n  }\r\n\r\n  setGoalBPI(newState:number){\r\n    localStorage.setItem(\"goalBPI\",String(newState));\r\n    this.setState({ goalBPI: newState });\r\n  }\r\n\r\n  setGoalPercentage(newState:number){\r\n    localStorage.setItem(\"goalPercentage\",String(newState));\r\n    this.setState({ goalPercentage: newState });\r\n  }\r\n\r\n  setMove(newState:boolean) {\r\n    this.setState({ cannotMove: newState })\r\n  }\r\n\r\n}\r\n","export const config ={\r\n  versionNumber:\"5\",\r\n}\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Subscribe } from 'unstated';\r\nimport GlobalContainer from '../../components/context/global';\r\nimport Button from '@material-ui/core/Button';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport { _currentVersion, _isSingle } from '../../components/settings';\r\nimport { songsDB, scoresDB, scoreHistoryDB } from '../../components/indexedDB';\r\nimport { songData } from '../../types/data';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport { config } from '../../config';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\ninterface S {\r\n  isLoading:boolean,\r\n  disableUpdateBtn:boolean,\r\n  disableDeleteBtn:boolean,\r\n  currentVersion:string,\r\n  message:string,\r\n  message2:string,\r\n  currentResetStore:string,\r\n  isDialogOpen:boolean,\r\n}\r\n\r\ninterface P{\r\n  intl:any,\r\n  global:any\r\n}\r\n\r\nclass Settings extends React.Component<P,S> {\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state ={\r\n      isLoading:false,\r\n      disableUpdateBtn:false,\r\n      currentVersion:_currentVersion(),\r\n      message:\"\",\r\n      message2:\"\",\r\n      currentResetStore:\"27\",\r\n      disableDeleteBtn:false,\r\n      isDialogOpen:false,\r\n    }\r\n  }\r\n\r\n  deleteDef = async()=>{\r\n    try{\r\n      this.props.global.setMove(true);\r\n      this.setState({disableDeleteBtn:true,message2:\"\"});\r\n      const sdb = new scoresDB(), shdb = new scoreHistoryDB(),sodb = new songsDB();\r\n      const target = this.state.currentResetStore;\r\n      if(target === \"Songs Database\"){\r\n        await sodb.deleteAll();\r\n      }else{\r\n        await sdb.resetItems(target);\r\n        await shdb.reset(target);\r\n      }\r\n      this.setState({disableDeleteBtn:false,message2:\"正常に削除しました\"});\r\n    }catch(e){\r\n      console.log(e);\r\n      this.setState({disableDeleteBtn:false,message2:\"更新に失敗しました\"});\r\n    }\r\n    this.props.global.setMove(false);\r\n  }\r\n\r\n  toggleDialog = ()=> this.setState({isDialogOpen:!this.state.isDialogOpen})\r\n\r\n  updateDef = async()=>{\r\n    const end = ()=>{this.props.global.setMove(false);}\r\n    try{\r\n      this.props.global.setMove(true);\r\n      this.setState({disableUpdateBtn:true,message:\"\"});\r\n      const sdb = new songsDB();\r\n      const schDB = new scoreHistoryDB();\r\n      const reducer = (t:songData[])=>t.reduce((result:{[key:string]:songData}, current:songData) => {result[current.title + current.difficulty + current.dpLevel] = current;return result;}, {});\r\n      const allSongs = await sdb.getAllWithAllPlayModes().then(t=>reducer(t));\r\n      const res = await fetch(\"https://files.poyashi.me/json/songsWithDP.json\").then(t=>t.json());\r\n      if(Number(res.requireVersion) > Number(config.versionNumber) ){\r\n        end();\r\n        return this.setState({disableUpdateBtn:false,message:\"最新の定義データを導入するために本体を更新する必要があります:要求バージョン>=\"+ res.requireVersion });\r\n      }\r\n      if(res.version === this.state.currentVersion){\r\n        end();\r\n        return this.setState({disableUpdateBtn:false,message:\"定義データはすでに最新です\"});\r\n      }\r\n      const promiseProducer = ()=>{\r\n        return res.body.map((t:songData) => {\r\n          return new Promise(resolve=>{\r\n            const pfx = t[\"title\"] + t[\"difficulty\"] + t[\"dpLevel\"];\r\n            if(allSongs[pfx] && allSongs[pfx][\"dpLevel\"] === t[\"dpLevel\"]){\r\n              //既存曲\r\n              sdb.updateItem(t).then(()=>resolve());\r\n            }else{\r\n              //新曲\r\n              sdb.setItem(t).then(()=>resolve());\r\n            }\r\n          });\r\n        });\r\n      }\r\n      await Promise.all(promiseProducer());\r\n      const scDB = new scoresDB();\r\n      scDB.setNewSongsDBRawData(reducer(res.body));\r\n      await scDB.recalculateBPI();\r\n      await schDB.recalculateBPI();\r\n      localStorage.setItem(\"lastDefFileVer\",res.version);\r\n      this.setState({currentVersion:res.version,disableUpdateBtn:false,message:\"更新完了\"});\r\n    }catch(e){\r\n      console.log(e);\r\n      this.setState({disableUpdateBtn:false,message:\"更新に失敗しました\"});\r\n    }\r\n    end();\r\n    return;\r\n  }\r\n\r\n  render(){\r\n    const {isLoading,isDialogOpen,disableUpdateBtn,message,message2,currentResetStore,disableDeleteBtn} = this.state;\r\n    if(isLoading){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>\r\n      );\r\n    }\r\n    return (\r\n      <Subscribe to={[GlobalContainer]}>\r\n        {({state,setLang,setStore,setTheme,setIsSingle,setGoalBPI,setGoalPercentage}:GlobalContainer)=> (\r\n          <Container className=\"commonLayout\" fixed>\r\n            <Typography component=\"h5\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n              <FormattedMessage id=\"Settings.title\"/>\r\n            </Typography>\r\n            <Paper style={{padding:\"15px\"}}>\r\n              <FormControl>\r\n                <InputLabel><FormattedMessage id=\"Settings.language\"/></InputLabel>\r\n                <Select value={state.lang} onChange={(e:React.ChangeEvent<{ value: unknown }>,)=>{\r\n                  if(typeof e.target.value === \"string\"){\r\n                    setLang(e.target.value)\r\n                  }\r\n                }}>\r\n                  <MenuItem value=\"ja\">日本語</MenuItem>\r\n                  <MenuItem value=\"en\">English</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                <FormattedMessage id=\"Settings.noteLang\"/>\r\n              </Typography>\r\n              <Divider style={{margin:\"10px 0\"}}/>\r\n              <FormControl>\r\n                <InputLabel><FormattedMessage id=\"Settings.theme\"/></InputLabel>\r\n                <Select value={state.theme} onChange={(e:React.ChangeEvent<{ value: unknown }>,)=>{\r\n                  if(typeof e.target.value === \"string\"){\r\n                    setTheme(e.target.value)\r\n                  }\r\n                }}>\r\n                  <MenuItem value=\"light\">Light</MenuItem>\r\n                  <MenuItem value=\"dark\">Dark</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Divider style={{margin:\"10px 0\"}}/>\r\n              <FormControl>\r\n                <InputLabel><FormattedMessage id=\"Settings.dataStore\"/></InputLabel>\r\n                <Select value={state.store} onChange={(e:React.ChangeEvent<{ value: unknown }>,)=>{\r\n                  if(typeof e.target.value === \"string\"){\r\n                    setStore(e.target.value)\r\n                  }\r\n                }}>\r\n                  <MenuItem value=\"26\">26 Rootage</MenuItem>\r\n                  <MenuItem value=\"27\">27 HEROIC VERSE</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                <FormattedMessage id=\"Settings.noteMes1\"/>\r\n              </Typography>\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                <FormattedMessage id=\"Settings.inaccurateMes\"/>\r\n              </Typography>\r\n              <Divider style={{margin:\"10px 0\"}}/>\r\n              <Typography variant=\"caption\" display=\"block\" className=\"MuiFormLabel-root MuiInputLabel-animated MuiInputLabel-shrink\">\r\n                <FormattedMessage id=\"Settings.DPMode\"/>(beta)\r\n              </Typography>\r\n              <Switch\r\n                checked={state.isSingle === 0 ? true : false}\r\n                onChange={(e:React.ChangeEvent<HTMLInputElement>,)=>{\r\n                  if(typeof e.target.checked === \"boolean\"){\r\n                    setIsSingle(e.target.checked === true ? 0 : 1);\r\n                  }\r\n                }}\r\n              />\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                <FormattedMessage id=\"Settings.dpDescription\"/>\r\n              </Typography>\r\n              <Divider style={{margin:\"10px 0\"}}/>\r\n              <TextField\r\n                value={state.goalBPI}\r\n                label={<FormattedMessage id=\"Settings.MyGoalBPI\"/>}\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={(e:React.ChangeEvent<HTMLInputElement>,)=>{\r\n                  if(typeof e.target.value === \"string\"){\r\n                    setGoalBPI(Number(e.target.value) > 100 ? 100 : Number(e.target.value));\r\n                  }\r\n                }}\r\n                style={{margin:\"0 0 5px 0\",width:\"100%\"}}\r\n              />\r\n              <TextField\r\n                value={state.goalPercentage}\r\n                label={<FormattedMessage id=\"Settings.MyGoalPercentage\"/>}\r\n                type=\"number\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                onChange={(e:React.ChangeEvent<HTMLInputElement>,)=>{\r\n                  if(typeof e.target.value === \"string\"){\r\n                    setGoalPercentage(Number(e.target.value) > 100 ? 100 : Number(e.target.value));\r\n                  }\r\n                }}\r\n                style={{margin:\"0 0 5px 0\",width:\"100%\"}}\r\n              />\r\n              <Typography variant=\"caption\" display=\"block\">\r\n                <FormattedMessage id=\"Settings.MyGoalDescription\"/>\r\n              </Typography>\r\n              <Divider style={{margin:\"10px 0\"}}/>\r\n                <FormControl>\r\n                  <Typography variant=\"caption\" display=\"block\" className=\"MuiFormLabel-root MuiInputLabel-animated MuiInputLabel-shrink\">\r\n                    <FormattedMessage id=\"Settings.Update\"/>\r\n                  </Typography>\r\n                  <div style={{position:\"relative\"}}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      onClick={this.updateDef}\r\n                      disabled={disableUpdateBtn}\r\n                      startIcon={<UpdateIcon />}>\r\n                      <FormattedMessage id=\"Settings.UpdateResourcePacks\"/>\r\n                    </Button>\r\n                    {disableUpdateBtn && <CircularProgress size={24} style={{color:\"#777\",position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}} />}\r\n                  </div>\r\n                </FormControl>\r\n                <Typography variant=\"caption\" display=\"block\">\r\n                  {message}\r\n                </Typography>\r\n                <Typography variant=\"caption\" display=\"block\">\r\n                  <FormattedMessage id=\"Settings.currentVersion\"/>{this.state.currentVersion}\r\n                </Typography>\r\n                <Typography variant=\"caption\" display=\"block\">\r\n                  <FormattedMessage id=\"Settings.updateWarning\"/>\r\n                </Typography>\r\n                <Divider style={{margin:\"10px 0\"}}/>\r\n                <FormControl>\r\n                  <InputLabel><FormattedMessage id=\"Settings.dataClear\"/></InputLabel>\r\n                  <Select value={currentResetStore} onChange={(e:React.ChangeEvent<{ value: unknown }>,)=>{\r\n                    if(typeof e.target.value !== \"string\"){return;}\r\n                    this.setState({currentResetStore:e.target.value});\r\n                  }}>\r\n                    <MenuItem value=\"26\">26 Rootage</MenuItem>\r\n                    <MenuItem value=\"27\">27 HEROIC VERSE</MenuItem>\r\n                    <MenuItem value=\"Songs Database\">Songs Database</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <Typography variant=\"caption\" display=\"block\">\r\n                  <FormattedMessage id=\"Settings.resetWarning\"/>\r\n                </Typography>\r\n                <div style={{position:\"relative\"}}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    style={{background:\"#dc004e\"}}\r\n                    onClick={this.toggleDialog}\r\n                    disabled={disableDeleteBtn}\r\n                    startIcon={<DeleteForeverIcon />}>\r\n                    <FormattedMessage id=\"Settings.DeleteExec\"/>\r\n                  </Button>\r\n                  <Typography variant=\"caption\" display=\"block\">\r\n                    {message2}\r\n                  </Typography>\r\n                  <AlertDialog isDialogOpen={isDialogOpen} exec={this.deleteDef} close={this.toggleDialog} currentResetStore={currentResetStore}/>\r\n                  {disableDeleteBtn && <CircularProgress size={24} style={{color:\"#777\",position:\"absolute\",top:\"50%\",left:\"50%\",marginTop:-12,marginLeft:-12}} />}\r\n                </div>\r\n            </Paper>\r\n          </Container>\r\n        )}\r\n      </Subscribe>\r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(Settings);\r\n\r\nclass AlertDialog extends React.Component<{isDialogOpen:boolean,exec:()=>void,close:()=>void,currentResetStore:string},{}> {\r\n\r\n  handleOk = () => {\r\n    this.props.exec();\r\n    this.props.close();\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.close();\r\n  };\r\n\r\n  render(){\r\n    const {isDialogOpen,currentResetStore} = this.props;\r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={isDialogOpen}\r\n          onClose={this.handleClose}>\r\n          <DialogTitle>Confirm</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              <FormattedMessage id=\"Settings.DeleteDialogBody\"/><br/>\r\n              <FormattedMessage id=\"Settings.DeleteDialogBody2\"/><br/>\r\n              {currentResetStore === \"26\" ? \"26 Rootage\" : currentResetStore === \"27\" ? \"27 HEROIC VERSE\" : \"Songs Database\"}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleOk} color=\"secondary\" autoFocus>\r\n              Continue\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport DetailedSongInformation from \"../../components/songs/detailsScreen\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { scoreData, songData } from '../../../types/data';\r\nimport { diffColor } from \"../songs/common\";\r\n\r\ninterface S {\r\n  isOpen:boolean,\r\n  currentSongData:songData | null,\r\n  currentScoreData:scoreData | null,\r\n}\r\n\r\ninterface P{\r\n  isLoading:boolean,\r\n  full:any[],\r\n  page:number,\r\n  rowsPerPage:number,\r\n  handleChangePage:(newPage:number)=>void,\r\n  handleChangeRowsPerPage:(value:string)=>void,\r\n  changeSort:(value:number)=>void,\r\n  sort:number,\r\n  isDesc:boolean,\r\n}\r\n\r\nexport default class Compare extends React.Component<P,S> {\r\n\r\n  constructor(props:P){\r\n    super(props);\r\n    this.state ={\r\n      isOpen:false,\r\n      currentSongData:null,\r\n      currentScoreData:null,\r\n    }\r\n  }\r\n\r\n  handleOpen = async(updateFlag:boolean,row?:any):Promise<void>=> {\r\n    if(updateFlag){\r\n\r\n    }\r\n    return this.setState({\r\n      isOpen:!this.state.isOpen,\r\n      currentSongData:row ? row[\"songData\"] : null,\r\n      currentScoreData:row ? row[\"scoreData\"] : null\r\n    });\r\n  }\r\n\r\n  cloneState = () => JSON.parse(JSON.stringify(this.state))\r\n\r\n  handleChangePage = (_e:React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage:number):void => this.props.handleChangePage(newPage);\r\n\r\n  handleChangeRowsPerPage = (event:React.ChangeEvent<HTMLInputElement>):void => this.props.handleChangeRowsPerPage(event.target.value);\r\n\r\n  render(){\r\n    const {currentScoreData,currentSongData,isOpen} = this.state;\r\n    const {full,isLoading,page,rowsPerPage,changeSort,sort,isDesc} = this.props;\r\n\r\n    const columns = [\r\n      { id: \"difficultyLevel\", label: \"☆\"},\r\n      { id: \"title\", label: \"曲名\" },\r\n      { id: \"exScore\", label: \"S\"},\r\n      {\r\n        id: \"compareData\",\r\n        label: \"W\",\r\n      }\r\n    ];\r\n    if(isLoading){\r\n      return (\r\n        <Container className=\"loaderCentered\">\r\n          <CircularProgress />\r\n        </Container>\r\n      );\r\n    }\r\n    return (\r\n    <Paper style={{width:\"100%\",overflowX:\"auto\"}}>\r\n      <div>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column,i) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  onClick={()=>changeSort(i)}\r\n                >\r\n                  {column.label}\r\n                  {i === sort &&\r\n                    <span>\r\n                      { isDesc && <span>▼</span> }\r\n                      { !isDesc && <span>▲</span> }\r\n                    </span>\r\n                  }\r\n                  {i !== sort && <span>△</span>}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {full.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row:any,i:number) => {\r\n              return (\r\n                <TableRow\r\n                  onClick={()=>this.handleOpen(false,row)}\r\n                  hover role=\"checkbox\" tabIndex={-1} key={row.title} className={ i % 2 ? \"isOdd\" : \"isEven\"}>\r\n                  {columns.map((column,j) => {\r\n                    const prefix = row.difficulty === \"hyper\" ? \"(H)\" : row.difficulty === \"leggendaria\" ? \"(†)\" : \"\";\r\n                    return (\r\n                      <TableCell key={column.id + prefix} style={{backgroundColor : diffColor(j,row.scoreData),position:\"relative\"}}>\r\n                        {row[column.id]}\r\n                        {j === 1 && prefix}\r\n                        {(j === 3) && <span className=\"plusOverlayScore\">\r\n                          {row.gap}\r\n                          </span>\r\n                        }\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </div>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 50, 100]}\r\n        component=\"div\"\r\n        count={full.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        labelRowsPerPage=\"\"\r\n        backIconButtonProps={{\r\n          \"aria-label\": \"previous page\",\r\n        }}\r\n        nextIconButtonProps={{\r\n          \"aria-label\": \"next page\",\r\n        }}\r\n        onChangePage={this.handleChangePage}\r\n        onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n      />\r\n      {isOpen &&\r\n        <DetailedSongInformation isOpen={isOpen} song={currentSongData} score={currentScoreData} handleOpen={this.handleOpen}/>\r\n      }\r\n    </Paper>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport { scoresDB, songsDB } from '../../components/indexedDB';\r\nimport {_isSingle, _goalBPI, _goalPercentage} from \"../../components/settings\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport CompareTable from \"../components/compare/table\";\r\nimport bpiCalcuator from '../../components/bpi';\r\n\r\ninterface S {\r\n  isLoading:boolean,\r\n  full:any[],\r\n  filtered:any[],\r\n  sort:number,\r\n  isDesc:boolean,\r\n  options:{[key:string]:string[]},\r\n  filterByName:string,\r\n  compareFrom:string,\r\n  compareTo:string,\r\n  page:number,\r\n  rowsPerPage:number,\r\n}\r\n\r\nexport default class Compare extends React.Component<{},S> {\r\n  _mounted: boolean = false;\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.state ={\r\n      isLoading:true,\r\n      full:[],\r\n      filtered:[],\r\n      sort:3,\r\n      isDesc:true,\r\n      options:{\r\n        level:[\"11\",\"12\"],\r\n        difficulty:[\"0\",\"1\",\"2\"],\r\n        pm:[\"+\",\"-\"],\r\n      },\r\n      filterByName:\"\",\r\n      compareFrom:\"27\",\r\n      compareTo:\"26\",\r\n      page:0,\r\n      rowsPerPage:10,\r\n    }\r\n  }\r\n\r\n  async componentDidMount(){\r\n    this._mounted = true;\r\n    this.dataHandler();\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    this._mounted = false;\r\n  }\r\n\r\n  handleLevelChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"level\");\r\n  }\r\n\r\n  handleDiffChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"difficulty\");\r\n  }\r\n\r\n  handlePMChange = (name:string) => (e:React.ChangeEvent<HTMLInputElement>) =>{\r\n    this.handleExec(name,e.target.checked,\"pm\");\r\n  }\r\n\r\n  handleExec = (name:string,checked:boolean,target:string)=>{\r\n    let newState:S = this.state;\r\n    if(checked){\r\n      newState[\"options\"][target].push(name);\r\n    }else{\r\n      newState[\"options\"][target] = newState[\"options\"][target].filter((t:string)=> t !== name);\r\n    }\r\n    this.setState({options:newState[\"options\"]});\r\n    return this.filter();\r\n  }\r\n\r\n  changeSort = (newNum:number):void=>{\r\n    const {sort,isDesc} = this.state;\r\n    if(sort === newNum){\r\n      return this.setState({isDesc:!isDesc});\r\n    }\r\n    this.setState({sort:newNum,isDesc:true});\r\n  }\r\n\r\n  handleCompareFromChange = async (event:React.ChangeEvent<{name?:string|undefined; value:unknown;}>):Promise<void> =>{\r\n    if (typeof event.target.value !== \"string\") { return; }\r\n    let newState = this.cloneState();\r\n    newState.compareFrom = event.target.value;\r\n    this.setState({compareFrom:event.target.value,isLoading:true});\r\n    return this.dataHandler(newState);\r\n  }\r\n\r\n  handleCompareToChange = async (event:React.ChangeEvent<{name?:string|undefined; value:unknown;}>):Promise<void> =>{\r\n    if (typeof event.target.value !== \"string\") { return; }\r\n    let newState = this.cloneState();\r\n    newState.compareTo = event.target.value;\r\n    this.setState({compareTo:event.target.value,isLoading:true});\r\n    return this.dataHandler(newState);\r\n  }\r\n\r\n  filter = ():any[]=>{\r\n    const {options,full} = this.state;\r\n    const diffs:string[] = [\"hyper\",\"another\",\"leggendaria\"];\r\n    return full.filter((data)=>\r\n        options[\"level\"].some((item:string)=>item === data.difficultyLevel) &&\r\n        options[\"difficulty\"].some((item:string)=>diffs[Number(item)] === data.difficulty )\r\n    )\r\n  }\r\n\r\n  async dataHandler(newState:any = this.state):Promise<void>{\r\n    let result:any[] = [];\r\n    const f = newState.compareFrom;\r\n    const t = newState.compareTo;\r\n    const isSingle = _isSingle();\r\n    const scores = new scoresDB(isSingle,f);\r\n    const sdb = new songsDB();\r\n    const calc = new bpiCalcuator();\r\n    const fData = await scores.getSpecificVersionAll();\r\n    const goalBPI = _goalBPI(), goalPerc = _goalPercentage();\r\n    for(let i =0; i < fData.length; ++i){\r\n      let tScore = 0;\r\n      const tData = await scores.getItem(fData[i][\"title\"],fData[i][\"difficulty\"],t,isSingle);\r\n      const songData = isSingle ?\r\n      await sdb.getOneItemIsSingle(fData[i][\"title\"],fData[i][\"difficulty\"]) :\r\n      await sdb.getOneItemIsDouble(fData[i][\"title\"],fData[i][\"difficulty\"]);\r\n      calc.setData(songData[0][\"notes\"] * 2,songData[0][\"avg\"],songData[0][\"wr\"]);\r\n      if(!tData || tData.length === 0){\r\n        tScore = 0;\r\n      }else{\r\n        tScore = tData[0][\"exScore\"];\r\n      }\r\n      if(t === \"WR\"){\r\n        tScore = songData[0][\"wr\"];\r\n      }\r\n      if(t === \"AVERAGE\"){\r\n        tScore = songData[0][\"avg\"];\r\n      }\r\n      if(t === \"BPI\"){\r\n        tScore = calc.calcFromBPI(goalBPI,true);\r\n      }\r\n      if(t === \"PERCENTAGE\"){\r\n        tScore = Math.ceil(songData[0][\"notes\"] * 2 * goalPerc / 100)\r\n      }\r\n      result.push({\r\n        title:fData[i][\"title\"],\r\n        songData: songData[0],\r\n        scoreData: fData[i],\r\n        difficulty:fData[i][\"difficulty\"],\r\n        difficultyLevel:fData[i][\"difficultyLevel\"],\r\n        exScore:fData[i][\"exScore\"],\r\n        compareData:tScore,\r\n        gap:fData[i][\"exScore\"] - tScore\r\n      });\r\n    }\r\n    if(!this._mounted){return;}\r\n    return this.setState({full:result,isLoading:false});\r\n  }\r\n\r\n  sortedData = ():any[]=>{\r\n    const {isDesc,sort} = this.state;\r\n    const sortedData:any[] = this.filter().sort((a,b)=>{\r\n      switch(sort){\r\n        case 0:\r\n        return Number(b.difficultyLevel) - Number(a.difficultyLevel);\r\n        case 1:\r\n        return b.title.localeCompare(a.title, \"ja\", {numeric:true});\r\n        default:\r\n        case 2:\r\n          return b.exScore - a.exScore;\r\n        case 3:\r\n          return b.gap - a.gap;\r\n      }\r\n    }).filter((t:any)=>{\r\n      const pm:string[] = this.state.options.pm;\r\n      if(pm.indexOf(\"+\") === -1 && pm.indexOf(\"-\") > -1){\r\n        return t.gap <= 0;\r\n      }\r\n      if(pm.indexOf(\"+\") > -1 && pm.indexOf(\"-\") === -1){\r\n        return t.gap > 0;\r\n      }\r\n      return pm.indexOf(\"+\") > -1 && pm.indexOf(\"-\") > -1 ? true : false;\r\n    });\r\n    return isDesc ? sortedData.reverse() : sortedData;\r\n  }\r\n\r\n  cloneState = () => JSON.parse(JSON.stringify(this.state))\r\n\r\n  handleChangePage = (newPage:number):void => this.setState({page:newPage});\r\n\r\n  handleChangeRowsPerPage = (value:string):void => this.setState({page:0,rowsPerPage:+value});\r\n\r\n  render(){\r\n    const {compareFrom,compareTo,isLoading,page,rowsPerPage,options,sort,isDesc} = this.state;\r\n    if(!this.state.full){\r\n      return (null);\r\n    }\r\n    return (\r\n      <Container className=\"commonLayout\" fixed  id=\"songsVil\">\r\n        <Typography component=\"h5\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n          <FormattedMessage id=\"Compare.Title\"/>\r\n        </Typography>\r\n        <Grid container spacing={1} style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={6}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n              <InputLabel><FormattedMessage id=\"Compare.From\"/></InputLabel>\r\n              <Select value={compareFrom} onChange={this.handleCompareFromChange}>\r\n                <MenuItem value={\"26\"}>26 Rootage</MenuItem>\r\n                <MenuItem value={\"27\"}>27 HEROIC VERSE</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <FormControl style={{width:\"100%\"}}>\r\n              <InputLabel><FormattedMessage id=\"Compare.To\"/></InputLabel>\r\n              <Select value={compareTo} onChange={this.handleCompareToChange}>\r\n                <MenuItem value={\"26\"}>26 Rootage</MenuItem>\r\n                <MenuItem value={\"27\"}>27 HEROIC VERSE</MenuItem>\r\n                <MenuItem value={\"WR\"}>WORLD RECORD</MenuItem>\r\n                <MenuItem value={\"AVERAGE\"}>KAIDEN AVERAGE</MenuItem>\r\n                <MenuItem value={\"BPI\"}>TARGET BPI</MenuItem>\r\n                <MenuItem value={\"PERCENTAGE\"}>TARGET PERCENTAGE</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1} id=\"mainFilters\" style={{margin:\"5px 0\"}}>\r\n          <Grid item xs={4}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByLevel\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"11\")} onChange={this.handleLevelChange(\"11\")} value=\"11\" />}\r\n                  label=\"☆11\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.level.some(t=> t === \"12\")} onChange={this.handleLevelChange(\"12\")} value=\"12\" />}\r\n                  label=\"☆12\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Songs.filterByDifficulty\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"0\")} onChange={this.handleDiffChange(\"0\")} value=\"hyper\" />}\r\n                  label=\"H\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"1\")} onChange={this.handleDiffChange(\"1\")} value=\"another\" />}\r\n                  label=\"A\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.difficulty.some(t=> t === \"2\")} onChange={this.handleDiffChange(\"2\")} value=\"leggendaria\" />}\r\n                  label=\"†\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <FormControl component=\"fieldset\">\r\n              <FormLabel component=\"legend\"><FormattedMessage id=\"Compare.filterByPlusMinus\"/></FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.pm.some(t=> t === \"+\")} onChange={this.handlePMChange(\"+\")} value=\"+\" />}\r\n                  label=\"+\"\r\n                />\r\n                <FormControlLabel\r\n                  control={<Checkbox checked={options.pm.some(t=> t === \"-\")} onChange={this.handlePMChange(\"-\")} value=\"-\" />}\r\n                  label=\"-\"\r\n                />\r\n              </FormGroup>\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <CompareTable full={this.sortedData()} isLoading={isLoading} page={page} rowsPerPage={rowsPerPage} sort={sort} isDesc={isDesc}\r\n        changeSort={this.changeSort}\r\n        handleChangeRowsPerPage={this.handleChangeRowsPerPage} handleChangePage={this.handleChangePage}/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nexport default class Index extends React.Component<{},{}> {\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Container className=\"commonLayout\" fixed>\r\n          <Typography component=\"h5\" variant=\"h5\" color=\"textPrimary\" gutterBottom>\r\n            <FormattedMessage id=\"Help.title\"/>\r\n          </Typography>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography>\r\n                <FormattedMessage id=\"Help.AboutThisSite\"/>\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Typography display=\"block\">\r\n                <FormattedMessage id=\"Help.A.1\"/><br/>\r\n                <FormattedMessage id=\"Help.A.2\"/><br/>\r\n                <FormattedMessage id=\"Help.A.3\"/>\r\n              </Typography>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography>\r\n                <FormattedMessage id=\"Help.Functions\"/>\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Typography display=\"block\">\r\n                <FormattedMessage id=\"Help.B.1\"/><br/>\r\n                <FormattedMessage id=\"Help.B.2\"/><br/>\r\n                <FormattedMessage id=\"Help.B.3\"/><br/>\r\n                <FormattedMessage id=\"Help.B.4\"/>\r\n                <Divider style={{margin:\"10px 0\"}}/>\r\n                <FormattedMessage id=\"Help.B.5\"/>\r\n              </Typography>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography>\r\n                <FormattedMessage id=\"Help.HowToUse\"/>\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Typography display=\"block\">\r\n                <FormattedMessage id=\"Help.C.1\"/>\r\n                <Divider style={{margin:\"10px 0\"}}/>\r\n                <FormattedMessage id=\"Help.C.2\"/><br/>\r\n                <FormattedMessage id=\"Help.C.3\"/><br/>\r\n                <FormattedMessage id=\"Help.C.4\"/><br/>\r\n                <FormattedMessage id=\"Help.C.5\"/><br/>\r\n                <FormattedMessage id=\"Help.C.6\"/>\r\n                <Divider style={{margin:\"10px 0\"}}/>\r\n                <FormattedMessage id=\"Help.C.7\"/>\r\n                <Divider style={{margin:\"10px 0\"}}/>\r\n                <FormattedMessage id=\"Help.C.8\"/>\r\n              </Typography>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography>\r\n                <FormattedMessage id=\"Help.Settings\"/>\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Typography display=\"block\">\r\n                <FormattedMessage id=\"Help.D.1\"/><br/>\r\n                <FormattedMessage id=\"Help.D.2\"/><br/>\r\n                <FormattedMessage id=\"Help.D.3\"/><br/>\r\n                <FormattedMessage id=\"Help.D.4\"/>\r\n              </Typography>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography>\r\n                <FormattedMessage id=\"Help.Contact\"/>\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Typography display=\"block\">\r\n                <FormattedMessage id=\"Help.E.1\"/>\r\n              </Typography>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography>\r\n                <FormattedMessage id=\"Help.Requirements\"/>\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Typography display=\"block\">\r\n                <FormattedMessage id=\"Help.F.1\"/>\r\n                <Divider style={{margin:\"10px 0\"}}/>\r\n                <FormattedMessage id=\"Help.F.2\"/><br/>\r\n                <FormattedMessage id=\"Help.F.3\"/>\r\n              </Typography>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography>\r\n                <FormattedMessage id=\"Help.Licenses\"/>\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Typography display=\"block\">\r\n\r\n                <Divider style={{margin:\"10px 0\"}}/>\r\n                material-ui : Copyright (c) 2014 Call-Em-All <a href=\"https://opensource.org/licenses/mit-license.php\" target=\"_blank\" rel=\"noreferrer noopener\">The MIT License (MIT)</a><br/>\r\n                Dexie.js : Copyright (c) dfahlander <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" target=\"_blank\" rel=\"noreferrer noopener\">Apache License</a><br/>\r\n                fast-deep-equal : Copyright (c) epoberezkin MIT<br/>\r\n                moment,moment-timezone : Copyright (c) JS Foundation and other contributors MIT<br/>\r\n                react : Copyright (c) Facebook MIT<br/>\r\n                react-dom : Copyright (c) 2017 Tylor Steinberger MIT<br/>\r\n                react-router : Copyright (c) React Training 2016-2018 MIT<br/>\r\n                react-intl : Copyright (c) Yahoo! BSD License<br/>\r\n                recharts : Copyright (c) recharts MIT<br/>\r\n                typescript : Copyright (c) Microsoft Apache License<br/>\r\n                unstated : Copyright (c) 2018-present James Kyle MIT<br/>\r\n              </Typography>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n          <ExpansionPanel>\r\n            <ExpansionPanelSummary\r\n              expandIcon={<ExpandMoreIcon />}\r\n            >\r\n              <Typography>\r\n                Updates\r\n              </Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n              <Typography display=\"block\">\r\n                <p>2019/11/08 : v0.0.0.4 目標BPI,パーセンテージ機能追加、DP対応(β版)、未プレイ楽曲絞り込みに関するバグを修正</p>\r\n                <p>2019/11/07 : v0.0.0.3 データリセット機能の追加,定義データ更新の処理を変更,絞り込み条件変更時にテーブルを1ページ目に戻すようにした,例外処理諸々,とか</p>\r\n                <p>2019/11/06 : v0.0.0.2 ダークテーマの追加、シェアボタンの設置(シェアお願いします!)</p>\r\n                <p>2019/11/06 : v0.0.0.1 公開した</p>\r\n              </Typography>\r\n            </ExpansionPanelDetails>\r\n          </ExpansionPanel>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const ja = {\r\n  \"Top.Title\": \"BPIManager\",\r\n  \"GlobalNav.Home\": \"ホーム\",\r\n  \"GlobalNav.Data\": \"データ\",\r\n  \"GlobalNav.FavoriteSongs\": \"お気に入り楽曲\",\r\n  \"GlobalNav.SongList\": \"楽曲一覧\",\r\n  \"GlobalNav.unregisteredSongs\": \"未プレイ楽曲\",\r\n  \"GlobalNav.Statistics\": \"統計\",\r\n  \"GlobalNav.compare\": \"スコア比較\",\r\n  \"GlobalNav.Settings\": \"設定\",\r\n  \"GlobalNav.Help\": \"説明書\",\r\n  \"Index.heroText\": \"Web上でbeatmania IIDXのスコアを管理し、BPIとして可視化できます。\",\r\n  \"Index.importButton\" : \"使ってみる\",\r\n  \"Index.helpButton\" : \"ヘルプを読む\",\r\n  \"Index.notes1\" : \"beatmaniaは株式会社コナミデジタルエンタテインメントの登録商標です。\",\r\n  \"Index.notes2\" : \"本ツールはnorimiso様考案のBPIおよびZUBU様制作のBPICLのそれぞれにインスパイアされて制作されました。\",\r\n  \"Data.add\" : \"スコアのインポート\",\r\n  \"Data.infoBulk\" : \"e-AMUSEMENTプレミアムコースに加入済みの場合、CSVデータを取り込むことで全ての曲データを一括でインポートできます。\",\r\n  \"Data.howToBulk1\" : \" \",\r\n  \"Data.CSVURL\" : \"こちら\",\r\n  \"Data.howToBulk2\" : \"にアクセスし、案内に従って表示されたCSVデータ（テキスト形式）を下のボックスにコピーしてください。\",\r\n  \"Data.Execute\": \"取り込み実行\",\r\n  \"Data.notPremium1\": \"プレミアムコースに加入していない場合、現段階では個別に曲データを入力する必要があります。\",\r\n  \"Data.Success\":\"インポートに成功しました。\",\r\n  \"Data.Failed\":\"インポートに失敗しました。\",\r\n  \"Data.edit\" : \"スコアの手動入力\",\r\n  \"Data.howToEdit\" : \"各楽曲の詳細表示画面でスコアを編集することができます。以下が手順です:\",\r\n  \"Data.howToEdit1\" : \"メニューから「未プレイ楽曲」ページへ移動し、曲検索フォームにスコアを更新したい楽曲の名前を入力してください。\",\r\n  \"Data.howToEdit2\" : \"検索結果が表示されますので、目的の楽曲名をクリックしてください。\",\r\n  \"Data.howToEdit3\" : \"楽曲詳細画面が表示されますので、更新後のスコアを入力し、保存ボタンをクリックしてください。\",\r\n  \"Data.howToEdit4\" : \"That's all!\",\r\n  \"Songs.title\":\"楽曲データ\",\r\n  \"Songs.filterByLevel\":\"レベル\",\r\n  \"Songs.filterByDifficulty\":\"難易度\",\r\n  \"Songs.detailedFilter\":\"詳細条件\",\r\n  \"Songs.filterByName\":\"曲名で絞り込み\",\r\n  \"Songs.filterByFavorite\":\"お気に入り曲\",\r\n  \"Songs.mode\":\"モード選択\",\r\n  \"Songs.mode0\":\"BPI詰め\",\r\n  \"Songs.mode1\":\"A狙い\",\r\n  \"Songs.mode2\":\"AA狙い\",\r\n  \"Songs.mode3\":\"AAA狙い\",\r\n  \"Songs.mode4\":\"MAX狙い\",\r\n  \"Songs.mode5\":\"HARD CLEAR狙い\",\r\n  \"Songs.mode6\":\"EX-HARD CLEAR狙い\",\r\n  \"Songs.mode7\":\"FULLCOMBO狙い\",\r\n  \"Songs.legend\":\"凡例および使用方法を確認する場合は、ここをクリックしてヘルプを表示してください\",\r\n  \"Songs.updatedToday\":\"本日更新分のみ表示\",\r\n  \"Details.SaveButton\":\"保存\",\r\n  \"Details.typeNewScore\":\"あなたの自己ベスト\",\r\n  \"Details.FavButton\":\"お気に入り\",\r\n  \"Details.FavButtonRemove\":\"お気に入り解除\",\r\n  \"Details.FavButtonRemoved\":\"お気に入りから削除しました。\",\r\n  \"Details.FavButtonAdded\":\"お気に入り登録しました。\",\r\n  \"Details.Graph\":\"グラフ\",\r\n  \"Details.Details\":\"詳細\",\r\n  \"Details.Diffs\":\"差分\",\r\n  \"Details.ErrorIIDXInfo\":\"IIDXInfoは☆12楽曲でのみ利用できます。\",\r\n  \"Common.Tweet\":\"ツイート\",\r\n  \"SongDetail.SongDetailHead\":\"楽曲\",\r\n  \"SongDetail.Notes\":\"ノート数\",\r\n  \"SongDetail.WorldRecord\":\"全一\",\r\n  \"SongDetail.Average\":\"皆伝平均\",\r\n  \"SongDetail.You\":\"あなた\",\r\n  \"SongDetail.Version\":\"バージョン\",\r\n  \"SongDetail.ScoreDetailHead\":\"プレイ状態\",\r\n  \"SongDetail.ClearState\":\"ランプ\",\r\n  \"SongDetail.MissCount\":\"ミスカウント\",\r\n  \"SongDetail.LastPlayed\":\"最終プレイ\",\r\n  \"SongDetail.ScoreDetails\":\"詳細\",\r\n  \"SongDiffs.Target\":\"データセット\",\r\n  \"SongDiffs.WithinSameVersion\":\"同一バージョン内\",\r\n  \"SongDiffs.EachVersion\":\"バージョン間\",\r\n  \"Favorites.Title\":\"お気に入り\",\r\n  \"NotPlayed.Title\":\"未プレイ楽曲\",\r\n  \"Stats.title\":\"統計データ\",\r\n  \"Stats.TotalBPI\":\"総合BPI\",\r\n  \"Stats.EachDay\":\"日別更新数/平均BPI\",\r\n  \"Stats.UpdatedSongs\":\"更新した楽曲\",\r\n  \"Stats.UpdatedSum\":\"更新件数\",\r\n  \"Stats.Average\":\"平均BPI\",\r\n  \"Stats.LethalWeapon\":\"武器曲\",\r\n  \"Stats.PossibleToGetBetter\":\"伸びそうな曲\",\r\n  \"Stats.Distribution\":\"レベル別BPI分布\",\r\n  \"Compare.Title\":\"データ比較\",\r\n  \"Compare.From\":\"比較元\",\r\n  \"Compare.To\":\"比較先\",\r\n  \"Compare.filterByPlusMinus\":\"表示対象\",\r\n  \"Settings.title\":\"設定\",\r\n  \"Settings.language\":\"言語\",\r\n  \"Settings.theme\":\"テーマ\",\r\n  \"Settings.dataStore\":\"バージョン\",\r\n  \"Settings.delete\":\"データのリセット\",\r\n  \"Settings.noteLang\":\"UIに用いる言語を選択してください。\",\r\n  \"Settings.noteMes1\":\"過去作スコアを登録することで、最新作とのデータ比較が可能です。\",\r\n  \"Settings.inaccurateMes\":\"過去作のスコアも今現在の最新全1,平均スコアでBPIが計算されます。参考程度にしてください。\",\r\n  \"Settings.Update\":\"更新\",\r\n  \"Settings.UpdateResourcePacks\":\"定義データの更新\",\r\n  \"Settings.currentVersion\":\"現在の定義バージョン:\",\r\n  \"Settings.updateWarning\":\"更新には時間がかかる場合があります。\",\r\n  \"Settings.dataClear\":\"データリセット\",\r\n  \"Settings.DPMode\":\"DPモード\",\r\n  \"Settings.dpDescription\":\"オンにすることでDPのスコアを登録できます。\",\r\n  \"Help.title\":\"説明書\",\r\n  \"Help.AboutThisSite\":\"このサイトについて\",\r\n  \"Help.A.1\":\"BPIManagerは、ZUBU様制作のBPICLのクローンとして開発された、☆11および☆12のBPIスコアを管理することができるツールです。\",\r\n  \"Help.A.2\":\"本家BPICLに搭載されている機能をできる限り再現しつつ、よりスコア詰めが捗るようなオリジナルの機能を盛り込むことを目標としています。\",\r\n  \"Help.A.3\":\"本ツールは、スマートフォンのホーム画面に追加して利用することが想定されています。\",\r\n  \"Help.Functions\":\"機能について\",\r\n  \"Help.B.1\":\"BPIManagerでできることは以下のとおりです。\",\r\n  \"Help.B.2\":\"・☆11および☆12の楽曲のスコア・BPI・その他諸々の保存・表示\",\r\n  \"Help.B.3\":\"・バージョンをまたいだスコアの比較、全1や皆伝平均との点差表示\",\r\n  \"Help.B.4\":\"・日別平均BPIやBPI分布表示といった統計情報の表示\",\r\n  \"Help.B.5\":\"追加でこんな機能が欲しい！というものがあれば、可能な限り実現したいので是非お教えください。\",\r\n  \"Help.HowToUse\":\"使い方\",\r\n  \"Help.C.1\":\"メニュー「データ」より公式サイトからCSVをインポートするか、「未プレイ楽曲」より各楽曲のスコアを個別に登録することができます。\",\r\n  \"Help.C.2\":\"スコア登録済み楽曲のデータはメニュー「楽曲一覧」よりご覧いただけます。楽曲タイトルをクリックすると、グラフや詳細データが表示されます。\",\r\n  \"Help.C.3\":\"・「グラフ」タブでは、各BPIに対応するEXスコアを確認できます。\",\r\n  \"Help.C.4\":\"・「詳細」タブでは、プレイデータや楽曲データを確認できます。\",\r\n  \"Help.C.5\":\"・「差分」タブでは、過去作におけるその楽曲のスコアや、当該作品内におけるハイスコアの遷移を確認できます。\",\r\n  \"Help.C.6\":\"・粘着したい！ライバルに抜かされたからメモしておきたい！といった曲は、星アイコンをクリックすることでお気に入り登録できます。お気に入り登録された楽曲は、メニュー「お気に入り」で一覧表示できます。\",\r\n  \"Help.C.7\":\"メニュー「未プレイ楽曲」から、当該作品内においてまだプレイしていない楽曲を一覧表示できます。\",\r\n  \"Help.C.8\":\"メニュー「スコア比較」では、作品間スコアの比較や、全1、皆伝平均といったスコアとの点数差を確認できます。\",\r\n  \"Help.Settings\":\"設定について\",\r\n  \"Help.D.1\":\"メニュー「設定」より、本ツールに関する設定が可能です。\",\r\n  \"Help.D.2\":\"「言語」より、ツール内の表示言語を変更できます。\",\r\n  \"Help.D.3\":\"「バージョン」より、データの保存先を変更可能です。現状、26 Rootageと27 HEROIC VERSEのみ登録可能ですが、新作稼働時には順次追加予定です。\",\r\n  \"Help.D.4\":\"「更新」より、ツール内で使用している全1、皆伝平均などのスコアデータを更新できます。定義データの更新に関しては別途記述を参照してください。\",\r\n  \"Help.Contact\":\"お問合せ先\",\r\n  \"Help.E.1\":\"本ツールにおいてバグを発見したり、要望・苦情・その他諸々がある場合、Twitter(@BPIManager)までお気軽にお問い合わせください。\",\r\n  \"Help.Requirements\":\"動作要件\",\r\n  \"Help.F.1\":\"本ツールは、以下の環境下において動作を予定しています。\",\r\n  \"Help.F.2\":\"IndexedDBが利用可能である環境（モダンブラウザ+シークレットモードが無効になっていること)\",\r\n  \"Help.F.3\":\"fetch APIが利用可能である環境\",\r\n  \"Help.Licenses\":\"ライセンス表記\",\r\n  \"Settings.resetWarning\":\"対象データベースに登録されているデータセットを全削除します。この操作をもとに戻すことはできないことに注意してください。\",\r\n  \"Settings.DeleteExec\":\"削除\",\r\n  \"Settings.DeleteDialogBody\":\"あなたはデータベース内のデータを削除しようとしています。\",\r\n  \"Settings.DeleteDialogBody2\":\"この操作を巻き戻すことは決してできません。次のデータセットを削除しても本当によろしいですか:\",\r\n  \"Settings.MyGoalBPI\":\"目標BPI\",\r\n  \"Settings.MyGoalPercentage\":\"目標パーセンテージ\",\r\n  \"Settings.MyGoalDescription\":\"これらの値を設定することで、「データ比較」画面にて当該BPI/パーセンテージに該当するEXスコアを比較対象として選択できます。\"\r\n};\r\n\r\nexport default ja;\r\n","const ja = {\r\n  \"Top.Title\": \"BPIManager\",\r\n  \"GlobalNav.Home\": \"Home\",\r\n  \"GlobalNav.Data\": \"Data\",\r\n  \"GlobalNav.FavoriteSongs\": \"Favorite Songs\",\r\n  \"GlobalNav.SongList\": \"Songs\",\r\n  \"GlobalNav.unregisteredSongs\": \"Not played yet\",\r\n  \"GlobalNav.Statistics\": \"Statistics\",\r\n  \"GlobalNav.compare\": \"Compare\",\r\n  \"GlobalNav.Settings\": \"Settings\",\r\n  \"GlobalNav.Help\": \"Help\",\r\n  \"Index.heroText\": \"Easily manage your scores of beatmania IIDX and visualize as BPI, in Web.\",\r\n  \"Index.importButton\" : \"Try it out!\",\r\n  \"Index.helpButton\" : \"Read documents\",\r\n  \"Index.notes1\" : \"beatmania is the trademark registered by Konami Degital Entertainment Co., Ltd.\",\r\n  \"Index.notes2\" : \"This tool was affected by both of BPI which was invented by norimiso and BPICL which was released by ZUBU.\",\r\n  \"Data.add\" : \"Import score data\",\r\n  \"Data.infoBulk\" : \"If you've been subscribed to e-AMUSEMENT Premium Course, you can import all your scores in bulk by importing CSV from official IIDX website.\",\r\n  \"Data.howToBulk1\" : \"Just access \",\r\n  \"Data.CSVURL\" : \"HERE\",\r\n  \"Data.howToBulk2\" : \", copy displayed text and then paste it to form shown below.\",\r\n  \"Data.Execute\": \"Import\",\r\n  \"Data.notPremium1\": \"If you cannot use the way above, so please fill each songs in individually.\",\r\n  \"Data.Success\":\"Successfully imported.\",\r\n  \"Data.Failed\":\"Failed to import scores.\",\r\n  \"Data.edit\" : \"Edit scores on your own\",\r\n  \"Data.howToEdit\" : \"You can edit the score of each songs by detailed song information screen.\",\r\n  \"Data.howToEdit1\" : \"Access to \\\"songs not done yet\\\" page and search by the song name you want to edit.\",\r\n  \"Data.howToEdit2\" : \"Search results will be shown, then click the song name.\",\r\n  \"Data.howToEdit3\" : \"You can see detailed song information screen. Type your score and press save button.\",\r\n  \"Data.howToEdit4\" : \"That's all!\",\r\n  \"Songs.title\":\"Songs\",\r\n  \"Songs.filterByLevel\":\"Level\",\r\n  \"Songs.filterByDifficulty\":\"Difficulty\",\r\n  \"Songs.detailedFilter\":\"Configure\",\r\n  \"Songs.filterByName\":\"Filter by song title\",\r\n  \"Songs.filterByFavorite\":\"Favorited\",\r\n  \"Songs.mode\":\"Aiming for...\",\r\n  \"Songs.mode0\":\"Higher BPI\",\r\n  \"Songs.mode1\":\"new A\",\r\n  \"Songs.mode2\":\"new AA\",\r\n  \"Songs.mode3\":\"new AAA\",\r\n  \"Songs.mode4\":\"new MAX\",\r\n  \"Songs.mode5\":\"new HARD CLEAR\",\r\n  \"Songs.mode6\":\"new EX-HARD CLEAR\",\r\n  \"Songs.mode7\":\"new FULLCOMBO\",\r\n  \"Songs.legend\":\"To see legends and usage, click here and go to help\",\r\n  \"Songs.updatedToday\":\"Only displays the scores updated today\",\r\n  \"Details.SaveButton\":\"Save\",\r\n  \"Details.typeNewScore\":\"My Record\",\r\n  \"Details.FavButton\":\"Favorite\",\r\n  \"Details.FavButtonRemove\":\"Delete favorite\",\r\n  \"Details.FavButtonRemoved\":\"Successfully deleted.\",\r\n  \"Details.FavButtonAdded\":\"Successfully added.\",\r\n  \"Details.Graph\":\"Graph\",\r\n  \"Details.Details\":\"Details\",\r\n  \"Details.Diffs\":\"Diffs\",\r\n  \"Details.ErrorIIDXInfo\":\"IIDXInfo is only available for level-12.\",\r\n  \"Common.Tweet\":\"Tweet\",\r\n  \"SongDetail.SongDetailHead\":\"Song\",\r\n  \"SongDetail.Notes\":\"Notes\",\r\n  \"SongDetail.WorldRecord\":\"World Record\",\r\n  \"SongDetail.Average\":\"Average\",\r\n  \"SongDetail.You\":\"You\",\r\n  \"SongDetail.Version\":\"Version\",\r\n  \"SongDetail.ScoreDetailHead\":\"Play Status\",\r\n  \"SongDiffs.Target\":\"Datasets\",\r\n  \"SongDiffs.WithinSameVersion\":\"Within the same version\",\r\n  \"SongDiffs.EachVersion\":\"Across versions\",\r\n  \"SongDetail.ClearState\":\"Clear State\",\r\n  \"SongDetail.MissCount\":\"Miss Count\",\r\n  \"SongDetail.LastPlayed\":\"Last Played\",\r\n  \"SongDetail.ScoreDetails\":\"Detail\",\r\n  \"Favorites.Title\":\"Favorites\",\r\n  \"NotPlayed.Title\":\"Not Played yet\",\r\n  \"Stats.title\":\"Statistics\",\r\n  \"Stats.TotalBPI\":\"Total BPI\",\r\n  \"Stats.EachDay\":\"Total and BPI per day\",\r\n  \"Stats.UpdatedSongs\":\"New records\",\r\n  \"Stats.UpdatedSum\":\"The total of updated songs\",\r\n  \"Stats.Average\":\"Average BPI\",\r\n  \"Stats.PossibleToGetBetter\":\"Songs Possible to Get better\",\r\n  \"Stats.Distribution\":\"BPI Distributions by Lv.\",\r\n  \"Compare.Title\":\"Compare\",\r\n  \"Compare.From\":\"Data source\",\r\n  \"Compare.To\":\"Compare with\",\r\n  \"Compare.filterByPlusMinus\":\"P/M\",\r\n  \"Settings.title\":\"Settings\",\r\n  \"Settings.language\":\"Language\",\r\n  \"Settings.dataStore\":\"Version\",\r\n  \"Settings.delete\":\"Delete all data\",\r\n  \"Settings.theme\":\"Theme\",\r\n  \"Settings.dataClear\":\"Clear database\",\r\n  \"Settings.DPMode\":\"Double Play Mode\",\r\n  \"Settings.dpDescription\":\"When turning on this function you can register double play scores.\",\r\n  \"Settings.noteLang\":\"Select language you want to use. Please contribute to improve the quality of translation.(contact @BPIManager)\",\r\n  \"Settings.noteMes1\":\"Registering scores in older IIDX makes you able to compare them across versions.\",\r\n  \"Settings.inaccurateMes\":\"Please note that since BPI in older IIDX versions will also be calculated with the latest WR and average scores so they would be rather inaccurate than them at the time.\",\r\n  \"Settings.Update\":\"Update\",\r\n  \"Settings.UpdateResourcePacks\":\"Update definition file\",\r\n  \"Settings.currentVersion\":\"Current version of the definition data:\",\r\n  \"Settings.updateWarning\":\"This process may take a few minutes.\",\r\n  \"Help.title\":\"Documents\",\r\n  \"Help.AboutThisSite\":\"About this site\",\r\n  \"Help.A.1\":\"BPIManager is a tool developed as a clone of BPICL(which has been released from ZUBU), which enables users to manage their scores of IIDX, especially Lv11 and Lv12.\",\r\n  \"Help.A.2\":\"The development goal of this tool is to add unique functions which helps facilitate breaking records, after cloning functions of BPICL as possible.\",\r\n  \"Help.A.3\":\"*This tool is intended for being added on home screen on smartphones.\",\r\n  \"Help.Functions\":\"About functions\",\r\n  \"Help.B.1\":\"By using BPIManager users can do as follows:\",\r\n  \"Help.B.2\":\"1. Saving and checking scores, BPI and etc. of Lv11 and Lv12 songs.\",\r\n  \"Help.B.3\":\"2. Comparing scores across/within versions or with either World record or Kaiden average.\",\r\n  \"Help.B.4\":\"3. Showing statistics like BPIs average per day or BPI distributions.\",\r\n  \"Help.B.5\":\"If you want any other functions please feel free to contact me.\",\r\n  \"Help.HowToUse\":\"How to use\",\r\n  \"Help.C.1\":\"To add scores in bulk please go to \\\"Data\\\" and import CSV from official IIDX website, or go to \\\"Not played yet\\\" and save scores individually.\",\r\n  \"Help.C.2\":\"Scores already saved can be checked in \\\"Songs\\\". By clicking song title you can check graphs, details and so on.\",\r\n  \"Help.C.3\":\"1. In \\\"Graph\\\" tab you can see EXScores corresponding to each BPIs.\",\r\n  \"Help.C.4\":\"2. In \\\"Details\\\" tab you can check your own play data and information about the song.\",\r\n  \"Help.C.5\":\"3. In \\\"Diffs\\\" tab, the scores of the song in the past series and the transitions of the your best score in the current version will be displayed.\",\r\n  \"Help.C.6\":\"4. Songs you need to remember can be registered as favorites by clicking the star icon. Songs favorited can be checked in \\\"Favorites\\\".\",\r\n  \"Help.C.7\":\"In \\\"Not played yet\\\" the list of songs which haven't been played in the current version will be displayed.\",\r\n  \"Help.C.8\":\"In \\\"Compare\\\", you can compare scores between series, or with World record or Kaiden average.\",\r\n  \"Help.Settings\":\"About configure\",\r\n  \"Help.D.1\":\"In \\\"Settings\\\" you can change configures in this tool.\",\r\n  \"Help.D.2\":\"By changing \\\"Language\\\" you can change the language which will be used in this tool.\",\r\n  \"Help.D.3\":\"By changing \\\"Version\\\" you can change the destination of save data. Currently only 26 Rootage and 27 HEROIC VERSE available.\",\r\n  \"Help.D.4\":\"By Clicking \\\"Update definition file\\\" you can update the definition data such as World records, Kaiden averages, etc. Please refer to the description for updating definition data.\",\r\n  \"Help.Contact\":\"Contact\",\r\n  \"Help.E.1\":\"If you found bugs or have requests,complaint or anything else please contact me(@BPIManager).\",\r\n  \"Help.Requirements\":\"Requirements\",\r\n  \"Help.F.1\":\"To use this tool you have to satisfy the conditions below.\",\r\n  \"Help.F.2\":\"IndexedDB available\",\r\n  \"Help.F.3\":\"fetch API available\",\r\n  \"Help.Licenses\":\"Licenses\",\r\n  \"Settings.resetWarning\":\"Delete all data stored in the selected database. WARNING: BE AWARE THAT THIS ACTION CANNOT BE UNDONE.\",\r\n  \"Settings.DeleteExec\":\"Execute\",\r\n  \"Settings.DeleteDialogBody\":\"You are about to delete all scores stored in the selected database.\",\r\n  \"Settings.DeleteDialogBody2\":\"This action cannot be undone. Really do you want to continue to delete this data :\",\r\n  \"Settings.MyGoalBPI\":\"Target BPI\",\r\n  \"Settings.MyGoalPercentage\":\"Target Percentage\",\r\n  \"Settings.MyGoalDescription\":\"Setting values above makes it possible to compare with EX score corresponding to them in Compare screen. \"\r\n};\r\n\r\nexport default ja;\r\n","import * as React from 'react';\r\nimport AppBar from \"../view/components/header/appBar\";\r\nimport { IntlProvider } from 'react-intl'\r\nimport Index from \"../view/pages\";\r\nimport Data from \"../view/pages/data\";\r\nimport Songs from \"../view/pages/songs\";\r\nimport Favorite from \"../view/pages/favorites\";\r\nimport NotPlayed from \"../view/pages/notPlayed\";\r\nimport Stats from \"../view/pages/stats\";\r\nimport Settings from \"../view/pages/settings\";\r\nimport Compare from \"../view/pages/compare\";\r\nimport Help from \"../view/pages/help\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\n\r\n\r\n//locale data\r\n\r\nimport ja  from \"../i18n/ja\";\r\nimport en from \"../i18n/en\";\r\nimport GlobalContainer from '../components/context/global';\r\nimport { Subscribe, Provider } from 'unstated';\r\n\r\n//\r\nexport default class Router extends React.Component<{},{}> {\r\n\r\n  render(){\r\n    return (\r\n      <Provider>\r\n        <Subscribe to={[GlobalContainer]}>\r\n          {global =>{\r\n            return (<IntlProvider\r\n              locale={global.state.lang}\r\n              messages={global.state.lang === \"ja\" ? ja : en}\r\n            >\r\n              <BrowserRouter>\r\n                <AppBar global={global}/>\r\n                <Route path=\"/\" exact component={Index}/>\r\n                <Route path=\"/data\" exact render={_props=><Data global={global}/>}/>\r\n                <Route path=\"/songs\" exact component={Songs}/>\r\n                <Route path=\"/favorite\" exact component={Favorite}/>\r\n                <Route path=\"/notPlayed\" exact component={NotPlayed}/>\r\n                <Route path=\"/stats\" exact component={Stats}/>\r\n                <Route path=\"/compare\" exact component={Compare}/>\r\n                <Route path=\"/settings\" exact render={_props=><Settings global={global}/>}/>\r\n                <Route path=\"/help\" exact component={Help}/>\r\n              </BrowserRouter>\r\n            </IntlProvider>\r\n          )}}\r\n        </Subscribe>\r\n      </Provider>\r\n    );\r\n  }\r\n\r\n}\r\n","import * as React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport timeFormatter from \"../common/timeFormatter\";\r\nimport storageWrapper,{songsDB} from \"../indexedDB\";\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nexport default class Initialize extends React.Component<{},{show:boolean,error:boolean,errorMessage:string}>{\r\n  storage:any;\r\n  songsDB:any;\r\n\r\n  constructor(props:Object){\r\n    super(props);\r\n    this.storage = new storageWrapper();\r\n    this.songsDB = new songsDB();\r\n    this.state = {\r\n      show : true,\r\n      error:false,\r\n      errorMessage:\"\"\r\n    }\r\n  }\r\n\r\n  wait = (msec:number = 10)=> {\r\n    return new Promise(resolve=>{\r\n      setTimeout(resolve, msec)\r\n    });\r\n  }\r\n\r\n  async componentDidMount(){\r\n    try{\r\n      const songsAvailable:string[] = await this.songsDB.getAll();\r\n      if(songsAvailable.length > 0){\r\n        return this.setState({show:false});\r\n      }\r\n      const now = timeFormatter(0);\r\n      const csv = await fetch(\"https://files.poyashi.me/json/songs.json?t=initialized\").then(t=>t.json());\r\n      for(let i=0;i < csv.body.length;++i){\r\n        await this.songsDB.setItem(Object.assign(csv[\"body\"][i],{\r\n          isFavorited:false,\r\n          isCreated:false,\r\n          updatedAt:now,\r\n        }));\r\n        this.wait(3);\r\n      }\r\n      localStorage.setItem(\"isSingle\",\"1\");\r\n      localStorage.setItem(\"lastDefFileVer\",csv.version);\r\n      return this.setState({show:false});\r\n    }catch(e){\r\n      console.log(e);\r\n      return this.setState({error:true,errorMessage:e.message || \"不明なエラーが発生したため続行できません。\"})\r\n    }\r\n  }\r\n\r\n  render(){\r\n    if(!this.state.show){\r\n      return (null);\r\n    }\r\n    if(this.state.error){\r\n      return (<div id=\"overlayLayout\">\r\n        <div>\r\n          <WarningIcon/>\r\n        </div>\r\n        <div>\r\n          <p>{this.state.errorMessage}</p>\r\n        </div>\r\n      </div>);\r\n    }\r\n    return (\r\n      <div id=\"overlayLayout\">\r\n        <div>\r\n          <CircularProgress/>\r\n        </div>\r\n        <div>\r\n          <p>Loading essential components...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      50: '#dedede',\r\n      100: '#808080',\r\n      200: '#5e5e5e',\r\n      300: '#4b4b4b',\r\n      400: '#434343',\r\n      500: '#3a3a3a',\r\n      600: '#2d2d2d',\r\n      700: '#272727',\r\n      800: '#1c1c1c',\r\n      900: '#111111',\r\n      A100: '#cecece',\r\n      A200: '#949494',\r\n      A400: '#6f6f6f',\r\n      A700: '#4c4c4c',\r\n    },\r\n    secondary: {\r\n      50: '#d0e0e3',\r\n      100: '#a2c4c9',\r\n      200: '#76a5af',\r\n      300: '#648c95',\r\n      400: '#45818e',\r\n      500: '#396872',\r\n      600: '#2a5059',\r\n      700: '#23434a',\r\n      800: '#1f353a',\r\n      900: '#0c343d',\r\n      A100: '#a2c4c9',\r\n      A200: '#76a5af',\r\n      A400: '#45818e',\r\n      A700: '#205966',\r\n    },\r\n  },\r\n\r\n  'breakpoints': {\r\n    'keys': [\r\n      'xs',\r\n      'sm',\r\n      'md',\r\n      'lg',\r\n      'xl',\r\n    ],\r\n    'values': {\r\n      'xs': 360,\r\n      'sm': 768,\r\n      'md': 992,\r\n      'lg': 1400,\r\n      'xl': 1800,\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: 'none',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: 'light',\r\n    primary: {\r\n      50: '#dedede',\r\n      100: '#808080',\r\n      200: '#5e5e5e',\r\n      300: '#4b4b4b',\r\n      400: '#434343',\r\n      500: '#3a3a3a',\r\n      600: '#2d2d2d',\r\n      700: '#272727',\r\n      800: '#1c1c1c',\r\n      900: '#111111',\r\n      A100: '#cecece',\r\n      A200: '#949494',\r\n      A400: '#6f6f6f',\r\n      A700: '#4c4c4c',\r\n    },\r\n    secondary: {\r\n      50: '#d0e0e3',\r\n      100: '#a2c4c9',\r\n      200: '#76a5af',\r\n      300: '#648c95',\r\n      400: '#45818e',\r\n      500: '#396872',\r\n      600: '#2a5059',\r\n      700: '#23434a',\r\n      800: '#1f353a',\r\n      900: '#0c343d',\r\n      A100: '#a2c4c9',\r\n      A200: '#76a5af',\r\n      A400: '#45818e',\r\n      A700: '#205966',\r\n    },\r\n  },\r\n\r\n  'breakpoints': {\r\n    'keys': [\r\n      'xs',\r\n      'sm',\r\n      'md',\r\n      'lg',\r\n      'xl',\r\n    ],\r\n    'values': {\r\n      'xs': 360,\r\n      'sm': 768,\r\n      'md': 992,\r\n      'lg': 1400,\r\n      'xl': 1800,\r\n    },\r\n  },\r\n\r\n  overrides: {\r\n    MuiButton: {\r\n      root: {\r\n        textTransform: 'none',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import { Component } from \"react\";\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nexport default class ReloadModal extends Component {\r\n  state = {\r\n    show: false\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"newContentAvailable\", () => {\r\n      this.setState({\r\n        show: true\r\n      });\r\n    });\r\n  }\r\n\r\n  onUpdate = () => {\r\n    window.location.reload(true);\r\n  };\r\n\r\n  handleClose = () =>{\r\n    this.setState({show:false});\r\n  }\r\n\r\n  render() {\r\n    const {show} = this.state;\r\n    if (!show) {\r\n      return null;\r\n    }\r\n    return (\r\n    <div>\r\n      <Dialog\r\n        open={show}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"アプリケーションの更新\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            アプリケーションの更新データがあります。<br/>\r\n            今すぐ更新しますか？\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={this.handleClose} color=\"primary\">\r\n            無視\r\n          </Button>\r\n          <Button onClick={this.onUpdate} color=\"primary\" autoFocus>\r\n            更新\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n              const event = new Event(\"newContentAvailable\");\n              window.dispatchEvent(event);\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import * as React from 'react';\nimport \"./styles/App.css\";\nimport Router from \"./route\";\nimport Initialize from \"./components/initialize\";\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Dark from './themes/dark';\nimport Light from './themes/light';\nimport ReloadModal from './view/components/update';\nimport { Provider, Subscribe } from 'unstated';\nimport GlobalContainer from './components/context/global';\n\nexport default function App() {\n\n  document.title = \"BPI Manager\";\n  return (\n    <Provider>\n      <Subscribe to={[GlobalContainer]}>\n        {global =>{\n          return (\n            <ThemeProvider theme={global.state.theme === \"dark\" ? Dark : Light}>\n              <CssBaseline />\n              <Initialize/>\n              <div id={global.state.theme === \"dark\" ? \"__dark\" : \"__light\"}>\n                <Router/>\n              </div>\n              <ReloadModal />\n            </ThemeProvider>)\n        }}\n      </Subscribe>\n    </Provider>\n  );\n\n}\n"],"sourceRoot":""}